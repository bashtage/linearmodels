Search.setIndex({"docnames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.alphas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.betas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.iterations", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.name", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.nobs", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.params", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "asset-pricing/examples/examples", "asset-pricing/examples/formulas", "asset-pricing/index", "asset-pricing/introduction", "asset-pricing/mathematical-formula", "asset-pricing/reference", "changes", "compatibility", "compatibility/linearmodels.compat.statsmodels.Summary", "compatibility/linearmodels.compat.statsmodels.Summary.add_extra_txt", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_2cols", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_params", "compatibility/linearmodels.compat.statsmodels.Summary.as_csv", "compatibility/linearmodels.compat.statsmodels.Summary.as_html", "compatibility/linearmodels.compat.statsmodels.Summary.as_latex", "compatibility/linearmodels.compat.statsmodels.Summary.as_text", "contributing", "index", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "iv/absorbing/linearmodels.iv.absorbing.Interaction", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse", "iv/examples/absorbing-regression", "iv/examples/advanced-examples", "iv/examples/basic-examples", "iv/examples/using-formulas", "iv/index", "iv/introduction", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.KernelCovariance", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2", "iv/iv/linearmodels.iv.covariance.kernel_optimal_bandwidth", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "iv/iv/linearmodels.iv.data.IVData", "iv/iv/linearmodels.iv.data.IVData.cols", "iv/iv/linearmodels.iv.data.IVData.drop", "iv/iv/linearmodels.iv.data.IVData.isnull", "iv/iv/linearmodels.iv.data.IVData.labels", "iv/iv/linearmodels.iv.data.IVData.ndarray", "iv/iv/linearmodels.iv.data.IVData.ndim", "iv/iv/linearmodels.iv.data.IVData.pandas", "iv/iv/linearmodels.iv.data.IVData.rows", "iv/iv/linearmodels.iv.data.IVData.shape", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.model.IV2SLS", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters", "iv/iv/linearmodels.iv.model.IV2SLS.fit", "iv/iv/linearmodels.iv.model.IV2SLS.formula", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant", "iv/iv/linearmodels.iv.model.IV2SLS.isnull", "iv/iv/linearmodels.iv.model.IV2SLS.notnull", "iv/iv/linearmodels.iv.model.IV2SLS.predict", "iv/iv/linearmodels.iv.model.IV2SLS.resids", "iv/iv/linearmodels.iv.model.IV2SLS.wresids", "iv/iv/linearmodels.iv.model.IVGMM", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMM.fit", "iv/iv/linearmodels.iv.model.IVGMM.formula", "iv/iv/linearmodels.iv.model.IVGMM.from_formula", "iv/iv/linearmodels.iv.model.IVGMM.has_constant", "iv/iv/linearmodels.iv.model.IVGMM.isnull", "iv/iv/linearmodels.iv.model.IVGMM.notnull", "iv/iv/linearmodels.iv.model.IVGMM.predict", "iv/iv/linearmodels.iv.model.IVGMM.resids", "iv/iv/linearmodels.iv.model.IVGMM.wresids", "iv/iv/linearmodels.iv.model.IVGMMCUE", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.j", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids", "iv/iv/linearmodels.iv.model.IVLIML", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters", "iv/iv/linearmodels.iv.model.IVLIML.fit", "iv/iv/linearmodels.iv.model.IVLIML.formula", "iv/iv/linearmodels.iv.model.IVLIML.from_formula", "iv/iv/linearmodels.iv.model.IVLIML.has_constant", "iv/iv/linearmodels.iv.model.IVLIML.isnull", "iv/iv/linearmodels.iv.model.IVLIML.notnull", "iv/iv/linearmodels.iv.model.IVLIML.predict", "iv/iv/linearmodels.iv.model.IVLIML.resids", "iv/iv/linearmodels.iv.model.IVLIML.wresids", "iv/iv/linearmodels.iv.model._OLS", "iv/iv/linearmodels.iv.model._OLS.estimate_parameters", "iv/iv/linearmodels.iv.model._OLS.fit", "iv/iv/linearmodels.iv.model._OLS.formula", "iv/iv/linearmodels.iv.model._OLS.from_formula", "iv/iv/linearmodels.iv.model._OLS.has_constant", "iv/iv/linearmodels.iv.model._OLS.isnull", "iv/iv/linearmodels.iv.model._OLS.notnull", "iv/iv/linearmodels.iv.model._OLS.predict", "iv/iv/linearmodels.iv.model._OLS.resids", "iv/iv/linearmodels.iv.model._OLS.wresids", "iv/iv/linearmodels.iv.results.FirstStageResults", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics", "iv/iv/linearmodels.iv.results.FirstStageResults.individual", "iv/iv/linearmodels.iv.results.FirstStageResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int", "iv/iv/linearmodels.iv.results.IVGMMResults.cov", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa", "iv/iv/linearmodels.iv.results.IVGMMResults.method", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs", "iv/iv/linearmodels.iv.results.IVGMMResults.params", "iv/iv/linearmodels.iv.results.IVGMMResults.predict", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.resids", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVGMMResults.s2", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors", "iv/iv/linearmodels.iv.results.IVGMMResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids", "iv/iv/linearmodels.iv.results.IVModelComparison", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs", "iv/iv/linearmodels.iv.results.IVModelComparison.params", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors", "iv/iv/linearmodels.iv.results.IVModelComparison.summary", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats", "iv/iv/linearmodels.iv.results.IVResults", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin", "iv/iv/linearmodels.iv.results.IVResults.basmann", "iv/iv/linearmodels.iv.results.IVResults.basmann_f", "iv/iv/linearmodels.iv.results.IVResults.conf_int", "iv/iv/linearmodels.iv.results.IVResults.cov", "iv/iv/linearmodels.iv.results.IVResults.cov_config", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVResults.cov_type", "iv/iv/linearmodels.iv.results.IVResults.debiased", "iv/iv/linearmodels.iv.results.IVResults.df_model", "iv/iv/linearmodels.iv.results.IVResults.df_resid", "iv/iv/linearmodels.iv.results.IVResults.durbin", "iv/iv/linearmodels.iv.results.IVResults.f_statistic", "iv/iv/linearmodels.iv.results.IVResults.first_stage", "iv/iv/linearmodels.iv.results.IVResults.fitted_values", "iv/iv/linearmodels.iv.results.IVResults.has_constant", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVResults.kappa", "iv/iv/linearmodels.iv.results.IVResults.method", "iv/iv/linearmodels.iv.results.IVResults.model_ss", "iv/iv/linearmodels.iv.results.IVResults.nobs", "iv/iv/linearmodels.iv.results.IVResults.params", "iv/iv/linearmodels.iv.results.IVResults.predict", "iv/iv/linearmodels.iv.results.IVResults.pvalues", "iv/iv/linearmodels.iv.results.IVResults.resid_ss", "iv/iv/linearmodels.iv.results.IVResults.resids", "iv/iv/linearmodels.iv.results.IVResults.rsquared", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVResults.s2", "iv/iv/linearmodels.iv.results.IVResults.sargan", "iv/iv/linearmodels.iv.results.IVResults.std_errors", "iv/iv/linearmodels.iv.results.IVResults.summary", "iv/iv/linearmodels.iv.results.IVResults.total_ss", "iv/iv/linearmodels.iv.results.IVResults.tstats", "iv/iv/linearmodels.iv.results.IVResults.wald_test", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score", "iv/iv/linearmodels.iv.results.IVResults.wresids", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman", "iv/iv/linearmodels.iv.results.OLSResults", "iv/iv/linearmodels.iv.results.OLSResults.conf_int", "iv/iv/linearmodels.iv.results.OLSResults.cov", "iv/iv/linearmodels.iv.results.OLSResults.cov_config", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator", "iv/iv/linearmodels.iv.results.OLSResults.cov_type", "iv/iv/linearmodels.iv.results.OLSResults.debiased", "iv/iv/linearmodels.iv.results.OLSResults.df_model", "iv/iv/linearmodels.iv.results.OLSResults.df_resid", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values", "iv/iv/linearmodels.iv.results.OLSResults.has_constant", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic", "iv/iv/linearmodels.iv.results.OLSResults.kappa", "iv/iv/linearmodels.iv.results.OLSResults.method", "iv/iv/linearmodels.iv.results.OLSResults.model_ss", "iv/iv/linearmodels.iv.results.OLSResults.nobs", "iv/iv/linearmodels.iv.results.OLSResults.params", "iv/iv/linearmodels.iv.results.OLSResults.predict", "iv/iv/linearmodels.iv.results.OLSResults.pvalues", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss", "iv/iv/linearmodels.iv.results.OLSResults.resids", "iv/iv/linearmodels.iv.results.OLSResults.rsquared", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj", "iv/iv/linearmodels.iv.results.OLSResults.s2", "iv/iv/linearmodels.iv.results.OLSResults.std_errors", "iv/iv/linearmodels.iv.results.OLSResults.summary", "iv/iv/linearmodels.iv.results.OLSResults.total_ss", "iv/iv/linearmodels.iv.results.OLSResults.tstats", "iv/iv/linearmodels.iv.results.OLSResults.wald_test", "iv/iv/linearmodels.iv.results.OLSResults.wresids", "iv/iv/linearmodels.iv.results.compare", "iv/mathematical-formula", "iv/reference", "panel/examples/data-formats", "panel/examples/examples", "panel/examples/using-formulas", "panel/faq", "panel/index", "panel/introduction", "panel/mathematical-formula", "panel/pandas", "panel/panel/linearmodels.panel.covariance.ACCovariance", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps", "panel/panel/linearmodels.panel.covariance.ACCovariance.name", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2", "panel/panel/linearmodels.panel.covariance.DriscollKraay", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2", "panel/panel/linearmodels.panel.data.PanelData", "panel/panel/linearmodels.panel.data.PanelData.copy", "panel/panel/linearmodels.panel.data.PanelData.count", "panel/panel/linearmodels.panel.data.PanelData.dataframe", "panel/panel/linearmodels.panel.data.PanelData.demean", "panel/panel/linearmodels.panel.data.PanelData.drop", "panel/panel/linearmodels.panel.data.PanelData.dummies", "panel/panel/linearmodels.panel.data.PanelData.entities", "panel/panel/linearmodels.panel.data.PanelData.entity_ids", "panel/panel/linearmodels.panel.data.PanelData.first_difference", "panel/panel/linearmodels.panel.data.PanelData.general_demean", "panel/panel/linearmodels.panel.data.PanelData.index", "panel/panel/linearmodels.panel.data.PanelData.isnull", "panel/panel/linearmodels.panel.data.PanelData.mean", "panel/panel/linearmodels.panel.data.PanelData.ndim", "panel/panel/linearmodels.panel.data.PanelData.nentity", "panel/panel/linearmodels.panel.data.PanelData.nobs", "panel/panel/linearmodels.panel.data.PanelData.nvar", "panel/panel/linearmodels.panel.data.PanelData.panel", "panel/panel/linearmodels.panel.data.PanelData.shape", "panel/panel/linearmodels.panel.data.PanelData.time", "panel/panel/linearmodels.panel.data.PanelData.time_ids", "panel/panel/linearmodels.panel.data.PanelData.values2d", "panel/panel/linearmodels.panel.data.PanelData.values3d", "panel/panel/linearmodels.panel.data.PanelData.vars", "panel/panel/linearmodels.panel.data._Panel", "panel/panel/linearmodels.panel.data._Panel.from_array", "panel/panel/linearmodels.panel.data._Panel.items", "panel/panel/linearmodels.panel.data._Panel.major_axis", "panel/panel/linearmodels.panel.data._Panel.minor_axis", "panel/panel/linearmodels.panel.data._Panel.shape", "panel/panel/linearmodels.panel.data._Panel.to_frame", "panel/panel/linearmodels.panel.data._Panel.values", "panel/panel/linearmodels.panel.model.BetweenOLS", "panel/panel/linearmodels.panel.model.BetweenOLS.fit", "panel/panel/linearmodels.panel.model.BetweenOLS.formula", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null", "panel/panel/linearmodels.panel.model.BetweenOLS.predict", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.FamaMacBeth", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects", "panel/panel/linearmodels.panel.model.PanelOLS.fit", "panel/panel/linearmodels.panel.model.PanelOLS.formula", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant", "panel/panel/linearmodels.panel.model.PanelOLS.not_null", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects", "panel/panel/linearmodels.panel.model.PanelOLS.predict", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects", "panel/panel/linearmodels.panel.model.PooledOLS", "panel/panel/linearmodels.panel.model.PooledOLS.fit", "panel/panel/linearmodels.panel.model.PooledOLS.formula", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant", "panel/panel/linearmodels.panel.model.PooledOLS.not_null", "panel/panel/linearmodels.panel.model.PooledOLS.predict", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.RandomEffects", "panel/panel/linearmodels.panel.model.RandomEffects.fit", "panel/panel/linearmodels.panel.model.RandomEffects.formula", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant", "panel/panel/linearmodels.panel.model.RandomEffects.not_null", "panel/panel/linearmodels.panel.model.RandomEffects.predict", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters", "panel/panel/linearmodels.panel.results.FamaMacBethResults", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids", "panel/panel/linearmodels.panel.results.PanelEffectsResults", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids", "panel/panel/linearmodels.panel.results.PanelModelComparison", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs", "panel/panel/linearmodels.panel.results.PanelModelComparison.params", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats", "panel/panel/linearmodels.panel.results.PanelResults", "panel/panel/linearmodels.panel.results.PanelResults.conf_int", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelResults.cov", "panel/panel/linearmodels.panel.results.PanelResults.df_model", "panel/panel/linearmodels.panel.results.PanelResults.df_resid", "panel/panel/linearmodels.panel.results.PanelResults.entity_info", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelResults.loglik", "panel/panel/linearmodels.panel.results.PanelResults.model_ss", "panel/panel/linearmodels.panel.results.PanelResults.name", "panel/panel/linearmodels.panel.results.PanelResults.nobs", "panel/panel/linearmodels.panel.results.PanelResults.params", "panel/panel/linearmodels.panel.results.PanelResults.predict", "panel/panel/linearmodels.panel.results.PanelResults.pvalues", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelResults.resids", "panel/panel/linearmodels.panel.results.PanelResults.rsquared", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelResults.s2", "panel/panel/linearmodels.panel.results.PanelResults.std_errors", "panel/panel/linearmodels.panel.results.PanelResults.summary", "panel/panel/linearmodels.panel.results.PanelResults.time_info", "panel/panel/linearmodels.panel.results.PanelResults.total_ss", "panel/panel/linearmodels.panel.results.PanelResults.tstats", "panel/panel/linearmodels.panel.results.PanelResults.wald_test", "panel/panel/linearmodels.panel.results.PanelResults.wresids", "panel/panel/linearmodels.panel.results.RandomEffectsResults", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids", "panel/panel/linearmodels.panel.results.compare", "panel/panel/linearmodels.panel.utility.PanelModelData", "panel/panel/linearmodels.panel.utility.PanelModelData.clusters", "panel/panel/linearmodels.panel.utility.PanelModelData.count", "panel/panel/linearmodels.panel.utility.PanelModelData.data", "panel/panel/linearmodels.panel.utility.PanelModelData.index", "panel/panel/linearmodels.panel.utility.PanelModelData.other_effects", "panel/panel/linearmodels.panel.utility.PanelModelData.weights", "panel/panel/linearmodels.panel.utility.generate_panel_data", "panel/reference", "plan", "references", "system/examples/examples", "system/examples/formulas", "system/examples/three-stage-ls", "system/index", "system/mathematical-formula", "system/reference", "system/system/linearmodels.system.covariance.ClusteredCovariance", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.HomoskedasticCovariance", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.KernelCovariance", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.KernelCovariance.cov", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config", "system/system/linearmodels.system.covariance.KernelCovariance.kernel", "system/system/linearmodels.system.covariance.KernelCovariance.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "system/system/linearmodels.system.model.IV3SLS", "system/system/linearmodels.system.model.IV3SLS.add_constraints", "system/system/linearmodels.system.model.IV3SLS.constraints", "system/system/linearmodels.system.model.IV3SLS.fit", "system/system/linearmodels.system.model.IV3SLS.formula", "system/system/linearmodels.system.model.IV3SLS.from_formula", "system/system/linearmodels.system.model.IV3SLS.has_constant", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv", "system/system/linearmodels.system.model.IV3SLS.param_names", "system/system/linearmodels.system.model.IV3SLS.predict", "system/system/linearmodels.system.model.IV3SLS.reset_constraints", "system/system/linearmodels.system.model.IVSystemGMM", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints", "system/system/linearmodels.system.model.IVSystemGMM.constraints", "system/system/linearmodels.system.model.IVSystemGMM.fit", "system/system/linearmodels.system.model.IVSystemGMM.formula", "system/system/linearmodels.system.model.IVSystemGMM.from_formula", "system/system/linearmodels.system.model.IVSystemGMM.has_constant", "system/system/linearmodels.system.model.IVSystemGMM.param_names", "system/system/linearmodels.system.model.IVSystemGMM.predict", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints", "system/system/linearmodels.system.model.LinearConstraint", "system/system/linearmodels.system.model.LinearConstraint.a", "system/system/linearmodels.system.model.LinearConstraint.q", "system/system/linearmodels.system.model.LinearConstraint.r", "system/system/linearmodels.system.model.LinearConstraint.t", "system/system/linearmodels.system.model.SUR", "system/system/linearmodels.system.model.SUR.add_constraints", "system/system/linearmodels.system.model.SUR.constraints", "system/system/linearmodels.system.model.SUR.fit", "system/system/linearmodels.system.model.SUR.formula", "system/system/linearmodels.system.model.SUR.from_formula", "system/system/linearmodels.system.model.SUR.has_constant", "system/system/linearmodels.system.model.SUR.multivariate_ls", "system/system/linearmodels.system.model.SUR.param_names", "system/system/linearmodels.system.model.SUR.predict", "system/system/linearmodels.system.model.SUR.reset_constraints", "system/system/linearmodels.system.results.GMMSystemResults", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan", "system/system/linearmodels.system.results.GMMSystemResults.conf_int", "system/system/linearmodels.system.results.GMMSystemResults.cov", "system/system/linearmodels.system.results.GMMSystemResults.cov_config", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator", "system/system/linearmodels.system.results.GMMSystemResults.debiased", "system/system/linearmodels.system.results.GMMSystemResults.df_model", "system/system/linearmodels.system.results.GMMSystemResults.df_resid", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels", "system/system/linearmodels.system.results.GMMSystemResults.equations", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values", "system/system/linearmodels.system.results.GMMSystemResults.iterations", "system/system/linearmodels.system.results.GMMSystemResults.j_stat", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio", "system/system/linearmodels.system.results.GMMSystemResults.method", "system/system/linearmodels.system.results.GMMSystemResults.model", "system/system/linearmodels.system.results.GMMSystemResults.model_ss", "system/system/linearmodels.system.results.GMMSystemResults.nobs", "system/system/linearmodels.system.results.GMMSystemResults.params", "system/system/linearmodels.system.results.GMMSystemResults.predict", "system/system/linearmodels.system.results.GMMSystemResults.pvalues", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss", "system/system/linearmodels.system.results.GMMSystemResults.resids", "system/system/linearmodels.system.results.GMMSystemResults.rsquared", "system/system/linearmodels.system.results.GMMSystemResults.sigma", "system/system/linearmodels.system.results.GMMSystemResults.std_errors", "system/system/linearmodels.system.results.GMMSystemResults.summary", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared", "system/system/linearmodels.system.results.GMMSystemResults.total_ss", "system/system/linearmodels.system.results.GMMSystemResults.tstats", "system/system/linearmodels.system.results.GMMSystemResults.w", "system/system/linearmodels.system.results.GMMSystemResults.weight_config", "system/system/linearmodels.system.results.GMMSystemResults.weight_type", "system/system/linearmodels.system.results.GMMSystemResults.wresids", "system/system/linearmodels.system.results.SystemResults", "system/system/linearmodels.system.results.SystemResults.breusch_pagan", "system/system/linearmodels.system.results.SystemResults.conf_int", "system/system/linearmodels.system.results.SystemResults.cov", "system/system/linearmodels.system.results.SystemResults.cov_config", "system/system/linearmodels.system.results.SystemResults.cov_estimator", "system/system/linearmodels.system.results.SystemResults.debiased", "system/system/linearmodels.system.results.SystemResults.df_model", "system/system/linearmodels.system.results.SystemResults.df_resid", "system/system/linearmodels.system.results.SystemResults.equation_labels", "system/system/linearmodels.system.results.SystemResults.equations", "system/system/linearmodels.system.results.SystemResults.fitted_values", "system/system/linearmodels.system.results.SystemResults.iterations", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio", "system/system/linearmodels.system.results.SystemResults.method", "system/system/linearmodels.system.results.SystemResults.model", "system/system/linearmodels.system.results.SystemResults.model_ss", "system/system/linearmodels.system.results.SystemResults.nobs", "system/system/linearmodels.system.results.SystemResults.params", "system/system/linearmodels.system.results.SystemResults.predict", "system/system/linearmodels.system.results.SystemResults.pvalues", "system/system/linearmodels.system.results.SystemResults.resid_ss", "system/system/linearmodels.system.results.SystemResults.resids", "system/system/linearmodels.system.results.SystemResults.rsquared", "system/system/linearmodels.system.results.SystemResults.sigma", "system/system/linearmodels.system.results.SystemResults.std_errors", "system/system/linearmodels.system.results.SystemResults.summary", "system/system/linearmodels.system.results.SystemResults.system_rsquared", "system/system/linearmodels.system.results.SystemResults.total_ss", "system/system/linearmodels.system.results.SystemResults.tstats", "system/system/linearmodels.system.results.SystemResults.wresids", "utility", "utility/linearmodels.shared.covariance.cov_cluster", "utility/linearmodels.shared.covariance.cov_kernel", "utility/linearmodels.shared.covariance.group_debias_coefficient", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "utility/linearmodels.shared.hypotheses.WaldTestStatistic", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat", "utility/linearmodels.shared.utility.AttrDict", "utility/linearmodels.shared.utility.AttrDict.clear", "utility/linearmodels.shared.utility.AttrDict.copy", "utility/linearmodels.shared.utility.AttrDict.get", "utility/linearmodels.shared.utility.AttrDict.items", "utility/linearmodels.shared.utility.AttrDict.keys", "utility/linearmodels.shared.utility.AttrDict.pop", "utility/linearmodels.shared.utility.AttrDict.popitem", "utility/linearmodels.shared.utility.AttrDict.setdefault", "utility/linearmodels.shared.utility.AttrDict.update", "utility/linearmodels.shared.utility.AttrDict.values"], "filenames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.alphas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.betas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.iterations.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.name.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.nobs.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.params.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats.rst", "asset-pricing/examples/examples.ipynb", "asset-pricing/examples/formulas.ipynb", "asset-pricing/index.rst", "asset-pricing/introduction.rst", "asset-pricing/mathematical-formula.rst", "asset-pricing/reference.rst", "changes.rst", "compatibility.rst", "compatibility/linearmodels.compat.statsmodels.Summary.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_extra_txt.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_2cols.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_params.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_csv.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_html.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_latex.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_text.rst", "contributing.rst", "index.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse.rst", "iv/examples/absorbing-regression.ipynb", "iv/examples/advanced-examples.ipynb", "iv/examples/basic-examples.ipynb", "iv/examples/using-formulas.ipynb", "iv/index.rst", "iv/introduction.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.kernel_optimal_bandwidth.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral.rst", "iv/iv/linearmodels.iv.data.IVData.rst", "iv/iv/linearmodels.iv.data.IVData.cols.rst", "iv/iv/linearmodels.iv.data.IVData.drop.rst", "iv/iv/linearmodels.iv.data.IVData.isnull.rst", "iv/iv/linearmodels.iv.data.IVData.labels.rst", "iv/iv/linearmodels.iv.data.IVData.ndarray.rst", "iv/iv/linearmodels.iv.data.IVData.ndim.rst", "iv/iv/linearmodels.iv.data.IVData.pandas.rst", "iv/iv/linearmodels.iv.data.IVData.rows.rst", "iv/iv/linearmodels.iv.data.IVData.shape.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.model.IV2SLS.rst", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IV2SLS.fit.rst", "iv/iv/linearmodels.iv.model.IV2SLS.formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant.rst", "iv/iv/linearmodels.iv.model.IV2SLS.isnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.notnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.predict.rst", "iv/iv/linearmodels.iv.model.IV2SLS.resids.rst", "iv/iv/linearmodels.iv.model.IV2SLS.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMM.rst", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMM.fit.rst", "iv/iv/linearmodels.iv.model.IVGMM.formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMM.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.predict.rst", "iv/iv/linearmodels.iv.model.IVGMM.resids.rst", "iv/iv/linearmodels.iv.model.IVGMM.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.j.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids.rst", "iv/iv/linearmodels.iv.model.IVLIML.rst", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVLIML.fit.rst", "iv/iv/linearmodels.iv.model.IVLIML.formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.from_formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.has_constant.rst", "iv/iv/linearmodels.iv.model.IVLIML.isnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.notnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.predict.rst", "iv/iv/linearmodels.iv.model.IVLIML.resids.rst", "iv/iv/linearmodels.iv.model.IVLIML.wresids.rst", "iv/iv/linearmodels.iv.model._OLS.rst", "iv/iv/linearmodels.iv.model._OLS.estimate_parameters.rst", "iv/iv/linearmodels.iv.model._OLS.fit.rst", "iv/iv/linearmodels.iv.model._OLS.formula.rst", "iv/iv/linearmodels.iv.model._OLS.from_formula.rst", "iv/iv/linearmodels.iv.model._OLS.has_constant.rst", "iv/iv/linearmodels.iv.model._OLS.isnull.rst", "iv/iv/linearmodels.iv.model._OLS.notnull.rst", "iv/iv/linearmodels.iv.model._OLS.predict.rst", "iv/iv/linearmodels.iv.model._OLS.resids.rst", "iv/iv/linearmodels.iv.model._OLS.wresids.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.individual.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.method.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.params.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.predict.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resids.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.s2.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.params.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.summary.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.rst", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann_f.rst", "iv/iv/linearmodels.iv.results.IVResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVResults.cov.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVResults.durbin.rst", "iv/iv/linearmodels.iv.results.IVResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVResults.method.rst", "iv/iv/linearmodels.iv.results.IVResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVResults.params.rst", "iv/iv/linearmodels.iv.results.IVResults.predict.rst", "iv/iv/linearmodels.iv.results.IVResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.resids.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVResults.s2.rst", "iv/iv/linearmodels.iv.results.IVResults.sargan.rst", "iv/iv/linearmodels.iv.results.IVResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVResults.summary.rst", "iv/iv/linearmodels.iv.results.IVResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score.rst", "iv/iv/linearmodels.iv.results.IVResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman.rst", "iv/iv/linearmodels.iv.results.OLSResults.rst", "iv/iv/linearmodels.iv.results.OLSResults.conf_int.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_config.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_type.rst", "iv/iv/linearmodels.iv.results.OLSResults.debiased.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_model.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_resid.rst", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.OLSResults.has_constant.rst", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.OLSResults.kappa.rst", "iv/iv/linearmodels.iv.results.OLSResults.method.rst", "iv/iv/linearmodels.iv.results.OLSResults.model_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.nobs.rst", "iv/iv/linearmodels.iv.results.OLSResults.params.rst", "iv/iv/linearmodels.iv.results.OLSResults.predict.rst", "iv/iv/linearmodels.iv.results.OLSResults.pvalues.rst", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.resids.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.OLSResults.s2.rst", "iv/iv/linearmodels.iv.results.OLSResults.std_errors.rst", "iv/iv/linearmodels.iv.results.OLSResults.summary.rst", "iv/iv/linearmodels.iv.results.OLSResults.total_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.tstats.rst", "iv/iv/linearmodels.iv.results.OLSResults.wald_test.rst", "iv/iv/linearmodels.iv.results.OLSResults.wresids.rst", "iv/iv/linearmodels.iv.results.compare.rst", "iv/mathematical-formula.rst", "iv/reference.rst", "panel/examples/data-formats.ipynb", "panel/examples/examples.ipynb", "panel/examples/using-formulas.ipynb", "panel/faq.rst", "panel/index.rst", "panel/introduction.rst", "panel/mathematical-formula.rst", "panel/pandas.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.data.PanelData.rst", "panel/panel/linearmodels.panel.data.PanelData.copy.rst", "panel/panel/linearmodels.panel.data.PanelData.count.rst", "panel/panel/linearmodels.panel.data.PanelData.dataframe.rst", "panel/panel/linearmodels.panel.data.PanelData.demean.rst", "panel/panel/linearmodels.panel.data.PanelData.drop.rst", "panel/panel/linearmodels.panel.data.PanelData.dummies.rst", "panel/panel/linearmodels.panel.data.PanelData.entities.rst", "panel/panel/linearmodels.panel.data.PanelData.entity_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.first_difference.rst", "panel/panel/linearmodels.panel.data.PanelData.general_demean.rst", "panel/panel/linearmodels.panel.data.PanelData.index.rst", "panel/panel/linearmodels.panel.data.PanelData.isnull.rst", "panel/panel/linearmodels.panel.data.PanelData.mean.rst", "panel/panel/linearmodels.panel.data.PanelData.ndim.rst", "panel/panel/linearmodels.panel.data.PanelData.nentity.rst", "panel/panel/linearmodels.panel.data.PanelData.nobs.rst", "panel/panel/linearmodels.panel.data.PanelData.nvar.rst", "panel/panel/linearmodels.panel.data.PanelData.panel.rst", "panel/panel/linearmodels.panel.data.PanelData.shape.rst", "panel/panel/linearmodels.panel.data.PanelData.time.rst", "panel/panel/linearmodels.panel.data.PanelData.time_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.values2d.rst", "panel/panel/linearmodels.panel.data.PanelData.values3d.rst", "panel/panel/linearmodels.panel.data.PanelData.vars.rst", "panel/panel/linearmodels.panel.data._Panel.rst", "panel/panel/linearmodels.panel.data._Panel.from_array.rst", "panel/panel/linearmodels.panel.data._Panel.items.rst", "panel/panel/linearmodels.panel.data._Panel.major_axis.rst", "panel/panel/linearmodels.panel.data._Panel.minor_axis.rst", "panel/panel/linearmodels.panel.data._Panel.shape.rst", "panel/panel/linearmodels.panel.data._Panel.to_frame.rst", "panel/panel/linearmodels.panel.data._Panel.values.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.fit.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.predict.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.rst", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.fit.rst", "panel/panel/linearmodels.panel.model.PanelOLS.formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PanelOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.predict.rst", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects.rst", "panel/panel/linearmodels.panel.model.PooledOLS.rst", "panel/panel/linearmodels.panel.model.PooledOLS.fit.rst", "panel/panel/linearmodels.panel.model.PooledOLS.formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PooledOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PooledOLS.predict.rst", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.RandomEffects.rst", "panel/panel/linearmodels.panel.model.RandomEffects.fit.rst", "panel/panel/linearmodels.panel.model.RandomEffects.formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant.rst", "panel/panel/linearmodels.panel.model.RandomEffects.not_null.rst", "panel/panel/linearmodels.panel.model.RandomEffects.predict.rst", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.params.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.rst", "panel/panel/linearmodels.panel.results.PanelResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.name.rst", "panel/panel/linearmodels.panel.results.PanelResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelResults.params.rst", "panel/panel/linearmodels.panel.results.PanelResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelResults.wresids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.results.compare.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.clusters.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.count.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.data.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.index.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.other_effects.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.weights.rst", "panel/panel/linearmodels.panel.utility.generate_panel_data.rst", "panel/reference.rst", "plan.rst", "references.rst", "system/examples/examples.ipynb", "system/examples/formulas.ipynb", "system/examples/three-stage-ls.ipynb", "system/index.rst", "system/mathematical-formula.rst", "system/reference.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.KernelCovariance.rst", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.KernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.KernelCovariance.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.model.IV3SLS.rst", "system/system/linearmodels.system.model.IV3SLS.add_constraints.rst", "system/system/linearmodels.system.model.IV3SLS.constraints.rst", "system/system/linearmodels.system.model.IV3SLS.fit.rst", "system/system/linearmodels.system.model.IV3SLS.formula.rst", "system/system/linearmodels.system.model.IV3SLS.from_formula.rst", "system/system/linearmodels.system.model.IV3SLS.has_constant.rst", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv.rst", "system/system/linearmodels.system.model.IV3SLS.param_names.rst", "system/system/linearmodels.system.model.IV3SLS.predict.rst", "system/system/linearmodels.system.model.IV3SLS.reset_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.rst", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.fit.rst", "system/system/linearmodels.system.model.IVSystemGMM.formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.from_formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.has_constant.rst", "system/system/linearmodels.system.model.IVSystemGMM.param_names.rst", "system/system/linearmodels.system.model.IVSystemGMM.predict.rst", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints.rst", "system/system/linearmodels.system.model.LinearConstraint.rst", "system/system/linearmodels.system.model.LinearConstraint.a.rst", "system/system/linearmodels.system.model.LinearConstraint.q.rst", "system/system/linearmodels.system.model.LinearConstraint.r.rst", "system/system/linearmodels.system.model.LinearConstraint.t.rst", "system/system/linearmodels.system.model.SUR.rst", "system/system/linearmodels.system.model.SUR.add_constraints.rst", "system/system/linearmodels.system.model.SUR.constraints.rst", "system/system/linearmodels.system.model.SUR.fit.rst", "system/system/linearmodels.system.model.SUR.formula.rst", "system/system/linearmodels.system.model.SUR.from_formula.rst", "system/system/linearmodels.system.model.SUR.has_constant.rst", "system/system/linearmodels.system.model.SUR.multivariate_ls.rst", "system/system/linearmodels.system.model.SUR.param_names.rst", "system/system/linearmodels.system.model.SUR.predict.rst", "system/system/linearmodels.system.model.SUR.reset_constraints.rst", "system/system/linearmodels.system.results.GMMSystemResults.rst", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.GMMSystemResults.conf_int.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.GMMSystemResults.debiased.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_model.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_resid.rst", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels.rst", "system/system/linearmodels.system.results.GMMSystemResults.equations.rst", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values.rst", "system/system/linearmodels.system.results.GMMSystemResults.iterations.rst", "system/system/linearmodels.system.results.GMMSystemResults.j_stat.rst", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.GMMSystemResults.method.rst", "system/system/linearmodels.system.results.GMMSystemResults.model.rst", "system/system/linearmodels.system.results.GMMSystemResults.model_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.nobs.rst", "system/system/linearmodels.system.results.GMMSystemResults.params.rst", "system/system/linearmodels.system.results.GMMSystemResults.predict.rst", "system/system/linearmodels.system.results.GMMSystemResults.pvalues.rst", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.resids.rst", "system/system/linearmodels.system.results.GMMSystemResults.rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.sigma.rst", "system/system/linearmodels.system.results.GMMSystemResults.std_errors.rst", "system/system/linearmodels.system.results.GMMSystemResults.summary.rst", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.total_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.tstats.rst", "system/system/linearmodels.system.results.GMMSystemResults.w.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_type.rst", "system/system/linearmodels.system.results.GMMSystemResults.wresids.rst", "system/system/linearmodels.system.results.SystemResults.rst", "system/system/linearmodels.system.results.SystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.SystemResults.conf_int.rst", "system/system/linearmodels.system.results.SystemResults.cov.rst", "system/system/linearmodels.system.results.SystemResults.cov_config.rst", "system/system/linearmodels.system.results.SystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.SystemResults.debiased.rst", "system/system/linearmodels.system.results.SystemResults.df_model.rst", "system/system/linearmodels.system.results.SystemResults.df_resid.rst", "system/system/linearmodels.system.results.SystemResults.equation_labels.rst", "system/system/linearmodels.system.results.SystemResults.equations.rst", "system/system/linearmodels.system.results.SystemResults.fitted_values.rst", "system/system/linearmodels.system.results.SystemResults.iterations.rst", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.SystemResults.method.rst", "system/system/linearmodels.system.results.SystemResults.model.rst", "system/system/linearmodels.system.results.SystemResults.model_ss.rst", "system/system/linearmodels.system.results.SystemResults.nobs.rst", "system/system/linearmodels.system.results.SystemResults.params.rst", "system/system/linearmodels.system.results.SystemResults.predict.rst", "system/system/linearmodels.system.results.SystemResults.pvalues.rst", "system/system/linearmodels.system.results.SystemResults.resid_ss.rst", "system/system/linearmodels.system.results.SystemResults.resids.rst", "system/system/linearmodels.system.results.SystemResults.rsquared.rst", "system/system/linearmodels.system.results.SystemResults.sigma.rst", "system/system/linearmodels.system.results.SystemResults.std_errors.rst", "system/system/linearmodels.system.results.SystemResults.summary.rst", "system/system/linearmodels.system.results.SystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.SystemResults.total_ss.rst", "system/system/linearmodels.system.results.SystemResults.tstats.rst", "system/system/linearmodels.system.results.SystemResults.wresids.rst", "utility.rst", "utility/linearmodels.shared.covariance.cov_cluster.rst", "utility/linearmodels.shared.covariance.cov_kernel.rst", "utility/linearmodels.shared.covariance.group_debias_coefficient.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat.rst", "utility/linearmodels.shared.utility.AttrDict.rst", "utility/linearmodels.shared.utility.AttrDict.clear.rst", "utility/linearmodels.shared.utility.AttrDict.copy.rst", "utility/linearmodels.shared.utility.AttrDict.get.rst", "utility/linearmodels.shared.utility.AttrDict.items.rst", "utility/linearmodels.shared.utility.AttrDict.keys.rst", "utility/linearmodels.shared.utility.AttrDict.pop.rst", "utility/linearmodels.shared.utility.AttrDict.popitem.rst", "utility/linearmodels.shared.utility.AttrDict.setdefault.rst", "utility/linearmodels.shared.utility.AttrDict.update.rst", "utility/linearmodels.shared.utility.AttrDict.values.rst"], "titles": ["linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "linearmodels.asset_pricing.covariance.KernelCovariance", "linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "linearmodels.asset_pricing.covariance.KernelCovariance.config", "linearmodels.asset_pricing.covariance.KernelCovariance.cov", "linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "linearmodels.asset_pricing.covariance.KernelCovariance.s", "linearmodels.asset_pricing.covariance.KernelCovariance.square", "linearmodels.asset_pricing.model.LinearFactorModel", "linearmodels.asset_pricing.model.LinearFactorModel.fit", "linearmodels.asset_pricing.model.LinearFactorModel.formula", "linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM", "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "linearmodels.asset_pricing.model.TradedFactorModel", "linearmodels.asset_pricing.model.TradedFactorModel.fit", "linearmodels.asset_pricing.model.TradedFactorModel.formula", "linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "linearmodels.asset_pricing.results.GMMFactorModelResults", "linearmodels.asset_pricing.results.GMMFactorModelResults.alphas", "linearmodels.asset_pricing.results.GMMFactorModelResults.betas", "linearmodels.asset_pricing.results.GMMFactorModelResults.cov", "linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator", "linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary", "linearmodels.asset_pricing.results.GMMFactorModelResults.iterations", "linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic", "linearmodels.asset_pricing.results.GMMFactorModelResults.name", "linearmodels.asset_pricing.results.GMMFactorModelResults.nobs", "linearmodels.asset_pricing.results.GMMFactorModelResults.params", "linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues", "linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats", "linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared", "linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors", "linearmodels.asset_pricing.results.GMMFactorModelResults.summary", "linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss", "linearmodels.asset_pricing.results.GMMFactorModelResults.tstats", "linearmodels.asset_pricing.results.LinearFactorModelResults", "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "linearmodels.asset_pricing.results.LinearFactorModelResults.name", "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "linearmodels.asset_pricing.results.LinearFactorModelResults.params", "linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "Examples", "Using Formulas", "Linear Factor Models for Asset Pricing", "Introduction", "Formulas and Mathematical Detail", "Module Reference", "Change Log", "Compatibility", "linearmodels.compat.statsmodels.Summary", "linearmodels.compat.statsmodels.Summary.add_extra_txt", "linearmodels.compat.statsmodels.Summary.add_table_2cols", "linearmodels.compat.statsmodels.Summary.add_table_params", "linearmodels.compat.statsmodels.Summary.as_csv", "linearmodels.compat.statsmodels.Summary.as_html", "linearmodels.compat.statsmodels.Summary.as_latex", "linearmodels.compat.statsmodels.Summary.as_text", "Contributing", "linearmodels", "linearmodels.iv.absorbing.AbsorbingLS", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "linearmodels.iv.absorbing.AbsorbingLS.dependent", "linearmodels.iv.absorbing.AbsorbingLS.exog", "linearmodels.iv.absorbing.AbsorbingLS.fit", "linearmodels.iv.absorbing.AbsorbingLS.has_constant", "linearmodels.iv.absorbing.AbsorbingLS.instruments", "linearmodels.iv.absorbing.AbsorbingLS.resids", "linearmodels.iv.absorbing.AbsorbingLS.weights", "linearmodels.iv.absorbing.AbsorbingLS.wresids", "linearmodels.iv.absorbing.AbsorbingLSResults", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "linearmodels.iv.absorbing.AbsorbingLSResults.cov", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "linearmodels.iv.absorbing.AbsorbingLSResults.method", "linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "linearmodels.iv.absorbing.AbsorbingLSResults.params", "linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.resids", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "linearmodels.iv.absorbing.AbsorbingLSResults.s2", "linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "linearmodels.iv.absorbing.AbsorbingLSResults.summary", "linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "linearmodels.iv.absorbing.Interaction", "linearmodels.iv.absorbing.Interaction.cat", "linearmodels.iv.absorbing.Interaction.cont", "linearmodels.iv.absorbing.Interaction.drop", "linearmodels.iv.absorbing.Interaction.from_frame", "linearmodels.iv.absorbing.Interaction.hash", "linearmodels.iv.absorbing.Interaction.isnull", "linearmodels.iv.absorbing.Interaction.nobs", "linearmodels.iv.absorbing.Interaction.sparse", "Absorbing Regression", "Further Examples", "Basic Examples", "Using formulas to specify models", "Instrumental Variable Estimation", "Introduction", "linearmodels.iv.covariance.ClusteredCovariance", "linearmodels.iv.covariance.ClusteredCovariance.config", "linearmodels.iv.covariance.ClusteredCovariance.cov", "linearmodels.iv.covariance.ClusteredCovariance.debiased", "linearmodels.iv.covariance.ClusteredCovariance.s", "linearmodels.iv.covariance.ClusteredCovariance.s2", "linearmodels.iv.covariance.HeteroskedasticCovariance", "linearmodels.iv.covariance.HeteroskedasticCovariance.config", "linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "linearmodels.iv.covariance.HeteroskedasticCovariance.s", "linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "linearmodels.iv.covariance.HomoskedasticCovariance", "linearmodels.iv.covariance.HomoskedasticCovariance.config", "linearmodels.iv.covariance.HomoskedasticCovariance.cov", "linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "linearmodels.iv.covariance.HomoskedasticCovariance.s", "linearmodels.iv.covariance.HomoskedasticCovariance.s2", "linearmodels.iv.covariance.KernelCovariance", "linearmodels.iv.covariance.KernelCovariance.config", "linearmodels.iv.covariance.KernelCovariance.cov", "linearmodels.iv.covariance.KernelCovariance.debiased", "linearmodels.iv.covariance.KernelCovariance.s", "linearmodels.iv.covariance.KernelCovariance.s2", "linearmodels.iv.covariance.kernel_optimal_bandwidth", "linearmodels.iv.covariance.kernel_weight_bartlett", "linearmodels.iv.covariance.kernel_weight_parzen", "linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "linearmodels.iv.data.IVData", "linearmodels.iv.data.IVData.cols", "linearmodels.iv.data.IVData.drop", "linearmodels.iv.data.IVData.isnull", "linearmodels.iv.data.IVData.labels", "linearmodels.iv.data.IVData.ndarray", "linearmodels.iv.data.IVData.ndim", "linearmodels.iv.data.IVData.pandas", "linearmodels.iv.data.IVData.rows", "linearmodels.iv.data.IVData.shape", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.IVGMMCovariance", "linearmodels.iv.gmm.IVGMMCovariance.config", "linearmodels.iv.gmm.IVGMMCovariance.cov", "linearmodels.iv.gmm.IVGMMCovariance.debiased", "linearmodels.iv.gmm.IVGMMCovariance.s", "linearmodels.iv.gmm.IVGMMCovariance.s2", "linearmodels.iv.gmm.KernelWeightMatrix", "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "linearmodels.iv.gmm.KernelWeightMatrix.config", "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "linearmodels.iv.model.IV2SLS", "linearmodels.iv.model.IV2SLS.estimate_parameters", "linearmodels.iv.model.IV2SLS.fit", "linearmodels.iv.model.IV2SLS.formula", "linearmodels.iv.model.IV2SLS.from_formula", "linearmodels.iv.model.IV2SLS.has_constant", "linearmodels.iv.model.IV2SLS.isnull", "linearmodels.iv.model.IV2SLS.notnull", "linearmodels.iv.model.IV2SLS.predict", "linearmodels.iv.model.IV2SLS.resids", "linearmodels.iv.model.IV2SLS.wresids", "linearmodels.iv.model.IVGMM", "linearmodels.iv.model.IVGMM.estimate_parameters", "linearmodels.iv.model.IVGMM.fit", "linearmodels.iv.model.IVGMM.formula", "linearmodels.iv.model.IVGMM.from_formula", "linearmodels.iv.model.IVGMM.has_constant", "linearmodels.iv.model.IVGMM.isnull", "linearmodels.iv.model.IVGMM.notnull", "linearmodels.iv.model.IVGMM.predict", "linearmodels.iv.model.IVGMM.resids", "linearmodels.iv.model.IVGMM.wresids", "linearmodels.iv.model.IVGMMCUE", "linearmodels.iv.model.IVGMMCUE.estimate_parameters", "linearmodels.iv.model.IVGMMCUE.fit", "linearmodels.iv.model.IVGMMCUE.formula", "linearmodels.iv.model.IVGMMCUE.from_formula", "linearmodels.iv.model.IVGMMCUE.has_constant", "linearmodels.iv.model.IVGMMCUE.isnull", "linearmodels.iv.model.IVGMMCUE.j", "linearmodels.iv.model.IVGMMCUE.notnull", "linearmodels.iv.model.IVGMMCUE.predict", "linearmodels.iv.model.IVGMMCUE.resids", "linearmodels.iv.model.IVGMMCUE.wresids", "linearmodels.iv.model.IVLIML", "linearmodels.iv.model.IVLIML.estimate_parameters", "linearmodels.iv.model.IVLIML.fit", "linearmodels.iv.model.IVLIML.formula", "linearmodels.iv.model.IVLIML.from_formula", "linearmodels.iv.model.IVLIML.has_constant", "linearmodels.iv.model.IVLIML.isnull", "linearmodels.iv.model.IVLIML.notnull", "linearmodels.iv.model.IVLIML.predict", "linearmodels.iv.model.IVLIML.resids", "linearmodels.iv.model.IVLIML.wresids", "linearmodels.iv.model._OLS", "linearmodels.iv.model._OLS.estimate_parameters", "linearmodels.iv.model._OLS.fit", "linearmodels.iv.model._OLS.formula", "linearmodels.iv.model._OLS.from_formula", "linearmodels.iv.model._OLS.has_constant", "linearmodels.iv.model._OLS.isnull", "linearmodels.iv.model._OLS.notnull", "linearmodels.iv.model._OLS.predict", "linearmodels.iv.model._OLS.resids", "linearmodels.iv.model._OLS.wresids", "linearmodels.iv.results.FirstStageResults", "linearmodels.iv.results.FirstStageResults.diagnostics", "linearmodels.iv.results.FirstStageResults.individual", "linearmodels.iv.results.FirstStageResults.summary", "linearmodels.iv.results.IVGMMResults", "linearmodels.iv.results.IVGMMResults.c_stat", "linearmodels.iv.results.IVGMMResults.conf_int", "linearmodels.iv.results.IVGMMResults.cov", "linearmodels.iv.results.IVGMMResults.cov_config", "linearmodels.iv.results.IVGMMResults.cov_estimator", "linearmodels.iv.results.IVGMMResults.cov_type", "linearmodels.iv.results.IVGMMResults.debiased", "linearmodels.iv.results.IVGMMResults.df_model", "linearmodels.iv.results.IVGMMResults.df_resid", "linearmodels.iv.results.IVGMMResults.f_statistic", "linearmodels.iv.results.IVGMMResults.first_stage", "linearmodels.iv.results.IVGMMResults.fitted_values", "linearmodels.iv.results.IVGMMResults.has_constant", "linearmodels.iv.results.IVGMMResults.idiosyncratic", "linearmodels.iv.results.IVGMMResults.iterations", "linearmodels.iv.results.IVGMMResults.j_stat", "linearmodels.iv.results.IVGMMResults.kappa", "linearmodels.iv.results.IVGMMResults.method", "linearmodels.iv.results.IVGMMResults.model_ss", "linearmodels.iv.results.IVGMMResults.nobs", "linearmodels.iv.results.IVGMMResults.params", "linearmodels.iv.results.IVGMMResults.predict", "linearmodels.iv.results.IVGMMResults.pvalues", "linearmodels.iv.results.IVGMMResults.resid_ss", "linearmodels.iv.results.IVGMMResults.resids", "linearmodels.iv.results.IVGMMResults.rsquared", "linearmodels.iv.results.IVGMMResults.rsquared_adj", "linearmodels.iv.results.IVGMMResults.s2", "linearmodels.iv.results.IVGMMResults.std_errors", "linearmodels.iv.results.IVGMMResults.summary", "linearmodels.iv.results.IVGMMResults.total_ss", "linearmodels.iv.results.IVGMMResults.tstats", "linearmodels.iv.results.IVGMMResults.wald_test", "linearmodels.iv.results.IVGMMResults.weight_config", "linearmodels.iv.results.IVGMMResults.weight_matrix", "linearmodels.iv.results.IVGMMResults.weight_type", "linearmodels.iv.results.IVGMMResults.wresids", "linearmodels.iv.results.IVModelComparison", "linearmodels.iv.results.IVModelComparison.cov_estimator", "linearmodels.iv.results.IVModelComparison.estimator_method", "linearmodels.iv.results.IVModelComparison.f_statistic", "linearmodels.iv.results.IVModelComparison.nobs", "linearmodels.iv.results.IVModelComparison.params", "linearmodels.iv.results.IVModelComparison.pvalues", "linearmodels.iv.results.IVModelComparison.rsquared", "linearmodels.iv.results.IVModelComparison.rsquared_adj", "linearmodels.iv.results.IVModelComparison.std_errors", "linearmodels.iv.results.IVModelComparison.summary", "linearmodels.iv.results.IVModelComparison.tstats", "linearmodels.iv.results.IVResults", "linearmodels.iv.results.IVResults.anderson_rubin", "linearmodels.iv.results.IVResults.basmann", "linearmodels.iv.results.IVResults.basmann_f", "linearmodels.iv.results.IVResults.conf_int", "linearmodels.iv.results.IVResults.cov", "linearmodels.iv.results.IVResults.cov_config", "linearmodels.iv.results.IVResults.cov_estimator", "linearmodels.iv.results.IVResults.cov_type", "linearmodels.iv.results.IVResults.debiased", "linearmodels.iv.results.IVResults.df_model", "linearmodels.iv.results.IVResults.df_resid", "linearmodels.iv.results.IVResults.durbin", "linearmodels.iv.results.IVResults.f_statistic", "linearmodels.iv.results.IVResults.first_stage", "linearmodels.iv.results.IVResults.fitted_values", "linearmodels.iv.results.IVResults.has_constant", "linearmodels.iv.results.IVResults.idiosyncratic", "linearmodels.iv.results.IVResults.kappa", "linearmodels.iv.results.IVResults.method", "linearmodels.iv.results.IVResults.model_ss", "linearmodels.iv.results.IVResults.nobs", "linearmodels.iv.results.IVResults.params", "linearmodels.iv.results.IVResults.predict", "linearmodels.iv.results.IVResults.pvalues", "linearmodels.iv.results.IVResults.resid_ss", "linearmodels.iv.results.IVResults.resids", "linearmodels.iv.results.IVResults.rsquared", "linearmodels.iv.results.IVResults.rsquared_adj", "linearmodels.iv.results.IVResults.s2", "linearmodels.iv.results.IVResults.sargan", "linearmodels.iv.results.IVResults.std_errors", "linearmodels.iv.results.IVResults.summary", "linearmodels.iv.results.IVResults.total_ss", "linearmodels.iv.results.IVResults.tstats", "linearmodels.iv.results.IVResults.wald_test", "linearmodels.iv.results.IVResults.wooldridge_overid", "linearmodels.iv.results.IVResults.wooldridge_regression", "linearmodels.iv.results.IVResults.wooldridge_score", "linearmodels.iv.results.IVResults.wresids", "linearmodels.iv.results.IVResults.wu_hausman", "linearmodels.iv.results.OLSResults", "linearmodels.iv.results.OLSResults.conf_int", "linearmodels.iv.results.OLSResults.cov", "linearmodels.iv.results.OLSResults.cov_config", "linearmodels.iv.results.OLSResults.cov_estimator", "linearmodels.iv.results.OLSResults.cov_type", "linearmodels.iv.results.OLSResults.debiased", "linearmodels.iv.results.OLSResults.df_model", "linearmodels.iv.results.OLSResults.df_resid", "linearmodels.iv.results.OLSResults.f_statistic", "linearmodels.iv.results.OLSResults.fitted_values", "linearmodels.iv.results.OLSResults.has_constant", "linearmodels.iv.results.OLSResults.idiosyncratic", "linearmodels.iv.results.OLSResults.kappa", "linearmodels.iv.results.OLSResults.method", "linearmodels.iv.results.OLSResults.model_ss", "linearmodels.iv.results.OLSResults.nobs", "linearmodels.iv.results.OLSResults.params", "linearmodels.iv.results.OLSResults.predict", "linearmodels.iv.results.OLSResults.pvalues", "linearmodels.iv.results.OLSResults.resid_ss", "linearmodels.iv.results.OLSResults.resids", "linearmodels.iv.results.OLSResults.rsquared", "linearmodels.iv.results.OLSResults.rsquared_adj", "linearmodels.iv.results.OLSResults.s2", "linearmodels.iv.results.OLSResults.std_errors", "linearmodels.iv.results.OLSResults.summary", "linearmodels.iv.results.OLSResults.total_ss", "linearmodels.iv.results.OLSResults.tstats", "linearmodels.iv.results.OLSResults.wald_test", "linearmodels.iv.results.OLSResults.wresids", "linearmodels.iv.results.compare", "Formulas and Mathematical Detail", "Module Reference", "Data Formats for Panel Data Analysis", "Examples", "Using formulas to specify models", "Implementation Choices", "Panel Data Model Estimation", "Introduction", "Formulas and Mathematical Detail", "Comparison with pandas PanelOLS and FamaMacBeth", "linearmodels.panel.covariance.ACCovariance", "linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ACCovariance.cov", "linearmodels.panel.covariance.ACCovariance.deferred_cov", "linearmodels.panel.covariance.ACCovariance.eps", "linearmodels.panel.covariance.ACCovariance.name", "linearmodels.panel.covariance.ACCovariance.s2", "linearmodels.panel.covariance.ClusteredCovariance", "linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ClusteredCovariance.cov", "linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "linearmodels.panel.covariance.ClusteredCovariance.eps", "linearmodels.panel.covariance.ClusteredCovariance.name", "linearmodels.panel.covariance.ClusteredCovariance.s2", "linearmodels.panel.covariance.DriscollKraay", "linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "linearmodels.panel.covariance.DriscollKraay.cov", "linearmodels.panel.covariance.DriscollKraay.deferred_cov", "linearmodels.panel.covariance.DriscollKraay.eps", "linearmodels.panel.covariance.DriscollKraay.name", "linearmodels.panel.covariance.DriscollKraay.s2", "linearmodels.panel.covariance.FamaMacBethCovariance", "linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "linearmodels.panel.covariance.FamaMacBethCovariance.cov", "linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "linearmodels.panel.covariance.FamaMacBethCovariance.eps", "linearmodels.panel.covariance.FamaMacBethCovariance.name", "linearmodels.panel.covariance.FamaMacBethCovariance.s2", "linearmodels.panel.covariance.HeteroskedasticCovariance", "linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "linearmodels.panel.covariance.HeteroskedasticCovariance.name", "linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "linearmodels.panel.covariance.HomoskedasticCovariance", "linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HomoskedasticCovariance.cov", "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HomoskedasticCovariance.eps", "linearmodels.panel.covariance.HomoskedasticCovariance.name", "linearmodels.panel.covariance.HomoskedasticCovariance.s2", "linearmodels.panel.data.PanelData", "linearmodels.panel.data.PanelData.copy", "linearmodels.panel.data.PanelData.count", "linearmodels.panel.data.PanelData.dataframe", "linearmodels.panel.data.PanelData.demean", "linearmodels.panel.data.PanelData.drop", "linearmodels.panel.data.PanelData.dummies", "linearmodels.panel.data.PanelData.entities", "linearmodels.panel.data.PanelData.entity_ids", "linearmodels.panel.data.PanelData.first_difference", "linearmodels.panel.data.PanelData.general_demean", "linearmodels.panel.data.PanelData.index", "linearmodels.panel.data.PanelData.isnull", "linearmodels.panel.data.PanelData.mean", "linearmodels.panel.data.PanelData.ndim", "linearmodels.panel.data.PanelData.nentity", "linearmodels.panel.data.PanelData.nobs", "linearmodels.panel.data.PanelData.nvar", "linearmodels.panel.data.PanelData.panel", "linearmodels.panel.data.PanelData.shape", "linearmodels.panel.data.PanelData.time", "linearmodels.panel.data.PanelData.time_ids", "linearmodels.panel.data.PanelData.values2d", "linearmodels.panel.data.PanelData.values3d", "linearmodels.panel.data.PanelData.vars", "linearmodels.panel.data._Panel", "linearmodels.panel.data._Panel.from_array", "linearmodels.panel.data._Panel.items", "linearmodels.panel.data._Panel.major_axis", "linearmodels.panel.data._Panel.minor_axis", "linearmodels.panel.data._Panel.shape", "linearmodels.panel.data._Panel.to_frame", "linearmodels.panel.data._Panel.values", "linearmodels.panel.model.BetweenOLS", "linearmodels.panel.model.BetweenOLS.fit", "linearmodels.panel.model.BetweenOLS.formula", "linearmodels.panel.model.BetweenOLS.from_formula", "linearmodels.panel.model.BetweenOLS.has_constant", "linearmodels.panel.model.BetweenOLS.not_null", "linearmodels.panel.model.BetweenOLS.predict", "linearmodels.panel.model.BetweenOLS.reformat_clusters", "linearmodels.panel.model.FamaMacBeth", "linearmodels.panel.model.FamaMacBeth.fit", "linearmodels.panel.model.FamaMacBeth.formula", "linearmodels.panel.model.FamaMacBeth.from_formula", "linearmodels.panel.model.FamaMacBeth.has_constant", "linearmodels.panel.model.FamaMacBeth.not_null", "linearmodels.panel.model.FamaMacBeth.predict", "linearmodels.panel.model.FamaMacBeth.reformat_clusters", "linearmodels.panel.model.FirstDifferenceOLS", "linearmodels.panel.model.FirstDifferenceOLS.fit", "linearmodels.panel.model.FirstDifferenceOLS.formula", "linearmodels.panel.model.FirstDifferenceOLS.from_formula", "linearmodels.panel.model.FirstDifferenceOLS.has_constant", "linearmodels.panel.model.FirstDifferenceOLS.not_null", "linearmodels.panel.model.FirstDifferenceOLS.predict", "linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS", "linearmodels.panel.model.PanelOLS.entity_effects", "linearmodels.panel.model.PanelOLS.fit", "linearmodels.panel.model.PanelOLS.formula", "linearmodels.panel.model.PanelOLS.from_formula", "linearmodels.panel.model.PanelOLS.has_constant", "linearmodels.panel.model.PanelOLS.not_null", "linearmodels.panel.model.PanelOLS.other_effects", "linearmodels.panel.model.PanelOLS.predict", "linearmodels.panel.model.PanelOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS.time_effects", "linearmodels.panel.model.PooledOLS", "linearmodels.panel.model.PooledOLS.fit", "linearmodels.panel.model.PooledOLS.formula", "linearmodels.panel.model.PooledOLS.from_formula", "linearmodels.panel.model.PooledOLS.has_constant", "linearmodels.panel.model.PooledOLS.not_null", "linearmodels.panel.model.PooledOLS.predict", "linearmodels.panel.model.PooledOLS.reformat_clusters", "linearmodels.panel.model.RandomEffects", "linearmodels.panel.model.RandomEffects.fit", "linearmodels.panel.model.RandomEffects.formula", "linearmodels.panel.model.RandomEffects.from_formula", "linearmodels.panel.model.RandomEffects.has_constant", "linearmodels.panel.model.RandomEffects.not_null", "linearmodels.panel.model.RandomEffects.predict", "linearmodels.panel.model.RandomEffects.reformat_clusters", "linearmodels.panel.results.FamaMacBethResults", "linearmodels.panel.results.FamaMacBethResults.all_params", "linearmodels.panel.results.FamaMacBethResults.conf_int", "linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "linearmodels.panel.results.FamaMacBethResults.cov", "linearmodels.panel.results.FamaMacBethResults.df_model", "linearmodels.panel.results.FamaMacBethResults.df_resid", "linearmodels.panel.results.FamaMacBethResults.entity_info", "linearmodels.panel.results.FamaMacBethResults.estimated_effects", "linearmodels.panel.results.FamaMacBethResults.f_statistic", "linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "linearmodels.panel.results.FamaMacBethResults.fitted_values", "linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "linearmodels.panel.results.FamaMacBethResults.loglik", "linearmodels.panel.results.FamaMacBethResults.model_ss", "linearmodels.panel.results.FamaMacBethResults.name", "linearmodels.panel.results.FamaMacBethResults.nobs", "linearmodels.panel.results.FamaMacBethResults.params", "linearmodels.panel.results.FamaMacBethResults.predict", "linearmodels.panel.results.FamaMacBethResults.pvalues", "linearmodels.panel.results.FamaMacBethResults.resid_ss", "linearmodels.panel.results.FamaMacBethResults.resids", "linearmodels.panel.results.FamaMacBethResults.rsquared", "linearmodels.panel.results.FamaMacBethResults.rsquared_between", "linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "linearmodels.panel.results.FamaMacBethResults.rsquared_within", "linearmodels.panel.results.FamaMacBethResults.s2", "linearmodels.panel.results.FamaMacBethResults.std_errors", "linearmodels.panel.results.FamaMacBethResults.summary", "linearmodels.panel.results.FamaMacBethResults.time_info", "linearmodels.panel.results.FamaMacBethResults.total_ss", "linearmodels.panel.results.FamaMacBethResults.tstats", "linearmodels.panel.results.FamaMacBethResults.wald_test", "linearmodels.panel.results.FamaMacBethResults.wresids", "linearmodels.panel.results.PanelEffectsResults", "linearmodels.panel.results.PanelEffectsResults.conf_int", "linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "linearmodels.panel.results.PanelEffectsResults.cov", "linearmodels.panel.results.PanelEffectsResults.df_model", "linearmodels.panel.results.PanelEffectsResults.df_resid", "linearmodels.panel.results.PanelEffectsResults.entity_info", "linearmodels.panel.results.PanelEffectsResults.estimated_effects", "linearmodels.panel.results.PanelEffectsResults.f_pooled", "linearmodels.panel.results.PanelEffectsResults.f_statistic", "linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "linearmodels.panel.results.PanelEffectsResults.fitted_values", "linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "linearmodels.panel.results.PanelEffectsResults.included_effects", "linearmodels.panel.results.PanelEffectsResults.loglik", "linearmodels.panel.results.PanelEffectsResults.model_ss", "linearmodels.panel.results.PanelEffectsResults.name", "linearmodels.panel.results.PanelEffectsResults.nobs", "linearmodels.panel.results.PanelEffectsResults.other_info", "linearmodels.panel.results.PanelEffectsResults.params", "linearmodels.panel.results.PanelEffectsResults.predict", "linearmodels.panel.results.PanelEffectsResults.pvalues", "linearmodels.panel.results.PanelEffectsResults.resid_ss", "linearmodels.panel.results.PanelEffectsResults.resids", "linearmodels.panel.results.PanelEffectsResults.rsquared", "linearmodels.panel.results.PanelEffectsResults.rsquared_between", "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "linearmodels.panel.results.PanelEffectsResults.rsquared_within", "linearmodels.panel.results.PanelEffectsResults.s2", "linearmodels.panel.results.PanelEffectsResults.std_errors", "linearmodels.panel.results.PanelEffectsResults.summary", "linearmodels.panel.results.PanelEffectsResults.time_info", "linearmodels.panel.results.PanelEffectsResults.total_ss", "linearmodels.panel.results.PanelEffectsResults.tstats", "linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "linearmodels.panel.results.PanelEffectsResults.wald_test", "linearmodels.panel.results.PanelEffectsResults.wresids", "linearmodels.panel.results.PanelModelComparison", "linearmodels.panel.results.PanelModelComparison.cov_estimator", "linearmodels.panel.results.PanelModelComparison.estimator_method", "linearmodels.panel.results.PanelModelComparison.f_statistic", "linearmodels.panel.results.PanelModelComparison.nobs", "linearmodels.panel.results.PanelModelComparison.params", "linearmodels.panel.results.PanelModelComparison.pvalues", "linearmodels.panel.results.PanelModelComparison.rsquared", "linearmodels.panel.results.PanelModelComparison.rsquared_between", "linearmodels.panel.results.PanelModelComparison.rsquared_overall", "linearmodels.panel.results.PanelModelComparison.rsquared_within", "linearmodels.panel.results.PanelModelComparison.std_errors", "linearmodels.panel.results.PanelModelComparison.summary", "linearmodels.panel.results.PanelModelComparison.tstats", "linearmodels.panel.results.PanelResults", "linearmodels.panel.results.PanelResults.conf_int", "linearmodels.panel.results.PanelResults.corr_squared_between", "linearmodels.panel.results.PanelResults.corr_squared_overall", "linearmodels.panel.results.PanelResults.corr_squared_within", "linearmodels.panel.results.PanelResults.cov", "linearmodels.panel.results.PanelResults.df_model", "linearmodels.panel.results.PanelResults.df_resid", "linearmodels.panel.results.PanelResults.entity_info", "linearmodels.panel.results.PanelResults.estimated_effects", "linearmodels.panel.results.PanelResults.f_statistic", "linearmodels.panel.results.PanelResults.f_statistic_robust", "linearmodels.panel.results.PanelResults.fitted_values", "linearmodels.panel.results.PanelResults.idiosyncratic", "linearmodels.panel.results.PanelResults.loglik", "linearmodels.panel.results.PanelResults.model_ss", "linearmodels.panel.results.PanelResults.name", "linearmodels.panel.results.PanelResults.nobs", "linearmodels.panel.results.PanelResults.params", "linearmodels.panel.results.PanelResults.predict", "linearmodels.panel.results.PanelResults.pvalues", "linearmodels.panel.results.PanelResults.resid_ss", "linearmodels.panel.results.PanelResults.resids", "linearmodels.panel.results.PanelResults.rsquared", "linearmodels.panel.results.PanelResults.rsquared_between", "linearmodels.panel.results.PanelResults.rsquared_overall", "linearmodels.panel.results.PanelResults.rsquared_within", "linearmodels.panel.results.PanelResults.s2", "linearmodels.panel.results.PanelResults.std_errors", "linearmodels.panel.results.PanelResults.summary", "linearmodels.panel.results.PanelResults.time_info", "linearmodels.panel.results.PanelResults.total_ss", "linearmodels.panel.results.PanelResults.tstats", "linearmodels.panel.results.PanelResults.wald_test", "linearmodels.panel.results.PanelResults.wresids", "linearmodels.panel.results.RandomEffectsResults", "linearmodels.panel.results.RandomEffectsResults.conf_int", "linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "linearmodels.panel.results.RandomEffectsResults.cov", "linearmodels.panel.results.RandomEffectsResults.df_model", "linearmodels.panel.results.RandomEffectsResults.df_resid", "linearmodels.panel.results.RandomEffectsResults.entity_info", "linearmodels.panel.results.RandomEffectsResults.estimated_effects", "linearmodels.panel.results.RandomEffectsResults.f_statistic", "linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "linearmodels.panel.results.RandomEffectsResults.fitted_values", "linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "linearmodels.panel.results.RandomEffectsResults.loglik", "linearmodels.panel.results.RandomEffectsResults.model_ss", "linearmodels.panel.results.RandomEffectsResults.name", "linearmodels.panel.results.RandomEffectsResults.nobs", "linearmodels.panel.results.RandomEffectsResults.params", "linearmodels.panel.results.RandomEffectsResults.predict", "linearmodels.panel.results.RandomEffectsResults.pvalues", "linearmodels.panel.results.RandomEffectsResults.resid_ss", "linearmodels.panel.results.RandomEffectsResults.resids", "linearmodels.panel.results.RandomEffectsResults.rsquared", "linearmodels.panel.results.RandomEffectsResults.rsquared_between", "linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "linearmodels.panel.results.RandomEffectsResults.rsquared_within", "linearmodels.panel.results.RandomEffectsResults.s2", "linearmodels.panel.results.RandomEffectsResults.std_errors", "linearmodels.panel.results.RandomEffectsResults.summary", "linearmodels.panel.results.RandomEffectsResults.theta", "linearmodels.panel.results.RandomEffectsResults.time_info", "linearmodels.panel.results.RandomEffectsResults.total_ss", "linearmodels.panel.results.RandomEffectsResults.tstats", "linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "linearmodels.panel.results.RandomEffectsResults.wald_test", "linearmodels.panel.results.RandomEffectsResults.wresids", "linearmodels.panel.results.compare", "linearmodels.panel.utility.PanelModelData", "linearmodels.panel.utility.PanelModelData.clusters", "linearmodels.panel.utility.PanelModelData.count", "linearmodels.panel.utility.PanelModelData.data", "linearmodels.panel.utility.PanelModelData.index", "linearmodels.panel.utility.PanelModelData.other_effects", "linearmodels.panel.utility.PanelModelData.weights", "linearmodels.panel.utility.generate_panel_data", "Module Reference", "Module Plans", "References", "Examples", "Using formulas to specify models", "Three-stage Least Squares (3SLS)", "System Regression Models", "Seemingly Unrelated Regression (SUR/SURE)", "Module Reference", "linearmodels.system.covariance.ClusteredCovariance", "linearmodels.system.covariance.ClusteredCovariance.cov", "linearmodels.system.covariance.ClusteredCovariance.cov_config", "linearmodels.system.covariance.ClusteredCovariance.sigma", "linearmodels.system.covariance.GMMHeteroskedasticCovariance", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMHomoskedasticCovariance", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance", "linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "linearmodels.system.covariance.GMMKernelCovariance.cov", "linearmodels.system.covariance.GMMKernelCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance.kernel", "linearmodels.system.covariance.HeteroskedasticCovariance", "linearmodels.system.covariance.HeteroskedasticCovariance.cov", "linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "linearmodels.system.covariance.HomoskedasticCovariance", "linearmodels.system.covariance.HomoskedasticCovariance.cov", "linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "linearmodels.system.covariance.HomoskedasticCovariance.sigma", "linearmodels.system.covariance.KernelCovariance", "linearmodels.system.covariance.KernelCovariance.bandwidth", "linearmodels.system.covariance.KernelCovariance.cov", "linearmodels.system.covariance.KernelCovariance.cov_config", "linearmodels.system.covariance.KernelCovariance.kernel", "linearmodels.system.covariance.KernelCovariance.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.KernelWeightMatrix", "linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "linearmodels.system.gmm.KernelWeightMatrix.config", "linearmodels.system.gmm.KernelWeightMatrix.kernel", "linearmodels.system.gmm.KernelWeightMatrix.sigma", "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.system.model.IV3SLS", "linearmodels.system.model.IV3SLS.add_constraints", "linearmodels.system.model.IV3SLS.constraints", "linearmodels.system.model.IV3SLS.fit", "linearmodels.system.model.IV3SLS.formula", "linearmodels.system.model.IV3SLS.from_formula", "linearmodels.system.model.IV3SLS.has_constant", "linearmodels.system.model.IV3SLS.multivariate_iv", "linearmodels.system.model.IV3SLS.param_names", "linearmodels.system.model.IV3SLS.predict", "linearmodels.system.model.IV3SLS.reset_constraints", "linearmodels.system.model.IVSystemGMM", "linearmodels.system.model.IVSystemGMM.add_constraints", "linearmodels.system.model.IVSystemGMM.constraints", "linearmodels.system.model.IVSystemGMM.fit", "linearmodels.system.model.IVSystemGMM.formula", "linearmodels.system.model.IVSystemGMM.from_formula", "linearmodels.system.model.IVSystemGMM.has_constant", "linearmodels.system.model.IVSystemGMM.param_names", "linearmodels.system.model.IVSystemGMM.predict", "linearmodels.system.model.IVSystemGMM.reset_constraints", "linearmodels.system.model.LinearConstraint", "linearmodels.system.model.LinearConstraint.a", "linearmodels.system.model.LinearConstraint.q", "linearmodels.system.model.LinearConstraint.r", "linearmodels.system.model.LinearConstraint.t", "linearmodels.system.model.SUR", "linearmodels.system.model.SUR.add_constraints", "linearmodels.system.model.SUR.constraints", "linearmodels.system.model.SUR.fit", "linearmodels.system.model.SUR.formula", "linearmodels.system.model.SUR.from_formula", "linearmodels.system.model.SUR.has_constant", "linearmodels.system.model.SUR.multivariate_ls", "linearmodels.system.model.SUR.param_names", "linearmodels.system.model.SUR.predict", "linearmodels.system.model.SUR.reset_constraints", "linearmodels.system.results.GMMSystemResults", "linearmodels.system.results.GMMSystemResults.breusch_pagan", "linearmodels.system.results.GMMSystemResults.conf_int", "linearmodels.system.results.GMMSystemResults.cov", "linearmodels.system.results.GMMSystemResults.cov_config", "linearmodels.system.results.GMMSystemResults.cov_estimator", "linearmodels.system.results.GMMSystemResults.debiased", "linearmodels.system.results.GMMSystemResults.df_model", "linearmodels.system.results.GMMSystemResults.df_resid", "linearmodels.system.results.GMMSystemResults.equation_labels", "linearmodels.system.results.GMMSystemResults.equations", "linearmodels.system.results.GMMSystemResults.fitted_values", "linearmodels.system.results.GMMSystemResults.iterations", "linearmodels.system.results.GMMSystemResults.j_stat", "linearmodels.system.results.GMMSystemResults.likelihood_ratio", "linearmodels.system.results.GMMSystemResults.method", "linearmodels.system.results.GMMSystemResults.model", "linearmodels.system.results.GMMSystemResults.model_ss", "linearmodels.system.results.GMMSystemResults.nobs", "linearmodels.system.results.GMMSystemResults.params", "linearmodels.system.results.GMMSystemResults.predict", "linearmodels.system.results.GMMSystemResults.pvalues", "linearmodels.system.results.GMMSystemResults.resid_ss", "linearmodels.system.results.GMMSystemResults.resids", "linearmodels.system.results.GMMSystemResults.rsquared", "linearmodels.system.results.GMMSystemResults.sigma", "linearmodels.system.results.GMMSystemResults.std_errors", "linearmodels.system.results.GMMSystemResults.summary", "linearmodels.system.results.GMMSystemResults.system_rsquared", "linearmodels.system.results.GMMSystemResults.total_ss", "linearmodels.system.results.GMMSystemResults.tstats", "linearmodels.system.results.GMMSystemResults.w", "linearmodels.system.results.GMMSystemResults.weight_config", "linearmodels.system.results.GMMSystemResults.weight_type", "linearmodels.system.results.GMMSystemResults.wresids", "linearmodels.system.results.SystemResults", "linearmodels.system.results.SystemResults.breusch_pagan", "linearmodels.system.results.SystemResults.conf_int", "linearmodels.system.results.SystemResults.cov", "linearmodels.system.results.SystemResults.cov_config", "linearmodels.system.results.SystemResults.cov_estimator", "linearmodels.system.results.SystemResults.debiased", "linearmodels.system.results.SystemResults.df_model", "linearmodels.system.results.SystemResults.df_resid", "linearmodels.system.results.SystemResults.equation_labels", "linearmodels.system.results.SystemResults.equations", "linearmodels.system.results.SystemResults.fitted_values", "linearmodels.system.results.SystemResults.iterations", "linearmodels.system.results.SystemResults.likelihood_ratio", "linearmodels.system.results.SystemResults.method", "linearmodels.system.results.SystemResults.model", "linearmodels.system.results.SystemResults.model_ss", "linearmodels.system.results.SystemResults.nobs", "linearmodels.system.results.SystemResults.params", "linearmodels.system.results.SystemResults.predict", "linearmodels.system.results.SystemResults.pvalues", "linearmodels.system.results.SystemResults.resid_ss", "linearmodels.system.results.SystemResults.resids", "linearmodels.system.results.SystemResults.rsquared", "linearmodels.system.results.SystemResults.sigma", "linearmodels.system.results.SystemResults.std_errors", "linearmodels.system.results.SystemResults.summary", "linearmodels.system.results.SystemResults.system_rsquared", "linearmodels.system.results.SystemResults.total_ss", "linearmodels.system.results.SystemResults.tstats", "linearmodels.system.results.SystemResults.wresids", "Utilities", "linearmodels.shared.covariance.cov_cluster", "linearmodels.shared.covariance.cov_kernel", "linearmodels.shared.covariance.group_debias_coefficient", "linearmodels.shared.hypotheses.InvalidTestStatistic", "linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "linearmodels.shared.hypotheses.InvalidTestStatistic.null", "linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "linearmodels.shared.hypotheses.WaldTestStatistic", "linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "linearmodels.shared.hypotheses.WaldTestStatistic.null", "linearmodels.shared.hypotheses.WaldTestStatistic.pval", "linearmodels.shared.hypotheses.WaldTestStatistic.stat", "linearmodels.shared.utility.AttrDict", "linearmodels.shared.utility.AttrDict.clear", "linearmodels.shared.utility.AttrDict.copy", "linearmodels.shared.utility.AttrDict.get", "linearmodels.shared.utility.AttrDict.items", "linearmodels.shared.utility.AttrDict.keys", "linearmodels.shared.utility.AttrDict.pop", "linearmodels.shared.utility.AttrDict.popitem", "linearmodels.shared.utility.AttrDict.setdefault", "linearmodels.shared.utility.AttrDict.update", "linearmodels.shared.utility.AttrDict.values"], "terms": {"class": [0, 7, 16, 17, 20, 21, 24, 25, 28, 49, 75, 77, 85, 87, 98, 130, 140, 143, 144, 145, 151, 157, 163, 173, 183, 186, 189, 195, 199, 202, 203, 213, 224, 236, 237, 240, 247, 248, 251, 258, 262, 279, 300, 312, 330, 353, 366, 391, 395, 403, 411, 419, 429, 437, 445, 470, 478, 486, 494, 502, 513, 521, 529, 565, 605, 619, 654, 692, 699, 701, 706, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 752, 763, 773, 778, 789, 824, 859, 864, 869], "xe": [0, 7], "jacobian": [0, 3, 6, 7, 11, 15, 73], "none": [0, 7, 16, 18, 19, 21, 22, 23, 26, 27, 79, 80, 87, 92, 128, 130, 133, 140, 141, 142, 144, 145, 163, 173, 175, 184, 187, 190, 195, 196, 197, 200, 202, 206, 210, 213, 215, 217, 221, 224, 225, 226, 228, 233, 236, 240, 244, 247, 251, 255, 263, 284, 295, 324, 335, 347, 352, 371, 382, 395, 403, 411, 419, 449, 450, 455, 458, 478, 480, 481, 484, 486, 487, 488, 489, 492, 494, 496, 497, 500, 502, 504, 505, 506, 510, 513, 515, 516, 519, 521, 523, 524, 527, 549, 563, 585, 587, 603, 638, 652, 673, 689, 699, 703, 704, 705, 706, 709, 713, 716, 719, 724, 728, 732, 741, 745, 746, 751, 752, 753, 754, 755, 757, 759, 761, 762, 763, 764, 765, 766, 768, 771, 772, 773, 778, 779, 780, 781, 783, 787, 788, 809, 843, 859, 860, 864, 870, 872, 875], "inv_jacobian": [0, 7], "center": [0, 7, 21, 183, 186, 195, 199, 224, 385, 390, 705, 707, 738, 742, 746], "true": [0, 7, 17, 21, 25, 39, 59, 69, 70, 72, 75, 80, 92, 101, 110, 118, 139, 140, 145, 151, 157, 163, 173, 224, 263, 264, 272, 284, 285, 316, 325, 335, 336, 354, 362, 371, 372, 385, 387, 388, 392, 394, 395, 403, 411, 429, 437, 445, 449, 478, 479, 481, 486, 487, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 521, 522, 524, 531, 541, 549, 550, 563, 566, 577, 587, 588, 603, 620, 630, 638, 639, 652, 655, 665, 673, 674, 689, 699, 703, 704, 705, 755, 773, 781, 791, 809, 810, 826, 843, 844], "debias": [0, 7, 17, 21, 25, 39, 59, 92, 98, 101, 110, 118, 140, 141, 142, 144, 145, 150, 151, 156, 157, 162, 163, 168, 183, 186, 189, 194, 195, 199, 204, 215, 226, 238, 249, 262, 264, 272, 285, 312, 316, 325, 336, 353, 354, 362, 372, 385, 393, 394, 395, 403, 411, 419, 429, 437, 479, 487, 495, 504, 514, 522, 531, 541, 550, 566, 577, 588, 620, 630, 639, 655, 665, 674, 703, 704, 705, 707, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 755, 766, 781, 789, 791, 810, 824, 826, 844, 858], "fals": [0, 7, 16, 19, 20, 21, 23, 75, 80, 87, 92, 139, 140, 141, 142, 144, 145, 151, 157, 163, 183, 186, 189, 195, 199, 204, 215, 225, 226, 238, 249, 284, 300, 335, 371, 384, 388, 390, 395, 403, 411, 419, 429, 437, 449, 451, 479, 502, 504, 506, 522, 549, 587, 605, 638, 673, 691, 699, 703, 704, 705, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 755, 781, 809, 843], "df": [0, 7, 73, 395, 411, 429, 437, 470, 541, 577, 630, 665, 705, 864], "0": [0, 7, 21, 69, 70, 72, 73, 80, 101, 128, 130, 134, 139, 140, 141, 142, 144, 163, 171, 173, 215, 236, 240, 247, 251, 264, 295, 316, 347, 349, 354, 382, 385, 387, 388, 389, 391, 392, 393, 394, 395, 403, 411, 419, 429, 437, 445, 481, 489, 497, 506, 516, 524, 531, 563, 566, 603, 620, 652, 655, 689, 692, 695, 696, 699, 703, 704, 705, 706, 707, 752, 753, 763, 764, 778, 779, 790, 791, 803, 825, 826, 837], "sourc": [0, 7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 49, 59, 68, 73, 77, 78, 79, 80, 81, 82, 83, 84, 87, 92, 95, 97, 98, 99, 130, 133, 134, 140, 145, 151, 157, 163, 169, 170, 171, 172, 173, 175, 183, 185, 186, 188, 189, 195, 198, 199, 201, 202, 206, 213, 214, 215, 217, 224, 225, 226, 228, 231, 236, 240, 247, 258, 259, 260, 262, 263, 300, 312, 313, 314, 315, 324, 342, 348, 349, 350, 352, 353, 371, 384, 385, 393, 395, 398, 403, 406, 411, 414, 419, 423, 424, 429, 432, 437, 440, 441, 445, 446, 447, 449, 450, 451, 454, 455, 458, 470, 471, 476, 478, 479, 481, 486, 487, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 519, 521, 522, 524, 529, 565, 605, 619, 620, 624, 638, 639, 652, 654, 691, 692, 699, 707, 709, 713, 716, 719, 724, 728, 732, 738, 741, 742, 744, 745, 746, 751, 752, 757, 759, 763, 766, 768, 773, 778, 783, 785, 789, 824, 825, 837, 843, 856, 857, 858, 859, 864, 869, 870, 871, 873, 874, 875, 878, 879], "heteroskedast": [0, 7, 25, 69, 71, 72, 73, 75, 92, 140, 141, 142, 144, 151, 155, 183, 189, 195, 204, 213, 215, 224, 238, 249, 385, 411, 479, 487, 495, 504, 514, 522, 704, 705, 709, 724, 738, 746, 755, 766, 768, 781], "robust": [0, 7, 17, 21, 25, 69, 70, 71, 72, 73, 75, 92, 110, 139, 140, 141, 142, 144, 151, 155, 183, 189, 195, 204, 213, 215, 217, 224, 226, 228, 238, 249, 272, 325, 362, 385, 387, 389, 392, 394, 395, 411, 419, 479, 487, 495, 504, 514, 522, 541, 577, 630, 665, 702, 704, 705, 707, 738, 746, 755, 763, 766, 768, 781], "estim": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 41, 42, 45, 46, 49, 50, 51, 52, 53, 55, 58, 61, 62, 65, 66, 70, 71, 72, 75, 80, 86, 87, 92, 98, 102, 103, 104, 105, 110, 113, 114, 117, 120, 123, 124, 125, 129, 139, 145, 147, 149, 150, 151, 153, 155, 156, 157, 159, 161, 162, 163, 165, 167, 168, 183, 184, 186, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200, 202, 203, 204, 206, 209, 210, 213, 214, 215, 217, 220, 221, 224, 225, 226, 228, 231, 232, 233, 236, 237, 238, 240, 243, 244, 247, 248, 249, 251, 254, 255, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 272, 276, 277, 278, 279, 280, 283, 284, 287, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 310, 312, 313, 315, 317, 318, 319, 320, 325, 329, 330, 331, 334, 335, 338, 341, 342, 343, 344, 349, 351, 353, 355, 356, 357, 358, 362, 365, 366, 367, 370, 371, 374, 377, 378, 379, 383, 384, 387, 389, 390, 392, 394, 395, 398, 401, 403, 406, 409, 411, 414, 417, 419, 422, 423, 424, 427, 429, 432, 435, 437, 440, 443, 449, 478, 479, 481, 485, 486, 487, 489, 493, 494, 495, 497, 501, 502, 504, 506, 511, 513, 514, 516, 520, 521, 522, 524, 528, 529, 530, 535, 539, 541, 543, 547, 548, 549, 552, 554, 555, 556, 557, 558, 559, 565, 570, 574, 577, 579, 584, 586, 587, 590, 592, 594, 595, 596, 597, 598, 605, 606, 607, 617, 619, 624, 628, 630, 632, 636, 637, 638, 641, 643, 644, 645, 646, 647, 648, 654, 659, 663, 665, 667, 671, 672, 673, 676, 678, 679, 680, 681, 682, 683, 691, 699, 702, 706, 709, 713, 716, 719, 720, 723, 724, 728, 732, 733, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 755, 757, 761, 763, 766, 768, 771, 773, 774, 778, 781, 783, 785, 787, 789, 790, 792, 793, 794, 802, 803, 804, 805, 808, 809, 812, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 827, 828, 829, 837, 838, 839, 842, 843, 846, 848, 849, 850, 851, 854, 856, 857], "paramet": [0, 2, 7, 10, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 31, 35, 38, 39, 45, 48, 49, 52, 55, 58, 59, 65, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 87, 92, 95, 97, 98, 101, 102, 103, 110, 113, 114, 117, 118, 124, 127, 128, 130, 134, 139, 140, 141, 142, 143, 144, 145, 147, 151, 153, 157, 159, 163, 165, 169, 170, 171, 172, 173, 183, 185, 186, 188, 189, 191, 195, 198, 199, 201, 202, 203, 204, 206, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 224, 225, 226, 228, 231, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 248, 249, 251, 255, 256, 257, 262, 263, 264, 265, 266, 272, 276, 280, 283, 284, 285, 291, 294, 295, 300, 304, 305, 306, 309, 311, 312, 316, 317, 318, 324, 325, 329, 331, 334, 335, 336, 343, 346, 347, 352, 353, 354, 355, 356, 362, 365, 367, 370, 371, 372, 378, 381, 382, 384, 387, 389, 390, 391, 392, 393, 394, 395, 403, 411, 419, 422, 429, 437, 445, 447, 449, 450, 451, 455, 458, 470, 478, 479, 481, 484, 485, 486, 487, 489, 492, 493, 494, 495, 497, 500, 501, 502, 504, 506, 510, 511, 513, 514, 516, 519, 520, 521, 522, 524, 527, 528, 529, 530, 531, 535, 541, 543, 548, 549, 550, 558, 562, 563, 565, 566, 570, 577, 579, 586, 587, 588, 597, 601, 603, 605, 609, 610, 611, 616, 618, 619, 620, 624, 630, 632, 637, 638, 639, 647, 651, 652, 654, 655, 659, 665, 667, 672, 673, 674, 682, 687, 689, 691, 699, 703, 704, 705, 706, 709, 710, 713, 714, 716, 717, 719, 721, 724, 725, 728, 729, 732, 734, 738, 740, 741, 742, 744, 745, 746, 750, 751, 752, 753, 755, 757, 759, 760, 761, 763, 764, 766, 768, 770, 771, 773, 774, 778, 779, 781, 783, 785, 786, 787, 789, 791, 792, 808, 809, 810, 815, 819, 824, 826, 827, 842, 843, 844, 849, 853, 856, 857, 858, 859, 864], "ndarrai": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 95, 97, 128, 130, 145, 147, 149, 150, 151, 153, 155, 156, 157, 159, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 184, 185, 187, 188, 189, 190, 191, 193, 194, 197, 198, 199, 200, 201, 203, 208, 209, 211, 212, 214, 215, 219, 220, 222, 223, 225, 226, 230, 231, 232, 234, 235, 237, 242, 243, 245, 246, 248, 253, 254, 256, 257, 295, 297, 347, 382, 395, 398, 399, 400, 403, 406, 407, 408, 411, 414, 415, 416, 419, 424, 425, 426, 429, 432, 433, 434, 437, 440, 441, 442, 445, 450, 453, 466, 467, 468, 477, 483, 491, 499, 508, 518, 526, 563, 603, 652, 689, 709, 710, 712, 713, 714, 716, 717, 719, 721, 724, 725, 727, 728, 729, 731, 732, 734, 737, 740, 741, 744, 745, 750, 751, 766, 773, 774, 775, 777, 820, 856, 857, 858], "score": [0, 5, 7, 14, 73, 140, 141, 144, 145, 149, 151, 155, 157, 161, 163, 167, 189, 193, 312, 348, 350, 385, 403, 707, 709, 724, 732, 738, 746], "moment": [0, 5, 7, 14, 20, 21, 69, 73, 86, 140, 144, 183, 185, 186, 188, 189, 195, 198, 199, 201, 213, 215, 217, 224, 228, 231, 263, 278, 701, 702, 705, 706, 713, 716, 719, 738, 741, 742, 745, 746, 747, 751, 763, 768, 802], "condit": [0, 5, 7, 14, 21, 69, 73, 75, 139, 140, 144, 183, 185, 186, 188, 189, 195, 198, 199, 201, 213, 215, 217, 224, 228, 231, 263, 278, 385, 393, 705, 707, 713, 719, 738, 741, 742, 745, 746, 747, 751, 752, 763, 768, 778, 802], "One": [0, 7, 73, 92, 144, 204, 238, 249, 403, 479, 495, 502, 504, 514, 521, 522, 703, 858], "onli": [0, 7, 16, 19, 23, 27, 69, 73, 75, 86, 98, 99, 113, 140, 141, 142, 236, 276, 324, 329, 352, 365, 385, 387, 388, 393, 394, 445, 449, 455, 470, 504, 540, 543, 549, 575, 576, 579, 587, 629, 632, 638, 664, 667, 673, 703, 705, 707, 755, 763, 781, 813, 817, 847, 851], "one": [0, 7, 17, 19, 21, 23, 25, 27, 69, 75, 79, 84, 128, 139, 140, 141, 144, 189, 199, 213, 215, 224, 263, 295, 313, 315, 347, 382, 385, 387, 388, 393, 394, 395, 403, 411, 419, 445, 486, 540, 563, 576, 603, 629, 652, 664, 689, 699, 703, 704, 705, 707, 752, 757, 759, 761, 768, 771, 783, 787, 809, 813, 843, 847], "must": [0, 7, 19, 21, 23, 24, 69, 71, 79, 87, 140, 142, 173, 206, 210, 217, 221, 228, 233, 240, 244, 251, 255, 284, 335, 371, 388, 389, 394, 479, 484, 492, 495, 500, 510, 519, 527, 549, 587, 638, 673, 699, 703, 704, 709, 752, 757, 759, 761, 763, 768, 771, 773, 778, 783, 787, 809, 843], "provid": [0, 7, 16, 19, 21, 23, 27, 92, 142, 143, 144, 145, 173, 189, 204, 215, 226, 236, 238, 240, 249, 251, 387, 389, 391, 394, 395, 403, 411, 419, 449, 479, 495, 504, 514, 522, 541, 577, 630, 665, 699, 703, 707, 719, 732, 746, 752, 757, 759, 763, 778, 783, 864, 873, 874, 879], "invers": [0, 3, 7, 11, 478, 481, 486, 489, 494, 497, 502, 506, 513, 516, 521, 524, 704], "default": [0, 7, 69, 72, 75, 79, 80, 92, 110, 140, 141, 144, 204, 215, 226, 236, 238, 240, 249, 251, 272, 300, 325, 362, 384, 388, 389, 394, 487, 495, 504, 514, 522, 605, 691, 703, 705, 755, 781, 872, 875], "bool": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 80, 87, 92, 93, 106, 112, 145, 148, 151, 154, 157, 160, 163, 166, 173, 183, 184, 186, 187, 189, 190, 192, 195, 197, 199, 200, 204, 207, 215, 218, 225, 226, 229, 238, 241, 249, 252, 269, 275, 284, 300, 321, 328, 335, 359, 364, 371, 384, 395, 403, 411, 419, 429, 437, 445, 449, 451, 479, 481, 482, 487, 489, 490, 495, 497, 498, 502, 503, 504, 506, 507, 509, 512, 513, 514, 516, 517, 522, 524, 525, 549, 587, 605, 638, 673, 691, 699, 709, 724, 728, 732, 738, 742, 746, 755, 773, 781, 793, 795, 809, 830, 843], "flag": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 69, 87, 92, 98, 106, 112, 145, 148, 151, 154, 157, 160, 163, 166, 173, 183, 186, 189, 192, 195, 199, 202, 204, 207, 213, 215, 218, 224, 225, 226, 229, 236, 238, 241, 247, 249, 252, 262, 269, 275, 284, 312, 321, 328, 335, 353, 359, 364, 371, 385, 395, 403, 411, 419, 429, 437, 445, 449, 451, 478, 479, 481, 482, 486, 487, 489, 490, 494, 495, 497, 498, 502, 503, 504, 506, 507, 509, 512, 513, 514, 516, 517, 521, 522, 524, 525, 549, 587, 638, 673, 699, 707, 709, 724, 728, 732, 738, 742, 746, 755, 773, 781, 789, 795, 809, 824, 830, 843], "indic": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 69, 75, 80, 87, 92, 98, 106, 112, 140, 141, 142, 144, 145, 148, 151, 154, 157, 160, 163, 166, 173, 183, 186, 189, 192, 195, 199, 202, 204, 206, 207, 213, 215, 217, 218, 224, 225, 226, 228, 229, 236, 238, 240, 241, 247, 249, 251, 252, 262, 263, 269, 275, 278, 284, 312, 313, 315, 321, 328, 335, 353, 359, 364, 371, 385, 392, 393, 395, 403, 411, 419, 429, 437, 445, 449, 450, 451, 478, 479, 481, 482, 486, 487, 489, 490, 494, 495, 497, 498, 502, 503, 504, 506, 507, 509, 512, 513, 514, 516, 517, 521, 522, 524, 525, 549, 587, 638, 673, 699, 709, 724, 728, 732, 738, 742, 746, 752, 755, 758, 763, 769, 773, 778, 781, 784, 789, 795, 802, 809, 824, 830, 843], "when": [0, 7, 21, 69, 70, 71, 72, 73, 75, 87, 92, 128, 135, 139, 140, 141, 142, 144, 169, 173, 189, 195, 210, 221, 226, 233, 236, 244, 247, 255, 259, 284, 295, 335, 347, 350, 371, 382, 385, 387, 388, 389, 390, 391, 392, 393, 394, 445, 449, 479, 484, 487, 492, 495, 500, 504, 510, 514, 519, 522, 527, 539, 549, 563, 574, 587, 603, 628, 638, 652, 663, 673, 689, 703, 704, 705, 706, 707, 709, 724, 728, 732, 746, 752, 755, 757, 761, 766, 768, 771, 778, 781, 783, 787, 790, 803, 809, 825, 837, 843], "comput": [0, 2, 7, 10, 21, 28, 32, 49, 53, 73, 95, 97, 98, 104, 110, 130, 169, 172, 183, 186, 189, 195, 199, 210, 211, 212, 221, 222, 223, 226, 231, 233, 234, 235, 236, 240, 244, 245, 246, 247, 251, 255, 256, 257, 262, 263, 267, 272, 284, 312, 313, 315, 319, 325, 335, 348, 353, 357, 362, 371, 385, 388, 393, 403, 454, 458, 484, 486, 487, 492, 495, 500, 504, 510, 514, 519, 522, 527, 703, 707, 709, 724, 728, 732, 738, 742, 746, 761, 771, 787, 789, 793, 794, 809, 824, 828, 829, 843, 858], "us": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 32, 35, 39, 46, 49, 53, 55, 59, 66, 71, 72, 75, 79, 83, 87, 88, 89, 92, 97, 98, 101, 104, 105, 106, 110, 114, 118, 125, 128, 134, 135, 139, 140, 141, 143, 144, 145, 151, 157, 163, 169, 170, 171, 172, 173, 183, 186, 189, 195, 196, 199, 202, 204, 205, 206, 210, 212, 213, 215, 216, 217, 221, 223, 224, 226, 227, 228, 233, 235, 236, 238, 239, 240, 244, 246, 247, 249, 250, 251, 255, 257, 259, 261, 262, 263, 264, 267, 268, 269, 272, 277, 280, 284, 285, 292, 295, 296, 297, 298, 300, 310, 312, 316, 319, 320, 321, 325, 331, 335, 336, 344, 347, 349, 350, 353, 354, 357, 358, 359, 362, 367, 371, 372, 379, 382, 384, 385, 387, 390, 391, 392, 393, 394, 395, 403, 411, 419, 429, 445, 449, 455, 458, 470, 478, 479, 480, 481, 484, 485, 486, 487, 488, 489, 492, 493, 494, 495, 496, 497, 500, 501, 502, 504, 505, 506, 510, 511, 513, 514, 515, 516, 519, 520, 521, 522, 523, 524, 527, 528, 529, 531, 532, 533, 534, 541, 547, 549, 550, 554, 555, 556, 559, 563, 565, 566, 567, 568, 569, 577, 584, 587, 588, 592, 594, 595, 598, 603, 605, 617, 619, 620, 621, 622, 623, 630, 636, 638, 639, 643, 644, 645, 648, 652, 654, 655, 656, 657, 658, 665, 671, 673, 674, 678, 679, 680, 683, 684, 689, 691, 699, 702, 705, 706, 707, 709, 711, 713, 715, 716, 718, 719, 720, 722, 723, 724, 726, 728, 730, 732, 733, 735, 736, 738, 742, 746, 747, 749, 752, 753, 755, 756, 757, 759, 761, 763, 764, 766, 767, 768, 771, 773, 774, 778, 779, 781, 782, 783, 785, 787, 789, 790, 791, 793, 794, 795, 803, 805, 809, 810, 813, 816, 820, 821, 822, 824, 825, 826, 828, 829, 830, 837, 839, 843, 844, 847, 850, 864], "int": [0, 7, 21, 34, 37, 57, 107, 108, 109, 116, 137, 163, 169, 170, 171, 172, 173, 179, 184, 187, 190, 195, 196, 197, 200, 210, 215, 221, 233, 244, 255, 270, 271, 277, 282, 322, 323, 333, 360, 361, 369, 395, 403, 411, 419, 429, 437, 459, 460, 461, 462, 464, 484, 492, 500, 510, 519, 527, 536, 537, 547, 571, 572, 584, 625, 626, 636, 660, 661, 671, 699, 755, 761, 766, 771, 773, 781, 787, 796, 797, 801, 807, 831, 832, 836, 841, 864], "degre": [0, 7, 17, 21, 25, 73, 92, 98, 108, 109, 204, 215, 226, 238, 249, 262, 270, 271, 278, 312, 314, 322, 323, 342, 353, 360, 361, 385, 388, 390, 393, 394, 395, 403, 411, 429, 437, 479, 487, 495, 504, 514, 522, 529, 536, 537, 540, 541, 565, 571, 572, 575, 576, 577, 619, 625, 626, 629, 630, 654, 660, 661, 664, 665, 789, 796, 797, 802, 824, 831, 832, 864], "freedom": [0, 7, 17, 21, 25, 73, 92, 98, 108, 109, 204, 215, 226, 238, 249, 262, 270, 271, 278, 312, 314, 322, 323, 342, 353, 360, 361, 385, 388, 390, 393, 394, 395, 403, 411, 429, 437, 479, 487, 495, 504, 514, 522, 529, 536, 537, 540, 541, 565, 571, 572, 575, 576, 577, 619, 625, 626, 629, 630, 654, 660, 661, 664, 665, 789, 796, 797, 802, 824, 831, 832, 864], "valu": [0, 7, 16, 20, 21, 24, 69, 70, 71, 72, 73, 75, 79, 80, 92, 98, 99, 103, 110, 111, 128, 139, 140, 141, 142, 144, 145, 151, 157, 163, 202, 203, 208, 210, 213, 215, 219, 221, 224, 225, 226, 230, 233, 236, 237, 240, 242, 244, 247, 248, 251, 253, 255, 259, 262, 263, 266, 272, 274, 279, 284, 295, 300, 303, 312, 313, 314, 315, 318, 324, 325, 327, 330, 335, 342, 347, 348, 349, 350, 352, 353, 356, 362, 363, 366, 371, 382, 384, 387, 388, 389, 390, 392, 393, 394, 395, 411, 419, 449, 454, 470, 471, 479, 484, 485, 492, 493, 495, 500, 501, 504, 510, 511, 514, 519, 520, 522, 527, 528, 529, 540, 541, 542, 549, 563, 565, 575, 576, 577, 578, 587, 603, 605, 608, 619, 629, 630, 631, 638, 652, 654, 664, 665, 666, 673, 684, 689, 691, 694, 696, 699, 703, 704, 705, 706, 707, 709, 752, 753, 757, 761, 763, 764, 768, 771, 773, 775, 778, 779, 783, 787, 789, 800, 809, 824, 835, 843, 864, 865, 867, 875, 876], "ot": [0, 7, 445], "attribut": [0, 7, 16, 20, 24, 28, 49, 87, 98, 130, 141, 145, 151, 157, 163, 173, 183, 186, 189, 195, 199, 202, 213, 224, 236, 247, 258, 262, 300, 312, 353, 395, 403, 411, 419, 429, 437, 445, 470, 478, 486, 494, 502, 513, 521, 529, 565, 605, 619, 654, 692, 703, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 752, 763, 773, 778, 789, 824, 859, 864, 869], "config": [0, 7, 145, 151, 157, 163, 183, 186, 189, 195, 199, 738, 742, 746], "cov": [0, 7, 28, 49, 69, 70, 72, 98, 139, 140, 141, 142, 144, 145, 151, 157, 163, 189, 262, 312, 353, 387, 388, 389, 392, 394, 395, 403, 411, 419, 429, 437, 529, 565, 619, 654, 703, 704, 705, 706, 709, 713, 716, 719, 724, 728, 732, 789, 824], "The": [0, 4, 7, 12, 16, 17, 19, 20, 21, 23, 24, 25, 27, 69, 70, 71, 72, 87, 92, 98, 113, 128, 138, 139, 140, 141, 142, 144, 183, 186, 195, 202, 204, 206, 210, 213, 217, 221, 228, 231, 233, 236, 238, 240, 244, 249, 251, 255, 259, 262, 263, 276, 278, 295, 312, 313, 314, 315, 324, 329, 342, 347, 348, 349, 350, 352, 353, 365, 382, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 403, 411, 419, 422, 429, 437, 445, 478, 486, 487, 494, 502, 504, 513, 521, 529, 530, 532, 533, 534, 540, 541, 543, 554, 555, 556, 563, 567, 568, 569, 575, 576, 577, 579, 592, 594, 595, 603, 621, 622, 623, 629, 630, 632, 643, 644, 645, 652, 656, 657, 658, 664, 665, 667, 678, 679, 680, 689, 691, 699, 701, 702, 703, 704, 705, 706, 707, 713, 716, 719, 738, 740, 742, 744, 746, 750, 752, 753, 755, 757, 763, 764, 768, 774, 778, 779, 781, 783, 790, 802, 803, 813, 817, 825, 837, 847, 851, 858, 864], "s": [0, 7, 69, 70, 71, 72, 73, 75, 140, 141, 143, 144, 145, 151, 157, 163, 169, 186, 189, 195, 236, 240, 251, 259, 263, 312, 314, 315, 324, 348, 349, 350, 385, 387, 388, 391, 393, 395, 403, 411, 429, 437, 479, 495, 504, 514, 522, 703, 704, 705, 707, 709, 719, 724, 732, 746, 813, 817, 847, 851, 864, 873, 874, 879], "squar": [0, 7, 28, 40, 47, 49, 60, 67, 69, 70, 72, 75, 86, 98, 115, 119, 126, 139, 140, 141, 142, 144, 202, 259, 262, 281, 286, 293, 312, 324, 332, 337, 345, 352, 353, 368, 373, 380, 387, 388, 389, 392, 393, 394, 449, 504, 529, 532, 533, 534, 540, 545, 551, 561, 565, 567, 568, 569, 575, 576, 582, 589, 600, 619, 621, 622, 623, 629, 634, 640, 650, 654, 656, 657, 658, 664, 669, 675, 686, 703, 704, 706, 752, 789, 806, 811, 818, 824, 840, 845, 852], "method": [0, 7, 16, 20, 24, 28, 46, 49, 66, 69, 70, 75, 77, 86, 87, 92, 98, 125, 130, 139, 140, 142, 143, 144, 145, 151, 157, 163, 173, 183, 186, 189, 195, 199, 202, 203, 213, 214, 224, 236, 237, 247, 248, 258, 261, 262, 292, 298, 300, 302, 310, 312, 344, 353, 379, 387, 388, 391, 394, 395, 403, 411, 419, 429, 437, 445, 470, 478, 486, 494, 502, 513, 521, 529, 559, 565, 598, 605, 607, 617, 619, 648, 654, 683, 692, 701, 702, 703, 704, 705, 706, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 752, 755, 763, 773, 778, 781, 789, 816, 824, 850, 859, 864, 869, 878], "properti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202, 205, 207, 208, 209, 213, 216, 218, 219, 220, 224, 227, 229, 230, 232, 236, 239, 241, 242, 243, 247, 250, 252, 253, 254, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 348, 349, 350, 351, 353, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 383, 392, 394, 395, 398, 400, 401, 402, 403, 406, 408, 409, 410, 411, 414, 416, 417, 418, 419, 422, 423, 424, 426, 427, 428, 429, 432, 434, 435, 436, 437, 440, 442, 443, 444, 445, 448, 452, 453, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 480, 482, 483, 486, 488, 490, 491, 494, 496, 498, 499, 502, 503, 505, 507, 508, 509, 512, 513, 515, 517, 518, 521, 523, 525, 526, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 690, 692, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 742, 743, 746, 747, 748, 749, 752, 753, 754, 756, 758, 760, 763, 764, 765, 767, 769, 770, 773, 774, 775, 776, 777, 778, 779, 780, 782, 784, 786, 789, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868], "dict": [1, 9, 21, 25, 49, 92, 98, 184, 187, 190, 197, 200, 225, 226, 260, 262, 266, 296, 300, 312, 353, 384, 388, 605, 691, 705, 706, 752, 757, 761, 763, 768, 771, 778, 783, 787, 793, 809, 821, 843], "str": [1, 7, 9, 13, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 36, 49, 53, 56, 78, 79, 80, 81, 82, 83, 84, 92, 98, 104, 105, 114, 128, 135, 141, 163, 169, 173, 184, 187, 189, 190, 195, 197, 200, 204, 205, 206, 213, 215, 216, 217, 224, 226, 227, 228, 238, 239, 240, 249, 250, 251, 260, 262, 263, 266, 267, 268, 280, 295, 296, 298, 312, 319, 320, 324, 331, 347, 352, 353, 357, 358, 367, 382, 387, 395, 396, 401, 404, 409, 411, 412, 417, 419, 420, 427, 430, 435, 438, 443, 445, 479, 480, 481, 487, 488, 489, 495, 496, 497, 504, 505, 506, 514, 515, 516, 522, 523, 524, 546, 563, 583, 603, 635, 652, 670, 689, 705, 719, 723, 732, 736, 746, 749, 755, 757, 760, 763, 766, 768, 770, 781, 783, 786, 793, 794, 798, 804, 821, 822, 829, 838, 859, 861, 864, 866], "float": [1, 8, 9, 40, 44, 47, 60, 64, 67, 80, 100, 101, 115, 119, 121, 122, 123, 126, 145, 151, 157, 163, 172, 215, 231, 236, 240, 251, 264, 279, 281, 286, 288, 289, 290, 293, 316, 330, 332, 337, 339, 340, 341, 345, 354, 366, 368, 373, 375, 376, 377, 380, 402, 410, 418, 423, 428, 436, 444, 470, 487, 531, 532, 533, 534, 544, 545, 551, 553, 554, 555, 556, 557, 561, 566, 567, 568, 569, 581, 582, 589, 591, 592, 593, 594, 595, 596, 600, 620, 621, 622, 623, 633, 634, 640, 642, 643, 644, 645, 646, 650, 655, 656, 657, 658, 668, 669, 675, 677, 678, 679, 680, 681, 686, 699, 719, 720, 732, 733, 746, 747, 755, 766, 781, 791, 806, 811, 813, 818, 826, 840, 845, 847, 852, 858, 862, 863, 864, 867, 868], "return": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 75, 80, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 128, 131, 132, 133, 134, 136, 137, 138, 141, 143, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 178, 179, 180, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 292, 293, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 352, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 384, 385, 388, 390, 391, 399, 400, 401, 402, 407, 408, 409, 410, 415, 416, 417, 418, 422, 425, 426, 427, 428, 433, 434, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 694, 696, 699, 703, 710, 711, 712, 714, 715, 717, 718, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 733, 734, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 748, 749, 750, 751, 753, 754, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 788, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 866, 867, 868, 870, 871, 873, 874, 875, 876, 879], "type": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 75, 82, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 128, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 147, 148, 149, 150, 153, 154, 155, 156, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 184, 185, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 292, 293, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 319, 320, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 344, 345, 347, 353, 354, 355, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 373, 375, 376, 377, 379, 380, 382, 385, 387, 388, 399, 400, 401, 402, 407, 408, 409, 410, 415, 416, 417, 418, 422, 425, 426, 427, 428, 433, 434, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 710, 711, 712, 714, 715, 717, 718, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 733, 734, 735, 736, 737, 739, 740, 741, 743, 744, 745, 747, 748, 749, 750, 751, 753, 754, 755, 758, 759, 761, 762, 764, 765, 766, 769, 771, 772, 774, 775, 776, 777, 779, 780, 781, 784, 785, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 826, 827, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 842, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 860, 861, 862, 863, 864, 866, 867, 868, 870, 871, 873, 874, 875, 879], "kernel": [7, 17, 21, 25, 69, 70, 71, 72, 73, 75, 92, 140, 144, 163, 169, 170, 171, 172, 189, 195, 204, 213, 215, 224, 238, 249, 393, 395, 396, 411, 412, 419, 486, 487, 495, 504, 514, 522, 719, 732, 746, 755, 781, 857], "bandwidth": [7, 17, 21, 25, 69, 70, 72, 73, 75, 144, 163, 169, 172, 189, 195, 395, 396, 411, 412, 419, 487, 495, 504, 514, 522, 703, 719, 732, 746], "autocorrel": [7, 25, 69, 92, 140, 144, 189, 195, 204, 213, 215, 224, 238, 249, 385, 395, 411, 419, 746, 755, 781], "hac": [7, 25, 69, 71, 72, 73, 75, 163, 167, 393, 419, 487, 495, 504, 514, 522, 732], "name": [7, 17, 21, 25, 28, 49, 69, 75, 79, 80, 92, 110, 140, 141, 163, 169, 173, 189, 195, 204, 213, 215, 217, 224, 226, 228, 238, 249, 260, 272, 300, 325, 362, 384, 387, 388, 395, 403, 411, 419, 429, 437, 445, 452, 465, 469, 479, 487, 495, 504, 506, 514, 522, 529, 565, 605, 619, 654, 691, 699, 703, 704, 719, 732, 746, 752, 755, 757, 760, 763, 766, 768, 770, 778, 781, 783, 786, 859, 864], "see": [7, 17, 21, 25, 69, 70, 72, 75, 92, 139, 140, 142, 144, 189, 204, 215, 226, 238, 249, 393, 479, 487, 495, 504, 506, 514, 522, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680, 703, 757, 768, 783, 790, 803, 825, 837], "note": [7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 35, 46, 55, 66, 69, 73, 83, 87, 92, 97, 101, 110, 113, 125, 128, 130, 138, 140, 141, 144, 145, 151, 157, 163, 169, 170, 171, 172, 183, 186, 189, 195, 202, 203, 204, 206, 210, 212, 213, 214, 217, 221, 223, 224, 225, 226, 228, 231, 233, 235, 236, 237, 238, 240, 244, 246, 247, 248, 249, 251, 255, 257, 261, 263, 264, 272, 276, 278, 284, 292, 295, 310, 313, 314, 315, 316, 324, 325, 329, 335, 342, 344, 347, 348, 349, 350, 352, 354, 362, 365, 371, 379, 382, 385, 388, 390, 392, 393, 394, 395, 403, 411, 419, 429, 437, 445, 449, 455, 470, 478, 479, 481, 484, 485, 486, 487, 489, 492, 493, 494, 495, 497, 500, 501, 502, 504, 510, 511, 513, 514, 516, 519, 520, 521, 522, 524, 527, 528, 531, 532, 533, 534, 536, 537, 539, 540, 541, 543, 549, 552, 554, 555, 556, 559, 563, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 579, 587, 590, 592, 594, 595, 598, 603, 617, 620, 621, 622, 623, 625, 626, 628, 629, 630, 632, 638, 641, 643, 644, 645, 648, 652, 655, 656, 657, 658, 660, 661, 663, 664, 665, 667, 673, 676, 678, 679, 680, 683, 689, 703, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 752, 753, 757, 759, 761, 763, 764, 768, 771, 773, 774, 777, 778, 779, 783, 785, 787, 790, 791, 802, 803, 809, 813, 816, 817, 825, 826, 837, 843, 847, 850, 851, 858], "avail": [7, 69, 72, 75, 92, 140, 143, 144, 172, 189, 204, 213, 215, 224, 226, 238, 249, 385, 388, 391, 394, 403, 486, 549, 587, 638, 673, 701, 703, 704, 707], "bartlett": [7, 17, 21, 25, 69, 71, 72, 144, 163, 169, 170, 172, 195, 385, 393, 395, 411, 495, 504, 514, 522, 703, 719, 732, 746], "non": [7, 16, 20, 69, 70, 72, 86, 87, 140, 144, 163, 385, 395, 411, 419, 478, 483, 486, 491, 494, 499, 502, 508, 513, 518, 521, 526, 529, 540, 541, 565, 576, 577, 619, 629, 630, 654, 664, 665, 699, 703], "neg": [7, 21, 140, 141, 163, 395, 411, 419, 699, 707], "integ": [7, 17, 21, 25, 388, 395, 411, 419, 479, 495, 504, 514, 522, 709], "If": [7, 16, 19, 20, 21, 23, 73, 79, 88, 89, 92, 110, 139, 140, 144, 145, 151, 157, 163, 173, 189, 195, 210, 215, 221, 226, 233, 236, 240, 244, 251, 255, 263, 272, 284, 300, 324, 325, 335, 352, 362, 371, 384, 385, 387, 393, 394, 395, 411, 419, 445, 449, 479, 484, 487, 492, 495, 500, 502, 504, 510, 514, 519, 522, 527, 541, 577, 605, 630, 665, 691, 699, 703, 707, 709, 719, 724, 728, 732, 741, 745, 746, 751, 752, 753, 757, 761, 763, 764, 766, 768, 771, 778, 779, 783, 787, 809, 843, 864, 875, 878], "optim": [7, 20, 21, 69, 75, 140, 144, 169, 195, 215, 225, 226, 231, 385, 719, 732, 746], "iv": [7, 75, 86, 139, 140, 142, 143, 144, 385, 701, 705, 706, 707, 713, 716, 719, 732, 752, 759, 763], "kernel_weight_bartlett": [7, 163, 169, 195, 732], "kernel_weight_parzen": [7, 163, 169, 195, 732], "kernel_weight_quadratic_spectr": [7, 163, 169, 195, 732], "portfolio": [16, 19, 20, 23, 24, 27, 35, 55, 71, 72, 73, 785], "factor": [16, 19, 20, 23, 24, 27, 28, 30, 33, 41, 42, 49, 51, 54, 61, 62, 69, 72, 75, 86, 87, 141, 387, 701, 702, 703, 785], "risk_fre": [16, 19, 20, 23, 69, 70], "sigma": [16, 19, 71, 73, 141, 385, 393, 395, 403, 411, 429, 437, 541, 577, 630, 665, 703, 704, 707, 709, 713, 716, 719, 724, 728, 732, 741, 742, 745, 751, 752, 757, 763, 778, 783, 789, 803, 817, 824, 837, 851], "linear": [16, 20, 24, 49, 69, 72, 75, 85, 86, 87, 128, 144, 295, 347, 382, 388, 563, 603, 652, 689, 701, 702, 703, 763, 773], "array_lik": [16, 19, 20, 21, 23, 24, 27, 87, 173, 202, 206, 210, 213, 217, 221, 224, 228, 233, 236, 240, 244, 247, 251, 255, 284, 335, 371, 478, 481, 484, 485, 486, 489, 492, 493, 494, 497, 500, 501, 502, 506, 510, 511, 513, 516, 519, 520, 521, 524, 527, 528, 549, 587, 638, 673, 752, 757, 759, 761, 763, 771, 778, 783, 785, 787], "test": [16, 17, 19, 20, 21, 23, 24, 25, 27, 35, 55, 69, 71, 72, 73, 75, 86, 110, 128, 141, 143, 259, 262, 263, 272, 278, 295, 312, 313, 314, 315, 324, 325, 342, 347, 348, 349, 350, 352, 362, 382, 387, 388, 389, 391, 392, 394, 485, 493, 501, 511, 520, 528, 529, 540, 541, 563, 565, 575, 576, 577, 603, 619, 629, 630, 652, 654, 664, 665, 689, 702, 703, 706, 773, 789, 790, 802, 803, 825, 837, 859, 863, 864, 865, 867, 868], "nob": [16, 20, 24, 28, 49, 75, 87, 98, 130, 139, 141, 145, 151, 157, 163, 169, 173, 185, 188, 189, 195, 198, 201, 202, 203, 210, 213, 214, 221, 224, 225, 231, 233, 236, 237, 244, 247, 248, 255, 262, 284, 300, 312, 335, 353, 371, 403, 419, 422, 445, 484, 492, 500, 510, 519, 527, 529, 530, 537, 549, 565, 572, 587, 605, 619, 626, 638, 654, 661, 673, 703, 709, 713, 716, 719, 724, 728, 732, 741, 745, 746, 751, 759, 785, 789, 824], "nportfolio": [16, 19, 20, 24], "price": [16, 20, 24, 35, 55, 69, 70, 72, 73, 75, 86, 141, 702], "nfactor": [16, 20, 24], "whether": [16, 17, 19, 20, 21, 23, 25, 69, 71, 75, 80, 87, 92, 98, 106, 128, 140, 141, 144, 145, 151, 157, 163, 173, 183, 186, 189, 195, 199, 204, 215, 225, 226, 238, 249, 262, 269, 278, 284, 295, 312, 313, 315, 321, 335, 347, 348, 349, 350, 353, 359, 371, 382, 385, 389, 393, 395, 403, 411, 419, 429, 437, 445, 449, 479, 481, 487, 489, 495, 497, 502, 503, 504, 506, 509, 512, 513, 514, 516, 522, 524, 549, 563, 587, 603, 638, 652, 673, 689, 707, 709, 738, 742, 746, 755, 773, 781, 789, 795, 802, 809, 824, 830, 843], "risk": [16, 19, 20, 23, 24, 28, 41, 42, 43, 49, 61, 62, 63, 69, 70, 71, 72, 73], "free": [16, 19, 20, 23, 69, 70, 71, 73], "rate": [16, 19, 20, 23, 69, 70, 71, 73, 141, 388, 703], "should": [16, 19, 20, 23, 72, 87, 92, 140, 141, 142, 173, 224, 236, 247, 385, 387, 388, 389, 445, 451, 478, 479, 481, 486, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 521, 522, 524, 699, 701, 707, 790, 803, 825, 837], "from": [16, 19, 20, 23, 27, 49, 69, 70, 72, 73, 75, 79, 80, 86, 87, 92, 98, 99, 103, 113, 128, 130, 134, 138, 139, 140, 141, 142, 143, 144, 170, 171, 172, 206, 210, 217, 221, 228, 233, 240, 244, 251, 255, 258, 259, 260, 262, 266, 276, 284, 295, 312, 318, 324, 329, 335, 342, 347, 349, 350, 352, 353, 356, 365, 371, 382, 385, 387, 388, 389, 390, 391, 392, 393, 394, 403, 450, 479, 481, 484, 487, 489, 492, 495, 497, 500, 504, 506, 510, 514, 516, 519, 522, 524, 527, 540, 541, 543, 552, 563, 575, 576, 577, 579, 590, 603, 629, 630, 632, 641, 652, 664, 665, 667, 676, 689, 703, 704, 705, 706, 707, 740, 741, 744, 745, 750, 751, 757, 759, 761, 768, 771, 783, 785, 787, 789, 809, 813, 817, 824, 843, 847, 851, 870, 878], "along": [16, 19, 20, 23, 69, 263, 703, 705], "other": [16, 19, 20, 23, 69, 70, 85, 87, 130, 134, 139, 140, 141, 142, 143, 203, 214, 225, 237, 248, 259, 385, 389, 390, 391, 392, 393, 394, 479, 495, 502, 504, 509, 514, 522, 565, 585, 699, 703, 705, 755, 781], "premia": [16, 19, 20, 23, 24, 28, 41, 42, 43, 49, 61, 62, 63, 69, 70, 71, 72, 73], "ar": [16, 19, 20, 21, 23, 24, 25, 35, 55, 69, 70, 71, 72, 73, 75, 78, 79, 80, 85, 86, 87, 92, 97, 110, 128, 130, 134, 139, 140, 141, 142, 143, 144, 163, 172, 189, 204, 206, 210, 212, 213, 215, 217, 221, 223, 224, 226, 228, 233, 235, 238, 240, 244, 246, 249, 251, 255, 257, 259, 260, 263, 272, 278, 284, 295, 324, 325, 335, 342, 347, 349, 350, 352, 362, 371, 382, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 403, 411, 429, 437, 445, 449, 470, 479, 484, 486, 487, 492, 495, 500, 502, 503, 504, 506, 509, 510, 512, 514, 519, 522, 527, 549, 552, 563, 565, 575, 587, 590, 603, 638, 641, 652, 673, 676, 689, 699, 703, 704, 705, 706, 707, 746, 752, 753, 755, 761, 763, 764, 766, 768, 771, 777, 778, 779, 781, 787, 790, 802, 803, 809, 817, 825, 837, 843, 851], "assum": [16, 19, 20, 23, 69, 73, 140, 141, 144, 189, 213, 215, 224, 226, 263, 385, 445, 478, 479, 481, 486, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 521, 522, 524, 703, 704, 705, 707, 709, 724, 728, 732, 768], "excess": [16, 19, 20, 23, 24, 72, 73], "correct": [16, 19, 20, 23, 73, 75, 141, 144, 385, 504, 522, 540, 575, 576, 629, 664, 703, 773], "posit": [16, 17, 19, 21, 25, 73, 170, 171, 172, 213, 263, 385, 763], "definit": [16, 19, 213, 385, 394, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680, 763], "residu": [16, 19, 28, 40, 49, 60, 73, 95, 97, 98, 109, 115, 119, 120, 123, 129, 139, 140, 141, 145, 150, 151, 156, 157, 162, 163, 168, 189, 194, 211, 212, 222, 223, 234, 235, 245, 246, 256, 257, 262, 271, 278, 281, 286, 287, 290, 299, 312, 323, 324, 332, 337, 338, 341, 342, 348, 349, 350, 351, 352, 353, 361, 368, 373, 374, 377, 383, 385, 388, 393, 395, 400, 403, 408, 411, 416, 419, 426, 429, 434, 437, 442, 478, 479, 481, 486, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 521, 522, 524, 529, 537, 540, 541, 545, 551, 552, 557, 564, 565, 572, 575, 576, 577, 582, 589, 590, 596, 602, 604, 619, 626, 629, 630, 634, 640, 641, 646, 653, 654, 661, 664, 665, 669, 675, 676, 681, 688, 690, 705, 707, 709, 713, 716, 719, 724, 728, 732, 740, 742, 744, 750, 752, 757, 763, 778, 783, 789, 790, 797, 803, 806, 811, 812, 813, 814, 817, 823, 824, 825, 832, 837, 840, 845, 846, 847, 848, 851, 854], "covari": [16, 17, 19, 21, 25, 28, 31, 32, 35, 49, 52, 53, 55, 69, 70, 71, 72, 73, 75, 92, 98, 102, 103, 104, 105, 106, 110, 141, 142, 143, 185, 188, 189, 191, 192, 193, 195, 198, 201, 204, 215, 226, 238, 249, 259, 262, 265, 266, 267, 268, 269, 272, 300, 301, 312, 317, 318, 319, 320, 321, 325, 349, 353, 355, 356, 357, 358, 359, 362, 391, 392, 394, 479, 486, 487, 495, 504, 514, 522, 529, 535, 541, 565, 570, 577, 605, 606, 619, 624, 630, 654, 659, 665, 699, 702, 705, 706, 740, 741, 742, 744, 745, 746, 747, 750, 751, 752, 755, 757, 763, 766, 778, 781, 783, 789, 792, 793, 794, 795, 803, 814, 817, 824, 827, 828, 829, 830, 837, 848, 851], "suitabl": [16, 20], "trade": [16, 20, 24, 69, 71, 72, 75, 86, 701], "implement": [16, 20, 24, 35, 55, 69, 71, 72, 73, 110, 141, 263, 272, 325, 349, 350, 362, 385, 388, 389, 391, 392, 394, 403, 449, 458, 486, 541, 577, 630, 665, 701, 703, 707, 752, 757, 763, 778, 783], "2": [16, 21, 28, 44, 49, 64, 70, 71, 72, 73, 79, 86, 87, 98, 100, 121, 122, 128, 130, 134, 139, 140, 141, 142, 144, 145, 151, 157, 171, 172, 186, 189, 195, 206, 215, 217, 228, 240, 251, 262, 288, 289, 295, 300, 307, 308, 312, 339, 340, 342, 347, 348, 350, 353, 375, 376, 382, 384, 385, 387, 388, 389, 390, 392, 394, 403, 429, 437, 445, 449, 470, 479, 495, 502, 504, 514, 522, 563, 603, 605, 612, 613, 614, 615, 652, 689, 691, 692, 697, 699, 701, 702, 703, 704, 705, 706, 709, 724, 732, 746, 755, 766, 781, 790, 803, 813, 817, 825, 837, 847, 851, 876], "step": [16, 21, 28, 34, 71, 72, 73, 75, 86, 140, 141, 144, 215, 262, 297, 701, 703, 704, 705, 707, 766], "load": [16, 19, 20, 23, 24, 27, 28, 30, 33, 49, 51, 54, 69, 70, 71, 72, 73, 128, 140, 141, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 387, 392, 563, 603, 652, 689, 703, 704, 705, 706, 773, 776, 785], "first": [16, 19, 23, 27, 69, 71, 72, 73, 75, 86, 141, 142, 144, 173, 215, 258, 259, 260, 262, 263, 273, 312, 326, 348, 387, 392, 394, 445, 451, 454, 494, 495, 696, 701, 703, 705, 707, 757, 766, 768, 774, 783], "stage": [16, 69, 73, 75, 86, 141, 142, 144, 202, 258, 259, 260, 262, 273, 312, 326, 348, 701, 703, 706, 752], "r_": [16, 20, 24, 71, 73, 385, 393, 707], "c_i": [16, 138], "f_t": [16, 20, 24], "beta_i": [16, 24, 71, 349, 703, 752, 763, 778], "epsilon_": [16, 20, 24, 73, 385, 388, 392, 393, 395, 486, 494, 502, 513, 521, 707, 738, 746, 752, 763, 778], "where": [16, 20, 24, 69, 71, 72, 73, 75, 87, 128, 138, 139, 140, 141, 142, 144, 145, 151, 157, 163, 172, 183, 186, 195, 213, 215, 224, 231, 236, 259, 263, 278, 295, 300, 313, 314, 315, 324, 342, 347, 348, 349, 350, 352, 382, 384, 385, 387, 388, 389, 392, 393, 395, 403, 411, 429, 437, 470, 478, 481, 485, 489, 493, 497, 501, 502, 506, 511, 516, 520, 521, 524, 528, 540, 541, 563, 575, 576, 577, 603, 605, 629, 630, 652, 664, 665, 689, 691, 703, 704, 705, 706, 707, 709, 713, 716, 719, 724, 728, 732, 738, 742, 746, 752, 757, 761, 763, 768, 771, 778, 783, 787, 790, 802, 803, 809, 813, 817, 825, 837, 843, 847, 851, 858], "i": [16, 20, 24, 70, 73, 75, 87, 128, 134, 138, 139, 141, 145, 151, 157, 163, 170, 171, 172, 183, 186, 195, 224, 236, 295, 347, 348, 349, 350, 382, 385, 388, 392, 393, 395, 411, 429, 478, 521, 703, 704, 707, 738, 746, 752, 763, 778, 790, 803, 825, 837], "requir": [16, 69, 71, 72, 75, 79, 80, 85, 140, 144, 206, 217, 228, 240, 247, 251, 263, 314, 342, 385, 387, 388, 389, 392, 481, 489, 495, 497, 502, 504, 506, 513, 516, 524, 703, 705, 707, 761, 771, 787, 803, 809, 837, 843], "allow": [16, 69, 70, 71, 75, 92, 140, 141, 142, 144, 189, 213, 215, 224, 388, 389, 390, 393, 703, 705, 706, 707, 738, 746, 755, 768, 781], "econom": [16, 71, 141, 702, 703], "interest": [16, 70, 87, 139, 141, 385, 392, 703], "These": [16, 69, 75, 85, 113, 140, 141, 144, 276, 329, 365, 385, 387, 388, 394, 502, 543, 552, 579, 590, 632, 641, 667, 676, 703, 704, 705, 707, 761, 771, 787, 809, 813, 843, 847], "report": [16, 73, 75, 140, 141, 142, 385, 388, 390, 394, 486, 703, 707], "second": [16, 19, 23, 27, 69, 71, 72, 73, 139, 140, 141, 263, 385, 393, 703, 757, 768, 783], "bar": [16, 73, 186, 224, 231, 278, 385, 393, 478, 532, 534, 567, 569, 621, 623, 656, 658, 707, 802], "r": [16, 28, 44, 49, 64, 69, 70, 72, 73, 75, 98, 100, 121, 122, 139, 140, 141, 142, 144, 259, 262, 288, 289, 300, 307, 308, 312, 339, 340, 348, 350, 353, 375, 376, 385, 387, 388, 389, 390, 391, 392, 394, 605, 612, 613, 614, 615, 702, 703, 704, 705, 706, 753, 764, 773, 779, 817, 851], "_i": [16, 24, 35, 55, 145, 151, 157, 163, 195, 231, 278, 348, 349, 395, 429, 532, 534, 567, 569, 621, 623, 656, 658, 746, 803, 837], "lambda_0": [16, 71], "hat": [16, 24, 35, 55, 71, 73, 145, 151, 157, 163, 202, 213, 224, 231, 236, 278, 313, 315, 324, 342, 348, 349, 350, 352, 385, 393, 395, 403, 411, 429, 437, 486, 532, 533, 534, 541, 567, 568, 569, 577, 621, 622, 623, 630, 656, 657, 658, 665, 703, 707, 709, 724, 732, 746, 752, 763, 778, 790, 803, 813, 817, 825, 837, 847, 851], "beta": [16, 20, 28, 49, 69, 73, 87, 139, 202, 213, 224, 231, 236, 385, 388, 392, 393, 478, 486, 494, 502, 513, 521, 532, 533, 534, 541, 567, 568, 569, 577, 621, 622, 623, 630, 656, 657, 658, 665, 703, 707, 752, 753, 763, 764, 773, 774, 778, 779], "prime": [16, 71, 73, 145, 151, 163, 342, 385, 393, 478, 486, 494, 502, 513, 521, 703, 707, 746, 774, 817, 851], "lambda": [16, 20, 28, 41, 49, 61, 71, 73], "eta_i": [16, 350], "averag": [16, 24, 71, 73, 139, 141, 144, 215, 231, 385, 388, 392, 393, 449, 458, 478, 532, 554, 567, 592, 621, 643, 656, 678, 703, 707, 766, 802, 817, 851], "includ": [16, 28, 33, 49, 54, 69, 70, 73, 98, 112, 140, 141, 142, 145, 151, 157, 163, 169, 202, 206, 207, 209, 213, 217, 218, 220, 224, 228, 229, 232, 236, 240, 241, 243, 247, 251, 252, 254, 259, 262, 275, 278, 284, 300, 312, 328, 335, 353, 364, 371, 384, 385, 387, 389, 390, 392, 393, 394, 481, 486, 489, 497, 502, 503, 509, 512, 516, 524, 533, 536, 537, 539, 540, 541, 549, 555, 565, 568, 571, 572, 574, 575, 576, 577, 580, 587, 593, 594, 605, 619, 622, 625, 626, 628, 629, 630, 638, 644, 657, 660, 661, 663, 664, 665, 673, 679, 691, 699, 703, 707, 719, 732, 746, 752, 757, 768, 783, 809, 813, 843, 847], "gl": [16, 75, 141, 247, 388, 701, 704, 705, 706, 707, 709, 724, 728, 732, 752, 755, 757, 763, 766, 778, 781, 783, 789, 790, 801, 803, 824, 825, 836, 837], "alpha": [16, 24, 28, 35, 49, 55, 69, 71, 73, 80, 144, 236, 240, 251, 385, 393, 785], "eta": [16, 73, 385, 707, 813, 817, 847, 851], "formula": [16, 19, 20, 23, 24, 27, 71, 75, 128, 143, 202, 206, 210, 213, 217, 221, 224, 228, 233, 236, 240, 244, 247, 251, 255, 284, 295, 335, 347, 371, 382, 391, 392, 394, 478, 481, 484, 486, 489, 492, 494, 497, 500, 502, 506, 510, 513, 516, 519, 521, 524, 527, 549, 563, 587, 603, 638, 652, 673, 689, 706, 707, 752, 757, 761, 763, 768, 771, 778, 783, 787, 809, 843], "cov_typ": [17, 21, 25, 69, 70, 71, 72, 92, 98, 140, 141, 142, 144, 189, 204, 215, 226, 238, 249, 258, 262, 312, 353, 388, 392, 479, 486, 487, 495, 504, 506, 514, 522, 703, 704, 705, 706, 755, 766, 781], "cov_config": [17, 21, 25, 92, 98, 189, 204, 215, 226, 238, 249, 258, 262, 312, 353, 479, 495, 504, 514, 522, 709, 713, 716, 719, 724, 728, 732, 755, 766, 781, 789, 824], "debia": [17, 21, 25, 189, 393, 395, 403, 411, 419, 429, 437, 703, 709, 858], "adjust": [17, 21, 25, 92, 98, 106, 122, 145, 150, 151, 156, 157, 162, 163, 168, 183, 186, 194, 195, 199, 204, 215, 226, 236, 238, 249, 262, 269, 284, 289, 300, 308, 312, 321, 335, 340, 353, 359, 371, 376, 385, 388, 390, 393, 395, 403, 411, 429, 437, 479, 487, 495, 504, 514, 522, 549, 587, 638, 673, 703, 707, 709, 724, 728, 732, 738, 742, 746, 755, 766, 781, 789, 795, 809, 824, 830, 843], "addit": [17, 21, 25, 75, 78, 92, 140, 141, 144, 204, 210, 213, 215, 217, 221, 224, 225, 226, 228, 233, 238, 244, 249, 255, 388, 389, 395, 403, 411, 429, 437, 479, 484, 492, 495, 500, 504, 510, 514, 519, 522, 527, 703, 706, 755, 761, 763, 766, 768, 771, 781, 787], "specif": [17, 21, 25, 69, 71, 92, 110, 141, 142, 143, 172, 189, 204, 210, 215, 221, 226, 233, 238, 244, 249, 255, 272, 284, 325, 335, 362, 371, 388, 391, 392, 393, 479, 481, 484, 489, 492, 495, 497, 500, 502, 504, 506, 510, 513, 514, 516, 519, 522, 524, 527, 703, 704, 707, 759, 761, 771, 785, 787, 809, 843], "option": [17, 21, 25, 69, 70, 72, 73, 75, 79, 80, 92, 140, 189, 204, 215, 224, 226, 238, 249, 385, 389, 390, 393, 394, 479, 487, 495, 504, 514, 522, 705, 709, 711, 713, 715, 716, 718, 719, 722, 724, 726, 728, 730, 732, 735, 752, 755, 763, 766, 768, 778, 781, 789, 821], "linearfactormodelresult": [17, 25], "result": [17, 21, 25, 69, 72, 75, 79, 80, 92, 98, 125, 141, 143, 204, 215, 226, 236, 238, 249, 387, 388, 390, 391, 392, 393, 479, 481, 487, 489, 495, 497, 502, 504, 506, 513, 514, 516, 522, 524, 703, 704, 706, 755, 766, 781], "statist": [17, 20, 21, 25, 28, 35, 43, 48, 49, 55, 63, 68, 69, 70, 71, 72, 75, 98, 110, 127, 128, 139, 140, 141, 142, 144, 231, 259, 262, 263, 272, 278, 294, 295, 300, 303, 312, 313, 314, 315, 324, 325, 342, 346, 347, 348, 349, 350, 352, 353, 362, 381, 382, 387, 388, 389, 392, 393, 394, 529, 538, 540, 541, 560, 562, 563, 565, 573, 575, 576, 577, 585, 599, 601, 603, 605, 608, 619, 627, 629, 630, 649, 651, 652, 654, 662, 664, 665, 685, 687, 689, 702, 703, 705, 789, 790, 802, 803, 819, 824, 825, 837, 853, 859, 863, 864, 867, 868], "take": [17, 21, 25, 142, 385, 388, 392, 703], "argument": [17, 21, 25, 69, 70, 75, 87, 140, 141, 189, 213, 217, 224, 225, 228, 388, 393, 703, 704, 755, 763, 768, 781], "parzen": [17, 21, 25, 70, 71, 72, 75, 144, 163, 169, 171, 172, 195, 385, 393, 395, 411, 487, 495, 504, 514, 522, 703, 719, 732, 746], "qs": [17, 21, 25, 71, 144, 163, 169, 172, 195, 395, 411, 495, 504, 514, 522, 703, 719, 732, 746], "quadrat": [17, 21, 25, 71, 72, 75, 110, 144, 163, 169, 172, 195, 272, 325, 362, 385, 393, 395, 411, 703, 719, 732, 746], "spectral": [17, 21, 25, 71, 72, 75, 144, 163, 169, 172, 195, 385, 393, 395, 411, 703, 719, 732, 746], "classmethod": [19, 23, 27, 471, 481, 489, 497, 506, 516, 524, 757, 759, 768, 783, 785], "data": [19, 23, 27, 72, 75, 86, 97, 113, 128, 139, 141, 144, 145, 151, 157, 169, 203, 206, 210, 212, 214, 217, 221, 223, 225, 228, 233, 235, 237, 240, 244, 246, 248, 251, 255, 257, 276, 284, 295, 329, 335, 347, 365, 371, 382, 385, 390, 392, 393, 394, 478, 479, 481, 484, 485, 486, 489, 492, 493, 494, 497, 500, 501, 502, 506, 510, 511, 513, 516, 519, 520, 521, 524, 527, 528, 529, 543, 549, 552, 563, 565, 579, 587, 590, 603, 619, 632, 638, 641, 652, 654, 667, 673, 676, 689, 692, 699, 702, 704, 706, 707, 713, 716, 719, 757, 761, 768, 771, 783, 785, 787, 809, 843, 856, 857], "modifi": [19, 23, 27, 70, 75, 206, 217, 228, 236, 240, 251, 385, 704, 706], "syntax": [19, 23, 27, 87, 142, 206, 217, 228, 240, 251, 389, 481, 489, 497, 516, 524, 703, 704, 705, 706, 757, 768, 783], "describ": [19, 23, 27, 73, 130, 140, 141, 144, 206, 217, 228, 240, 251, 388, 391, 392, 502], "datafram": [19, 23, 27, 30, 31, 38, 39, 45, 48, 51, 52, 58, 59, 65, 68, 70, 75, 87, 88, 89, 99, 101, 102, 128, 130, 131, 132, 134, 139, 141, 142, 173, 180, 206, 210, 217, 221, 228, 233, 240, 244, 251, 255, 259, 264, 265, 284, 295, 303, 305, 306, 309, 311, 316, 317, 335, 347, 354, 355, 371, 382, 388, 389, 394, 422, 445, 447, 450, 451, 453, 456, 458, 466, 467, 470, 476, 481, 484, 489, 492, 497, 500, 506, 510, 516, 519, 524, 527, 530, 531, 535, 549, 563, 566, 570, 585, 587, 603, 608, 610, 611, 616, 618, 620, 624, 638, 652, 655, 659, 673, 684, 689, 692, 693, 695, 697, 698, 699, 703, 704, 705, 753, 757, 761, 764, 768, 771, 773, 776, 779, 783, 787, 791, 792, 800, 809, 812, 814, 823, 826, 827, 835, 843, 846, 848, 854], "contain": [19, 23, 27, 70, 71, 75, 87, 92, 128, 130, 134, 141, 142, 143, 144, 145, 173, 177, 182, 183, 184, 186, 187, 189, 195, 197, 200, 204, 206, 213, 215, 217, 225, 226, 228, 236, 238, 240, 249, 251, 259, 260, 263, 273, 284, 295, 313, 314, 315, 324, 326, 335, 342, 347, 348, 349, 350, 352, 371, 382, 385, 387, 389, 391, 392, 393, 445, 453, 455, 466, 470, 479, 481, 489, 495, 497, 504, 506, 514, 516, 522, 524, 529, 549, 563, 565, 587, 603, 619, 638, 652, 654, 673, 689, 699, 703, 705, 706, 707, 713, 716, 719, 739, 742, 743, 745, 748, 752, 757, 758, 761, 763, 766, 768, 769, 771, 778, 783, 784, 787, 809, 843, 858], "variabl": [19, 23, 27, 70, 75, 79, 80, 86, 87, 88, 89, 92, 98, 100, 107, 130, 131, 132, 134, 138, 139, 144, 145, 151, 157, 163, 173, 202, 206, 213, 215, 217, 224, 228, 236, 240, 247, 251, 259, 260, 263, 278, 314, 324, 342, 348, 349, 350, 352, 385, 387, 389, 392, 393, 394, 395, 403, 411, 419, 429, 437, 445, 449, 451, 454, 462, 469, 478, 479, 481, 485, 486, 489, 493, 494, 495, 497, 501, 502, 504, 506, 511, 513, 514, 516, 520, 521, 522, 524, 528, 532, 533, 534, 540, 549, 554, 555, 567, 568, 569, 576, 587, 592, 594, 621, 622, 623, 629, 638, 643, 644, 656, 657, 658, 664, 673, 678, 679, 699, 702, 703, 704, 705, 706, 707, 709, 724, 728, 732, 752, 757, 759, 761, 763, 766, 768, 771, 774, 778, 783, 785, 787, 809, 817, 843, 851], "instanc": [19, 23, 27, 79, 80, 134, 173, 206, 217, 228, 240, 251, 699, 757, 759, 768, 783, 785], "can": [19, 21, 23, 27, 69, 70, 71, 72, 73, 75, 85, 87, 92, 139, 140, 141, 142, 144, 210, 215, 221, 226, 233, 236, 244, 255, 284, 335, 350, 371, 385, 387, 388, 389, 390, 391, 392, 393, 394, 445, 449, 481, 484, 489, 492, 497, 500, 502, 506, 510, 513, 516, 519, 524, 527, 549, 587, 638, 673, 703, 704, 705, 707, 752, 753, 757, 761, 763, 764, 768, 771, 778, 779, 783, 785, 787, 809, 843], "two": [19, 23, 27, 69, 70, 71, 72, 73, 75, 86, 140, 141, 144, 202, 215, 263, 387, 388, 392, 393, 403, 479, 487, 502, 504, 506, 514, 522, 703, 704, 705, 707, 755, 757, 768, 774, 781, 783, 813, 847], "wai": [19, 23, 27, 69, 70, 75, 92, 140, 144, 189, 199, 204, 213, 215, 224, 238, 249, 385, 393, 403, 455, 479, 502, 504, 514, 521, 522, 703, 755, 757, 768, 781, 783], "specifi": [19, 23, 27, 70, 75, 87, 130, 140, 141, 143, 144, 215, 388, 391, 392, 393, 394, 481, 489, 497, 502, 506, 516, 524, 549, 587, 638, 673, 703, 705, 706, 707, 757, 766, 768, 783, 875], "separ": [19, 23, 27, 70, 87, 128, 295, 347, 382, 385, 563, 603, 652, 689, 704, 705, 707, 752, 778], "exampl": [19, 23, 27, 70, 71, 72, 75, 85, 87, 128, 130, 134, 142, 143, 206, 217, 228, 240, 251, 295, 347, 382, 387, 391, 392, 393, 479, 481, 487, 489, 495, 497, 504, 506, 514, 516, 522, 524, 563, 603, 652, 689, 704, 705, 706, 707, 757, 768, 783, 785], "dataset": [19, 23, 27, 69, 70, 72, 75, 128, 140, 141, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 387, 388, 389, 392, 394, 563, 603, 652, 689, 699, 701, 703, 704, 705, 706, 785], "import": [19, 23, 27, 72, 85, 87, 128, 130, 134, 139, 141, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 387, 388, 389, 391, 392, 393, 394, 479, 481, 487, 489, 495, 497, 504, 506, 514, 516, 522, 524, 563, 603, 652, 689, 703, 704, 705, 706, 757, 768, 783, 785], "french": [19, 23, 27, 69, 70, 71, 72, 703, 785], "s1m1": [19, 23, 27, 69, 70], "s1m5": [19, 23, 27, 69, 70], "s3m3": [19, 23, 27, 69, 70], "s5m1": [19, 23, 27, 69, 70], "s5m5": [19, 23, 27, 69, 70], "mktrf": [19, 23, 27, 69, 70, 72, 703, 785], "smb": [19, 23, 27, 69, 70, 72], "hml": [19, 23, 27, 69, 70, 72], "mod": [19, 23, 27, 69, 70, 72, 87, 139, 141, 142, 144, 206, 217, 228, 240, 251, 387, 388, 389, 392, 479, 481, 487, 489, 495, 497, 504, 506, 514, 516, 522, 524, 563, 603, 652, 689, 703, 704, 705, 706, 757, 768, 783, 785], "s3m1": [19, 23, 27, 69, 70], "s3m5": [19, 23, 27, 69, 70], "gmm": [20, 21, 28, 34, 71, 72, 75, 86, 143, 213, 214, 215, 217, 224, 226, 228, 231, 262, 263, 277, 297, 701, 702, 706, 763, 768, 789, 820, 821, 822], "left": [20, 70, 73, 79, 263, 385, 393, 478, 486, 494, 502, 513, 521, 703, 705, 707, 752, 763, 778, 803, 837], "begin": [20, 73, 385, 393, 705, 707, 752, 763, 778], "arrai": [20, 70, 72, 73, 75, 128, 140, 144, 169, 170, 171, 172, 173, 189, 199, 210, 221, 233, 244, 255, 284, 295, 335, 347, 371, 382, 388, 395, 403, 411, 419, 429, 437, 445, 450, 453, 455, 466, 484, 492, 500, 504, 510, 519, 527, 549, 563, 587, 603, 638, 652, 673, 689, 703, 707, 709, 713, 716, 719, 728, 752, 759, 761, 763, 771, 778, 785, 787, 809, 843, 856, 857, 858], "c": [20, 73, 128, 263, 295, 347, 382, 385, 393, 563, 603, 652, 689, 707], "t": [20, 28, 39, 43, 48, 49, 59, 63, 68, 69, 70, 72, 73, 75, 80, 98, 101, 118, 127, 139, 140, 141, 142, 144, 262, 264, 285, 294, 300, 311, 312, 316, 336, 346, 353, 354, 372, 381, 387, 388, 389, 392, 393, 394, 395, 411, 486, 487, 529, 531, 550, 562, 565, 566, 588, 601, 605, 618, 619, 620, 639, 651, 654, 655, 674, 687, 703, 704, 705, 706, 707, 773, 774, 789, 791, 810, 819, 824, 826, 844, 853], "otim": [20, 73, 703, 707, 716, 742, 752, 778], "f_": [20, 73, 315, 352, 385, 540, 541, 575, 576, 577, 629, 630, 664, 665], "mu": [20, 73, 707], "end": [20, 73, 78, 385, 388, 393, 394, 705, 707, 752, 763, 778], "right": [20, 70, 73, 79, 385, 393, 478, 486, 494, 502, 513, 521, 703, 705, 707, 752, 763, 778, 803, 837], "1_": [20, 73, 385], "n": [20, 73, 130, 134, 141, 145, 151, 157, 163, 172, 183, 186, 195, 224, 236, 278, 313, 314, 315, 324, 342, 348, 350, 352, 385, 387, 388, 392, 393, 394, 395, 403, 411, 429, 437, 703, 707, 738, 746, 790, 802, 803, 825, 837, 856, 857, 858], "object": [20, 21, 69, 140, 144, 226, 231, 263, 273, 313, 314, 315, 324, 326, 342, 348, 349, 350, 352, 384, 387, 449, 470, 691, 703, 754, 757, 765, 768, 780, 783, 869, 873, 874, 879], "function": [20, 21, 69, 73, 75, 134, 140, 141, 142, 195, 213, 215, 217, 224, 226, 228, 231, 385, 392, 393, 394, 395, 411, 759, 763, 768, 785], "usual": [20, 70, 73, 139, 140, 141, 144, 385, 387, 388, 392, 394, 703, 705], "j": [20, 28, 35, 49, 55, 69, 70, 71, 72, 140, 141, 163, 195, 262, 263, 278, 350, 385, 395, 411, 702, 703, 707, 738, 746, 763, 789, 790, 802, 825], "use_cu": [21, 69, 72], "disp": [21, 69], "10": [21, 69, 139, 140, 141, 300, 384, 387, 388, 389, 605, 691, 702, 703, 705], "max_it": 21, "1000": [21, 87, 141], "start": [21, 139, 144, 224, 225, 226, 324, 352, 696], "opt_opt": [21, 225, 226], "befor": [21, 75, 88, 89, 140, 183, 186, 195, 199, 284, 335, 371, 387, 388, 549, 587, 638, 673, 703, 738, 742, 746, 809, 843], "weight": [21, 69, 71, 73, 75, 87, 92, 97, 98, 128, 129, 143, 144, 163, 170, 171, 172, 183, 184, 186, 187, 189, 195, 196, 197, 199, 200, 202, 206, 212, 213, 214, 215, 217, 223, 224, 228, 231, 235, 236, 240, 246, 247, 251, 257, 258, 262, 263, 295, 296, 297, 298, 299, 312, 347, 351, 353, 382, 383, 387, 388, 390, 393, 395, 411, 449, 455, 458, 478, 479, 481, 486, 489, 494, 497, 502, 506, 513, 516, 521, 524, 529, 532, 533, 534, 554, 555, 556, 563, 564, 565, 567, 568, 569, 592, 594, 595, 603, 604, 619, 621, 622, 623, 643, 644, 645, 652, 653, 654, 656, 657, 658, 678, 679, 680, 689, 690, 692, 699, 703, 705, 709, 713, 716, 719, 724, 732, 738, 739, 741, 742, 743, 745, 746, 748, 751, 752, 757, 763, 766, 768, 778, 783, 789, 813, 817, 820, 821, 822, 823, 824, 847, 851, 854], "matrix": [21, 69, 70, 75, 128, 130, 138, 139, 141, 144, 145, 151, 157, 163, 183, 186, 189, 195, 196, 199, 203, 210, 213, 214, 215, 221, 224, 225, 231, 233, 237, 244, 248, 255, 262, 263, 295, 296, 297, 298, 324, 342, 347, 352, 382, 385, 481, 489, 497, 502, 506, 513, 516, 524, 563, 603, 652, 689, 702, 703, 707, 709, 713, 716, 719, 724, 728, 732, 738, 740, 741, 742, 744, 745, 746, 750, 751, 752, 753, 763, 764, 766, 773, 776, 777, 778, 779, 789, 803, 820, 837], "continu": [21, 72, 75, 86, 87, 92, 130, 132, 134, 138, 144, 224, 703], "updat": [21, 72, 75, 86, 144, 224], "number": [21, 28, 34, 37, 49, 57, 69, 70, 71, 75, 79, 83, 87, 98, 107, 110, 116, 128, 138, 140, 141, 145, 172, 173, 179, 210, 215, 221, 233, 244, 255, 262, 263, 272, 282, 295, 312, 314, 324, 325, 333, 342, 347, 352, 353, 362, 369, 382, 385, 388, 389, 392, 393, 394, 395, 403, 411, 429, 437, 445, 447, 459, 460, 461, 462, 529, 536, 537, 540, 541, 547, 563, 565, 571, 572, 576, 577, 584, 603, 619, 625, 626, 629, 630, 636, 652, 654, 660, 661, 664, 665, 671, 689, 692, 693, 694, 695, 697, 698, 699, 703, 705, 707, 709, 716, 755, 757, 766, 768, 773, 781, 783, 789, 801, 807, 824, 836, 841, 858], "correspond": [21, 73, 128, 144, 210, 221, 233, 244, 255, 263, 284, 295, 300, 335, 347, 371, 382, 384, 385, 451, 453, 466, 484, 492, 500, 510, 519, 527, 563, 603, 605, 652, 689, 691, 707, 713, 716, 719, 761, 771, 787, 809, 843, 875], "standard": [21, 28, 42, 45, 49, 62, 65, 69, 70, 72, 75, 98, 124, 140, 173, 206, 217, 228, 240, 251, 259, 262, 291, 300, 309, 312, 343, 353, 378, 388, 389, 390, 392, 481, 486, 487, 489, 497, 504, 516, 524, 529, 558, 565, 597, 605, 616, 619, 647, 654, 682, 703, 704, 757, 768, 783, 789, 815, 824, 849], "effici": [21, 69, 71, 72, 73, 140, 141, 215, 263, 385, 388, 392, 393, 703, 705, 706, 790, 803, 825, 837], "higher": 21, "iter": [21, 28, 139, 140, 144, 215, 225, 262, 455, 705, 755, 766, 781, 789, 824, 878], "until": [21, 140, 215, 391, 399, 407, 415, 425, 433, 441, 455, 704, 705, 755, 781], "converg": [21, 140, 144, 215, 455, 705, 755, 766, 781], "up": [21, 75, 92, 388, 403], "given": [21, 139, 393, 478, 486, 494, 513, 521, 763, 875], "between": [21, 69, 70, 75, 85, 86, 87, 140, 141, 215, 259, 263, 314, 324, 342, 348, 349, 350, 352, 385, 387, 391, 392, 394, 478, 529, 532, 533, 534, 554, 555, 565, 567, 568, 569, 592, 594, 619, 621, 622, 623, 643, 644, 654, 656, 657, 658, 678, 679, 699, 701, 703, 707, 738, 746, 790, 825], "print": [21, 69, 70, 72, 139, 140, 141, 142, 144, 387, 388, 389, 703, 704, 705], "suppress": [21, 69], "output": [21, 69, 75, 78, 140, 144, 225, 226, 284, 300, 335, 371, 384, 394, 549, 587, 605, 638, 673, 691, 809, 843], "maximum": [21, 140, 144, 170, 171, 172, 215, 755, 766, 781], "minim": [21, 69, 225, 226, 385, 470, 707], "2sl": [21, 75, 86, 141, 142, 202, 226, 701, 705, 707], "pass": [21, 70, 75, 92, 134, 140, 141, 144, 204, 213, 215, 217, 224, 225, 226, 228, 238, 249, 388, 703, 704, 752, 755, 763, 766, 768, 781], "scipi": [21, 75, 87, 92, 139, 225, 226], "defer": [21, 75, 226, 399, 407, 415, 425, 433, 441], "choos": [21, 226, 487], "an": [21, 69, 70, 72, 73, 75, 87, 110, 139, 140, 141, 142, 144, 173, 226, 236, 272, 325, 349, 362, 385, 387, 388, 389, 392, 393, 394, 445, 479, 495, 502, 504, 506, 540, 541, 575, 576, 577, 629, 630, 664, 665, 703, 704, 705, 706, 707, 713, 716, 719, 752, 757, 761, 763, 768, 771, 778, 783, 787, 790, 803, 809, 813, 817, 825, 837, 843, 847, 851, 864, 873, 874, 879], "appropri": [21, 72, 73, 226, 385, 388, 393], "all": [21, 35, 55, 69, 70, 71, 72, 73, 75, 97, 110, 130, 134, 139, 140, 141, 144, 172, 212, 223, 226, 235, 246, 257, 259, 263, 272, 284, 300, 304, 305, 306, 309, 311, 324, 325, 335, 352, 362, 371, 385, 387, 388, 389, 390, 392, 393, 394, 419, 445, 479, 486, 495, 521, 540, 549, 575, 576, 587, 605, 609, 610, 611, 616, 618, 629, 638, 664, 673, 703, 705, 707, 738, 746, 752, 755, 759, 762, 763, 766, 772, 781, 785, 788, 790, 803, 817, 825, 837, 851, 870], "input": [21, 70, 72, 75, 135, 140, 142, 144, 173, 226, 284, 335, 371, 387, 388, 392, 445, 479, 495, 504, 514, 522, 549, 587, 638, 673, 703, 809, 843], "except": [21, 69, 73, 140, 141, 226, 385, 388, 445, 703, 705], "fun": [21, 226], "x0": [21, 226], "arg": [21, 170, 171, 226, 869, 878], "overridden": [21, 226, 390, 703], "gmmfactormodelresult": 21, "linearfactormodel": [23, 69, 70, 71, 72, 86, 701], "applic": [24, 75, 92, 141, 385, 392, 702, 705], "both": [24, 69, 70, 71, 72, 75, 87, 128, 142, 144, 183, 186, 195, 206, 213, 217, 228, 236, 240, 251, 259, 263, 278, 295, 347, 382, 385, 388, 389, 449, 502, 504, 549, 563, 587, 603, 638, 652, 673, 689, 703, 704, 707, 742, 809, 843], "time": [24, 69, 70, 72, 73, 75, 130, 134, 138, 139, 140, 141, 142, 144, 348, 350, 385, 387, 392, 393, 394, 395, 403, 411, 419, 422, 429, 437, 445, 447, 449, 451, 458, 461, 466, 478, 481, 486, 489, 494, 497, 502, 504, 506, 512, 513, 514, 516, 521, 522, 524, 529, 530, 532, 554, 560, 565, 567, 592, 599, 619, 621, 643, 649, 654, 656, 678, 685, 699, 703, 704, 705, 706, 707], "seri": [24, 29, 41, 42, 43, 50, 61, 62, 63, 73, 75, 111, 113, 117, 118, 120, 124, 127, 128, 129, 130, 134, 136, 145, 151, 157, 163, 173, 176, 189, 274, 276, 283, 285, 287, 291, 294, 295, 299, 301, 302, 304, 307, 308, 327, 329, 334, 336, 338, 343, 346, 347, 351, 363, 365, 370, 372, 374, 378, 381, 382, 383, 387, 445, 457, 538, 539, 542, 543, 548, 550, 552, 558, 560, 562, 563, 564, 573, 574, 578, 579, 586, 588, 590, 597, 599, 601, 602, 603, 604, 606, 607, 609, 612, 613, 614, 615, 627, 628, 631, 632, 637, 639, 641, 647, 649, 651, 652, 653, 662, 663, 666, 667, 672, 674, 676, 682, 685, 687, 688, 689, 690, 703, 707, 753, 758, 764, 769, 773, 775, 779, 784, 790, 803, 808, 810, 815, 817, 819, 825, 837, 842, 844, 849, 851, 853], "zero": [24, 35, 55, 69, 73, 110, 259, 272, 278, 325, 362, 385, 540, 563, 565, 575, 576, 603, 629, 652, 664, 689, 703, 790, 802, 825, 856, 857], "e": [24, 69, 71, 73, 75, 128, 139, 141, 203, 214, 225, 237, 248, 295, 347, 349, 382, 385, 392, 393, 394, 395, 403, 411, 429, 437, 563, 603, 652, 689, 702, 703, 704, 705, 707, 757, 768, 783, 878], "alpha_i": [24, 388, 392, 502], "directli": [24, 79, 80, 83, 110, 140, 141, 144, 272, 325, 362, 385, 388, 705, 707], "lambda_i": 24, "sampl": [24, 75, 98, 106, 122, 139, 140, 141, 144, 145, 150, 151, 156, 157, 162, 163, 168, 172, 183, 186, 194, 195, 199, 203, 214, 225, 237, 248, 262, 269, 284, 289, 300, 308, 312, 314, 321, 335, 340, 353, 359, 371, 376, 385, 393, 403, 522, 549, 587, 638, 673, 703, 705, 707, 709, 724, 728, 732, 738, 742, 746, 755, 766, 781, 789, 790, 795, 803, 809, 824, 825, 830, 837, 843, 858], "which": [24, 69, 71, 72, 73, 75, 87, 139, 140, 141, 142, 144, 206, 210, 215, 217, 221, 228, 233, 236, 240, 244, 251, 255, 259, 284, 335, 371, 385, 387, 388, 389, 390, 392, 393, 394, 484, 492, 495, 500, 502, 504, 506, 510, 514, 519, 522, 527, 552, 590, 641, 676, 703, 704, 705, 706, 707, 746, 752, 755, 758, 759, 761, 763, 766, 769, 771, 778, 781, 784, 785, 787, 809, 843], "support": [25, 46, 66, 71, 75, 92, 125, 141, 163, 169, 195, 204, 215, 226, 238, 247, 249, 261, 292, 310, 344, 379, 387, 393, 395, 411, 419, 445, 479, 487, 495, 502, 504, 514, 522, 559, 598, 617, 648, 683, 701, 703, 704, 705, 707, 719, 732, 746, 755, 766, 781, 816, 850], "consist": [25, 69, 73, 87, 140, 141, 263, 278, 385, 388, 389, 392, 393, 394, 703, 704, 707, 752, 778, 802], "mispric": [28, 29, 33, 49, 50, 54], "cov_estim": [28, 49, 98, 262, 300, 312, 353, 605, 789, 824], "full_summari": [28, 49, 69, 70, 72], "complet": [28, 33, 49, 54, 69, 70, 72, 92, 143, 204, 238, 249, 389, 391, 706, 707, 755, 781], "summari": [28, 33, 49, 54, 69, 70, 72, 75, 98, 139, 140, 141, 142, 144, 258, 262, 300, 312, 353, 387, 388, 389, 392, 394, 529, 565, 605, 619, 654, 703, 704, 705, 706, 789, 824], "measur": [28, 33, 49, 54, 69, 75, 141, 142, 144, 215, 259, 390, 393, 394, 532, 533, 534, 554, 555, 556, 567, 568, 569, 592, 594, 595, 621, 622, 623, 643, 644, 645, 656, 657, 658, 678, 679, 680, 703, 706, 789, 817, 824, 851], "j_statist": [28, 49], "model": [28, 35, 36, 46, 49, 55, 56, 66, 69, 70, 72, 75, 79, 85, 86, 87, 92, 95, 97, 98, 108, 110, 112, 113, 114, 125, 128, 139, 140, 141, 143, 145, 151, 157, 163, 173, 185, 188, 189, 198, 201, 258, 259, 260, 261, 262, 263, 270, 272, 275, 276, 278, 280, 284, 292, 295, 300, 304, 305, 306, 309, 310, 311, 312, 313, 315, 322, 324, 325, 328, 329, 331, 335, 344, 347, 348, 350, 352, 353, 360, 362, 364, 365, 367, 371, 379, 382, 384, 385, 387, 390, 392, 394, 395, 400, 403, 408, 411, 416, 419, 426, 429, 434, 437, 442, 529, 536, 539, 540, 541, 543, 544, 546, 547, 549, 552, 553, 554, 555, 556, 559, 564, 565, 571, 574, 575, 576, 577, 579, 580, 581, 583, 584, 587, 590, 591, 592, 593, 594, 595, 598, 604, 605, 609, 610, 611, 616, 617, 618, 619, 625, 628, 629, 630, 632, 633, 635, 636, 638, 641, 642, 643, 644, 645, 648, 653, 654, 660, 663, 664, 665, 667, 668, 670, 671, 673, 676, 677, 678, 679, 680, 683, 690, 691, 699, 702, 703, 707, 709, 713, 716, 719, 724, 728, 732, 741, 742, 745, 751, 789, 790, 796, 802, 803, 809, 816, 824, 825, 831, 837, 843, 850, 859], "observ": [28, 37, 49, 57, 69, 70, 72, 73, 75, 87, 98, 116, 139, 140, 141, 142, 144, 173, 202, 206, 208, 209, 213, 217, 219, 220, 224, 228, 230, 232, 236, 240, 242, 243, 247, 251, 253, 254, 262, 282, 284, 312, 333, 335, 353, 369, 371, 385, 387, 388, 389, 392, 393, 394, 403, 445, 447, 450, 457, 461, 478, 479, 483, 485, 486, 491, 493, 494, 499, 501, 502, 506, 508, 511, 513, 518, 520, 521, 526, 528, 529, 538, 547, 549, 560, 565, 573, 584, 585, 587, 599, 619, 627, 636, 638, 649, 654, 662, 671, 673, 685, 703, 704, 705, 706, 707, 738, 746, 752, 757, 763, 768, 778, 783, 789, 807, 809, 824, 841, 843], "param": [28, 49, 95, 97, 98, 140, 141, 145, 151, 157, 163, 189, 210, 211, 212, 221, 222, 223, 231, 233, 234, 235, 244, 245, 246, 255, 256, 257, 262, 300, 312, 353, 392, 395, 403, 411, 419, 429, 437, 484, 492, 500, 510, 519, 527, 529, 565, 605, 619, 654, 703, 705, 761, 771, 787, 789, 824], "pvalu": [28, 49, 75, 98, 262, 300, 312, 353, 384, 529, 565, 605, 619, 654, 691, 789, 824], "p": [28, 39, 49, 59, 69, 70, 71, 72, 73, 80, 98, 110, 118, 139, 140, 141, 142, 144, 259, 262, 263, 272, 285, 300, 303, 306, 312, 313, 314, 315, 324, 325, 336, 342, 348, 349, 350, 352, 353, 362, 372, 384, 387, 388, 389, 392, 394, 529, 540, 541, 550, 565, 575, 576, 577, 588, 605, 608, 611, 619, 629, 630, 639, 654, 664, 665, 674, 691, 703, 704, 705, 706, 707, 789, 810, 824, 844, 864, 867], "val": [28, 39, 49, 59, 98, 118, 262, 285, 300, 306, 312, 336, 353, 372, 529, 550, 565, 588, 605, 611, 619, 639, 654, 674, 789, 810, 824, 844], "residual_ss": [28, 49], "sum": [28, 40, 47, 49, 60, 67, 98, 115, 119, 126, 139, 262, 278, 281, 286, 293, 312, 324, 332, 337, 345, 352, 353, 368, 373, 380, 385, 393, 394, 403, 529, 540, 545, 551, 561, 565, 575, 576, 582, 589, 600, 619, 629, 634, 640, 650, 654, 664, 669, 675, 686, 703, 707, 789, 806, 811, 818, 824, 840, 845, 852], "risk_premia": [28, 49], "risk_premia_s": [28, 49], "error": [28, 42, 45, 49, 62, 65, 69, 73, 75, 98, 113, 124, 140, 144, 185, 188, 198, 201, 203, 214, 225, 237, 248, 262, 276, 291, 300, 309, 312, 329, 343, 350, 353, 365, 378, 384, 388, 390, 392, 395, 402, 403, 410, 411, 418, 419, 428, 429, 436, 437, 444, 504, 529, 543, 549, 558, 565, 579, 587, 597, 605, 616, 619, 632, 638, 647, 654, 667, 673, 682, 691, 703, 709, 712, 724, 727, 728, 731, 732, 737, 738, 741, 745, 746, 751, 755, 781, 789, 815, 824, 849], "risk_premia_tstat": [28, 49], "rsquar": [28, 49, 98, 141, 259, 262, 300, 312, 353, 390, 529, 532, 533, 534, 554, 555, 556, 565, 567, 568, 569, 592, 594, 595, 605, 619, 621, 622, 623, 643, 644, 645, 654, 656, 657, 658, 678, 679, 680, 703, 789, 824], "coeffici": [28, 44, 49, 64, 73, 98, 100, 110, 121, 122, 139, 140, 141, 259, 262, 272, 288, 289, 300, 307, 308, 312, 325, 339, 340, 353, 362, 375, 376, 384, 388, 393, 394, 486, 513, 529, 532, 533, 534, 540, 553, 554, 555, 556, 563, 565, 567, 568, 569, 576, 591, 592, 593, 594, 595, 603, 605, 612, 613, 614, 615, 619, 621, 622, 623, 629, 642, 643, 644, 645, 652, 654, 656, 657, 658, 664, 677, 678, 679, 680, 689, 691, 703, 707, 752, 763, 778, 789, 813, 824, 847, 858], "determin": [28, 44, 49, 64, 98, 100, 121, 122, 262, 288, 289, 300, 307, 308, 312, 339, 340, 353, 375, 376, 388, 389, 393, 529, 532, 533, 534, 553, 554, 555, 556, 565, 567, 568, 569, 591, 592, 593, 594, 595, 605, 612, 613, 614, 615, 619, 621, 622, 623, 642, 643, 644, 645, 654, 656, 657, 658, 677, 678, 679, 680, 704, 707, 753, 764, 779, 789, 813, 824, 847], "std_error": [28, 49, 98, 262, 300, 312, 353, 384, 529, 565, 605, 619, 654, 691, 703, 789, 824], "total_ss": [28, 49, 98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "total": [28, 47, 49, 67, 98, 126, 140, 141, 142, 144, 262, 293, 312, 345, 353, 380, 385, 529, 561, 565, 600, 602, 619, 650, 654, 686, 688, 703, 789, 817, 818, 824, 851, 852], "tstat": [28, 49, 98, 140, 262, 300, 312, 353, 384, 392, 529, 565, 605, 619, 654, 691, 789, 824], "waldteststatist": [35, 55, 110, 128, 140, 141, 263, 272, 278, 295, 313, 314, 315, 324, 325, 342, 347, 348, 349, 350, 352, 362, 382, 540, 541, 563, 575, 576, 577, 603, 629, 630, 652, 664, 665, 689, 790, 802, 803, 825, 837, 859], "null": [35, 55, 75, 110, 128, 140, 263, 272, 295, 313, 314, 315, 324, 325, 342, 347, 348, 349, 350, 352, 362, 382, 385, 563, 603, 652, 689, 707, 790, 803, 825, 837, 859, 864], "joint": [35, 55, 529, 540, 541, 565, 575, 576, 577, 619, 629, 630, 654, 664, 665, 703, 706, 707], "wald": [35, 55, 128, 140, 259, 295, 347, 349, 382, 385, 541, 563, 577, 603, 630, 652, 665, 689, 864], "df_resid": [39, 59, 98, 101, 118, 262, 264, 285, 312, 316, 336, 353, 354, 372, 529, 531, 550, 565, 566, 588, 619, 620, 639, 654, 655, 674, 789, 791, 810, 824, 826, 844], "els": [39, 59, 101, 118, 264, 285, 316, 336, 354, 372, 531, 550, 566, 588, 620, 639, 655, 674, 791, 810, 826, 844, 872], "normal": [39, 59, 80, 101, 118, 144, 215, 264, 285, 316, 336, 354, 372, 385, 485, 493, 501, 511, 520, 528, 531, 550, 566, 588, 620, 639, 655, 674, 760, 770, 786, 791, 810, 826, 844], "tabl": [46, 66, 79, 80, 81, 82, 83, 84, 125, 261, 292, 310, 344, 379, 392, 559, 598, 617, 648, 683, 703, 816, 850], "export": [46, 66, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "csv": [46, 66, 81, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "html": [46, 66, 69, 70, 82, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "latex": [46, 66, 83, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "as_csv": [46, 66, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "as_html": [46, 66, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "as_latex": [46, 66, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "ani": [49, 98, 113, 130, 135, 141, 142, 262, 266, 276, 296, 312, 329, 353, 365, 385, 388, 502, 506, 533, 536, 537, 541, 543, 555, 568, 571, 572, 577, 579, 594, 622, 625, 626, 630, 632, 644, 657, 660, 661, 665, 667, 679, 703, 709, 713, 716, 719, 724, 728, 821, 873, 874, 875, 879], "A": [49, 71, 72, 98, 128, 139, 141, 142, 206, 217, 228, 240, 251, 262, 295, 312, 347, 353, 382, 385, 388, 563, 603, 652, 689, 699, 702, 703, 704, 705, 707, 740, 744, 750, 785, 864], "dictionari": [49, 75, 92, 98, 128, 139, 140, 173, 177, 184, 187, 197, 200, 225, 260, 262, 295, 312, 347, 353, 382, 388, 563, 603, 652, 689, 703, 705, 739, 743, 748, 752, 757, 759, 761, 763, 768, 771, 778, 783, 785, 787, 789, 809, 824, 843, 869, 878], "common": [69, 86, 141, 144, 263, 388, 395, 411, 502, 521, 707, 759, 785, 790, 803, 825, 837, 864, 865], "asset": [69, 70, 72, 75, 86, 702], "market": [69, 70, 71, 72, 141, 388, 389], "size": [69, 70, 71, 72, 87, 98, 122, 130, 134, 139, 140, 142, 262, 284, 289, 300, 308, 312, 335, 340, 353, 371, 376, 455, 549, 587, 638, 673, 703, 704, 790, 803, 809, 825, 837, 843, 858, 864, 865], "macroeconom": [69, 71], "shock": [69, 71, 72, 75, 113, 276, 284, 329, 335, 365, 371, 388, 393, 521, 543, 549, 579, 587, 632, 638, 667, 673, 790, 803, 809, 825, 837, 843], "uncertainti": 69, "set": [69, 70, 71, 73, 75, 87, 92, 139, 141, 144, 169, 215, 247, 300, 324, 342, 352, 384, 385, 387, 388, 389, 390, 394, 395, 403, 411, 419, 422, 429, 437, 486, 529, 530, 605, 691, 703, 705, 707, 752, 753, 756, 757, 763, 764, 766, 767, 768, 778, 779, 782, 783, 877], "often": [69, 392], "although": [69, 71, 87, 140, 141, 142, 387, 388, 392, 479, 495, 504, 514, 522, 703, 707, 752], "thei": [69, 140, 141, 142, 144, 385, 388, 389, 393, 394, 449, 552, 590, 641, 676, 703, 704], "do": [69, 85, 141, 388, 392, 393, 504, 539, 574, 619, 628, 663, 703, 705, 813, 847], "need": [69, 70, 75, 128, 141, 142, 295, 347, 382, 470, 485, 493, 501, 511, 520, 528, 703, 707], "come": [69, 70, 140, 385], "ken": [69, 70, 72], "websit": [69, 70], "4": [69, 70, 72, 92, 130, 134, 139, 140, 141, 142, 144, 210, 221, 233, 244, 255, 387, 388, 389, 392, 394, 484, 492, 500, 510, 519, 527, 699, 702, 703, 704, 705, 706, 752, 783], "momentum": [69, 70], "12": [69, 70, 73, 139, 140, 141, 387, 388, 389, 394, 703, 705, 706, 707], "industri": [69, 70, 141, 393, 703], "subset": [69, 70], "sort": [69, 70], "linearmodel": [69, 70, 72, 75, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 701, 703, 704, 705, 706], "descr": [69, 70, 140, 141, 142, 388, 703], "39": [69, 70, 72, 140, 141, 388, 703, 704, 705], "librari": [69, 70, 72, 703], "http": [69, 70, 702], "mba": [69, 70], "tuck": [69, 70], "dartmouth": [69, 70], "edu": [69, 70], "page": [69, 70], "faculti": [69, 70], "data_librari": [69, 70], "date": [69, 70, 72, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705, 706], "year": [69, 70, 140, 141, 142, 387, 388, 389, 392, 394, 563, 603, 652, 689, 703], "month": [69, 70], "mom": [69, 70, 141], "rf": [69, 70, 72], "nodur": [69, 70], "durabl": [69, 70], "durbl": [69, 70], "manuf": [69, 70], "manufactur": [69, 70], "enrgi": [69, 70], "energi": [69, 70], "chem": [69, 70], "chemic": [69, 70], "buseq": [69, 70], "busi": [69, 70, 702], "equip": [69, 70], "telcm": [69, 70], "telecom": [69, 70], "util": [69, 70, 86, 142, 144, 389, 703, 755, 759, 781, 785], "shop": [69, 70], "retail": [69, 70], "hlth": [69, 70], "health": [69, 70, 140, 142], "care": [69, 70], "monei": [69, 70], "financ": [69, 70, 702], "s1v1": [69, 70, 72, 703, 785], "small": [69, 70, 72, 75, 98, 106, 139, 141, 145, 150, 151, 156, 157, 162, 163, 168, 183, 186, 194, 195, 199, 262, 269, 312, 314, 321, 353, 359, 385, 389, 392, 393, 403, 522, 703, 707, 709, 724, 728, 732, 738, 742, 746, 755, 766, 781, 789, 795, 824, 830], "firm": [69, 70, 72, 139, 140, 141, 142, 387, 389, 392, 393, 394], "low": [69, 70, 72, 75, 140, 142, 393, 449, 504], "s1v3": [69, 70, 72, 703], "medium": [69, 70], "s1v5": [69, 70, 72, 703, 785], "high": [69, 70, 72, 75, 86, 87, 139, 386, 707], "s3v1": [69, 70], "3": [69, 70, 71, 72, 73, 130, 139, 140, 141, 142, 144, 171, 172, 300, 384, 385, 387, 388, 389, 392, 393, 394, 445, 470, 563, 603, 605, 652, 689, 691, 692, 693, 703, 704, 705, 706], "s3v3": [69, 70], "s3v5": [69, 70], "5": [69, 70, 130, 134, 139, 140, 141, 142, 144, 171, 172, 300, 384, 385, 387, 388, 389, 392, 394, 605, 691, 699, 702, 703, 704, 705], "s5v1": [69, 70, 72, 703, 785], "larg": [69, 70, 72, 75, 92, 139, 141, 388, 392, 393, 394, 701, 703], "s5v3": [69, 70, 72, 703], "s5v5": [69, 70, 72, 703, 785], "loser": [69, 70], "s1m3": [69, 70], "neutral": [69, 70], "winner": [69, 70], "s5m3": [69, 70], "subtract": [69, 183, 186, 195, 199, 385, 388, 403, 738, 742, 746], "sinc": [69, 70, 71, 73, 92, 113, 139, 140, 141, 144, 186, 236, 276, 329, 365, 387, 388, 389, 394, 504, 543, 579, 632, 667, 701, 703, 704, 706, 707, 742, 813, 847], "invest": [69, 73, 389, 394], "iloc": [69, 70, 387, 703, 705], "6": [69, 70, 72, 130, 134, 139, 140, 141, 142, 172, 350, 385, 387, 388, 389, 703, 704, 705, 706], "themselv": 69, "so": [69, 70, 71, 72, 73, 75, 110, 140, 141, 142, 144, 172, 210, 221, 231, 233, 236, 244, 255, 263, 272, 325, 350, 362, 385, 387, 388, 389, 390, 392, 393, 394, 445, 449, 541, 577, 630, 665, 703, 704, 707, 790, 803, 813, 825, 837, 847], "expect": [69, 71, 73, 140, 385, 394], "thi": [69, 70, 71, 72, 73, 75, 83, 87, 92, 110, 113, 139, 140, 141, 142, 144, 186, 210, 221, 233, 244, 255, 263, 272, 276, 325, 329, 348, 362, 365, 385, 387, 388, 389, 390, 391, 392, 393, 394, 470, 481, 485, 489, 493, 495, 497, 501, 502, 504, 506, 511, 513, 516, 520, 524, 528, 532, 533, 534, 543, 554, 555, 556, 567, 568, 569, 579, 592, 594, 595, 621, 622, 623, 632, 643, 644, 645, 656, 657, 658, 667, 678, 679, 680, 701, 703, 704, 705, 706, 707, 738, 742, 746, 803, 837, 878], "also": [69, 70, 85, 87, 140, 141, 144, 231, 385, 387, 388, 393, 394, 445, 502, 541, 577, 630, 665, 699, 705, 706, 707, 757, 768, 774, 783, 877], "each": [69, 73, 75, 87, 101, 128, 130, 138, 140, 141, 144, 259, 264, 295, 316, 324, 347, 352, 354, 382, 385, 388, 392, 393, 419, 422, 486, 502, 504, 506, 529, 530, 531, 563, 566, 603, 620, 652, 655, 689, 703, 704, 705, 706, 707, 713, 716, 719, 740, 744, 745, 750, 752, 757, 761, 763, 768, 771, 778, 783, 787, 791, 809, 817, 826, 843, 851], "constant": [69, 73, 92, 98, 110, 112, 140, 142, 202, 206, 207, 213, 217, 218, 224, 228, 229, 236, 240, 241, 247, 251, 252, 262, 272, 275, 312, 325, 328, 353, 362, 364, 388, 393, 478, 481, 482, 486, 489, 490, 494, 497, 498, 502, 507, 513, 516, 517, 521, 524, 525, 529, 540, 541, 565, 576, 577, 619, 629, 630, 654, 664, 665, 699, 703, 707, 752, 758, 763, 769, 778, 784, 813, 817, 847, 851], "essenti": 69, "cap": [69, 71, 393, 785], "m": [69, 70, 71, 141, 170, 171, 172, 263, 385, 388, 702, 707, 716, 785, 857], "unsurprisingli": [69, 703], "unabl": 69, "asset_pr": [69, 70, 72, 701], "tradedfactormodel": [69, 70, 71, 72, 86, 701], "re": [69, 70, 72, 79, 80, 87, 92, 128, 139, 140, 141, 144, 295, 342, 347, 382, 387, 388, 390, 392, 393, 479, 481, 487, 489, 497, 504, 506, 514, 516, 522, 524, 529, 565, 619, 654, 703, 705], "fit": [69, 70, 72, 75, 87, 88, 89, 98, 99, 111, 128, 135, 139, 140, 141, 142, 144, 210, 221, 233, 244, 255, 258, 259, 262, 274, 284, 295, 312, 327, 335, 347, 348, 349, 350, 353, 363, 371, 382, 385, 387, 388, 389, 390, 392, 393, 394, 481, 484, 489, 492, 497, 500, 506, 510, 516, 519, 524, 527, 529, 532, 533, 534, 542, 549, 554, 555, 556, 563, 565, 567, 568, 569, 578, 587, 592, 593, 594, 595, 603, 619, 621, 622, 623, 631, 638, 643, 644, 645, 652, 654, 656, 657, 658, 666, 673, 678, 679, 680, 689, 703, 704, 705, 706, 761, 771, 787, 789, 800, 809, 817, 824, 835, 843, 851], "No": [69, 70, 72, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705, 706], "9": [69, 70, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705], "6910": 69, "70": [69, 141, 394], "034": [69, 703], "819": [69, 70, 72, 703], "0000": [69, 70, 72, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705, 706], "tue": [69, 70, 139, 140, 141, 142, 387, 388, 389, 703, 704, 705], "jul": [69, 70, 139, 140, 141, 142, 387, 388, 389, 703, 704, 705], "05": [69, 70, 80, 139, 140, 141, 142, 387, 388, 389, 703, 704, 705], "2022": [69, 70, 139, 140, 141, 142, 387, 388, 389, 703, 704, 705], "distribut": [69, 70, 71, 72, 73, 80, 110, 128, 139, 140, 141, 142, 144, 259, 263, 272, 295, 313, 314, 315, 324, 325, 342, 347, 348, 349, 350, 352, 362, 382, 385, 387, 388, 389, 392, 394, 540, 541, 563, 575, 576, 577, 603, 629, 630, 652, 664, 665, 689, 703, 705, 707, 790, 803, 825, 837, 864], "chi2": [69, 70, 72, 110, 139, 140, 141, 142, 144, 259, 272, 325, 362, 703, 705], "17": [69, 70, 92, 139, 140, 141, 142, 387, 388, 389, 392, 394, 703, 704, 705, 706], "54": [69, 141, 388, 389, 705], "58": [69, 388, 392], "std": [69, 70, 72, 139, 140, 141, 142, 144, 300, 384, 387, 388, 389, 392, 394, 605, 691, 703, 704, 705, 706], "err": [69, 70, 72, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705, 706], "stat": [69, 70, 72, 75, 139, 140, 141, 142, 144, 259, 300, 311, 385, 387, 388, 389, 391, 392, 394, 540, 576, 605, 618, 629, 664, 703, 704, 705, 706, 859, 864], "lower": [69, 70, 72, 101, 139, 140, 141, 142, 144, 264, 316, 354, 385, 387, 388, 389, 392, 394, 531, 566, 620, 655, 703, 704, 705, 706, 791, 826], "ci": [69, 70, 72, 85, 139, 140, 141, 142, 144, 387, 388, 389, 392, 394, 703, 704, 705, 706], "upper": [69, 70, 72, 101, 139, 140, 141, 142, 144, 263, 264, 316, 354, 387, 388, 389, 392, 394, 531, 566, 620, 655, 703, 704, 705, 706, 791, 826], "0065": [69, 389], "0015": [69, 141, 703, 704], "3553": 69, "0035": [69, 140, 142, 703], "0094": [69, 140, 142, 703], "heteroskedasticcovari": [69, 70, 92, 144, 189, 204, 238, 249, 755, 781], "expand": [69, 85, 140, 141, 385], "while": [69, 141, 144, 389, 390, 392, 393, 486, 504, 707], "extra": [69, 83, 84], "increas": [69, 140, 141], "still": [69, 703], "easili": [69, 141], "reject": [69, 707, 790, 803, 825, 837], "8971": 69, "53": 69, "271": 69, "0016": [69, 70, 72, 141, 703, 704], "0010": [69, 70, 139, 141, 389, 703, 705], "6021": 69, "1091": 69, "0004": [69, 141, 388, 703, 705], "0009": [69, 139, 141, 388, 703, 704, 705], "6993": 69, "0002": [69, 70, 72, 140, 141, 387, 392, 703], "0053": [69, 70, 705], "chang": [69, 85, 86, 142, 144, 215, 388, 390, 393, 703, 705], "doe": [69, 71, 73, 139, 141, 348, 388, 392, 393, 394, 445, 486, 504, 532, 533, 534, 541, 567, 568, 569, 577, 621, 622, 623, 630, 656, 657, 658, 665, 701, 703, 705, 707, 878], "indu": 69, "7118": 69, "61": [69, 388, 389, 705], "617": 69, "displai": [69, 140, 144, 225, 226, 703], "There": [69, 70, 72, 73, 85, 139, 141, 144, 385, 387, 393, 703, 706], "reason": [69, 141, 392, 706, 859], "dispers": 69, "possibl": [69, 71, 128, 140, 141, 142, 144, 295, 347, 382, 385, 387, 389, 563, 603, 652, 689, 703, 704, 705, 757, 768, 783], "close": [69, 139, 140, 141, 278, 313, 315, 385, 802], "uniti": [69, 97, 212, 223, 235, 246, 257, 385, 757, 768, 783], "803334": 69, "029383": 69, "080556": 69, "176659": 69, "104124": 69, "466510": 69, "129601": 69, "094600": 69, "197135": 69, "913425": 69, "234012": 69, "264609": 69, "970844": 69, "179466": 69, "092021": 69, "152119": 69, "182299": 69, "543462": 69, "782811": 69, "158395": 69, "044042": 69, "605203": 69, "175549": 69, "260051": 69, "942997": 69, "135802": 69, "010064": 69, "864135": 69, "213336": 69, "315180": 69, "112368": 69, "053364": 69, "378365": 69, "109851": 69, "304442": 69, "237830": 69, "7": [69, 139, 140, 141, 142, 387, 388, 389, 394, 699, 702, 703, 704, 705], "seaborn": [69, 703], "sn": [69, 703], "matplotlib": [69, 703], "inlin": [69, 75, 703], "heatmap": [69, 703], "lt": [69, 141, 387], "axessubplot": 69, "gt": [69, 141, 387], "similarli": [69, 385, 389, 393, 394, 703, 705, 707, 752], "monthli": [69, 141], "scale": [69, 145, 151, 157, 163, 449, 707, 858], "show": [69, 70, 139, 141, 142, 143, 391, 703], "annual": [69, 141, 388, 703], "healthcar": 69, "ha": [69, 71, 73, 75, 88, 89, 113, 128, 130, 139, 140, 141, 144, 186, 231, 276, 295, 314, 324, 329, 347, 352, 365, 382, 385, 387, 388, 389, 392, 393, 445, 479, 540, 543, 552, 563, 575, 576, 579, 590, 603, 629, 632, 641, 652, 664, 667, 676, 689, 703, 705, 742, 774, 790, 803, 825, 837, 878], "largest": 69, "8": [69, 139, 140, 141, 387, 388, 389, 392, 394, 703, 705, 706, 757, 761, 768, 771, 787], "023360": 69, "030919": 69, "010643": 69, "012009": 69, "002783": 69, "024215": 69, "009726": 69, "017078": 69, "009952": 69, "050760": 69, "015197": 69, "033345": 69, "dtype": [69, 387, 388, 703], "float64": [69, 387, 388, 703], "more": [69, 71, 75, 85, 140, 141, 143, 263, 314, 342, 385, 388, 392, 504, 703, 704, 705, 706, 707, 761, 771, 787, 809, 813, 843, 847], "necessari": [69, 142, 388, 390, 481, 489, 497, 516, 524], "procedur": [69, 71, 144], "In": [69, 75, 140, 141, 142, 144, 224, 284, 335, 371, 385, 387, 388, 389, 392, 393, 481, 489, 495, 497, 506, 516, 524, 549, 587, 638, 673, 703, 705, 706, 707, 803, 809, 837, 843, 878], "here": [69, 140, 141, 142, 387, 388, 389, 394, 703, 704, 705], "four": [69, 144, 385, 514, 522], "attempt": [69, 71, 390], "9051": 69, "36": [69, 141, 387, 394, 703], "929": 69, "59": [69, 705], "0070": [69, 141], "5385": 69, "0040": [69, 70, 388, 703], "0100": [69, 388], "0005": [69, 141, 703, 704, 705], "0014": [69, 70, 139, 388, 703, 705, 706], "3381": 69, "7353": 69, "0023": [69, 72, 141, 387, 388, 703], "0033": [69, 388, 392, 703], "0084": [69, 141, 703], "0025": [69, 141, 703, 704, 706], "3085": 69, "0034": [69, 388, 703, 706], "0133": [69, 140], "8072": 69, "0056": [69, 70], "0112": [69, 388], "092658": 69, "224223": 69, "244844": 69, "691191": 69, "874285": 69, "881880": 69, "459326": 69, "082546": 69, "047256": 69, "147949": 69, "239957": 69, "297941": 69, "156849": 69, "623684": 69, "059730": 69, "760059": 69, "948556": 69, "467783": 69, "333619": 69, "135465": 69, "128861": 69, "713403": 69, "051098": 69, "413705": 69, "138597": 69, "112936": 69, "062397": 69, "755032": 69, "946214": 69, "200052": 69, "095270": 69, "100067": 69, "078098": 69, "046531": 69, "069780": 69, "467172": 69, "identif": [69, 75, 142], "have": [69, 70, 75, 87, 88, 89, 139, 140, 142, 259, 284, 335, 371, 385, 387, 388, 393, 445, 549, 552, 563, 587, 590, 603, 638, 641, 652, 673, 676, 689, 699, 703, 705, 707, 709, 755, 757, 768, 781, 783, 809, 843], "uniqu": [69, 130, 141, 703, 704, 760, 770, 786], "variat": [69, 141, 393], "some": [69, 71, 72, 75, 79, 80, 85, 86, 139, 140, 141, 142, 231, 387, 388, 390, 391, 701, 703, 704, 706, 707, 876], "cross": [69, 71, 75, 388, 395, 702, 706, 707, 738, 790, 803, 825, 837], "section": [69, 71, 73, 75, 206, 217, 228, 240, 251, 388, 395, 702, 703, 707, 738], "differ": [69, 71, 73, 75, 83, 85, 86, 92, 113, 140, 141, 204, 238, 249, 263, 276, 314, 324, 329, 342, 352, 365, 385, 387, 390, 391, 392, 394, 445, 454, 494, 495, 543, 552, 579, 590, 632, 641, 667, 676, 701, 703, 704, 707, 813, 847], "exposur": [69, 71], "correl": [69, 75, 140, 141, 144, 259, 348, 349, 350, 385, 390, 395, 529, 532, 533, 534, 565, 567, 568, 569, 619, 621, 622, 623, 654, 656, 657, 658, 703, 706, 755, 781, 790, 803, 825, 837], "rel": [69, 72, 140, 141, 263, 387, 388, 393], "might": [69, 70, 73, 140, 141, 388, 393, 703], "make": [69, 72, 85, 141, 144, 210, 221, 233, 244, 255, 388, 393, 394, 484, 492, 500, 510, 519, 527, 705, 761, 771, 787], "infer": [69, 72, 73, 75, 86, 92, 144, 204, 238, 249, 486, 541, 577, 630, 665, 702, 703, 706, 707], "unreli": [69, 75], "11": [69, 140, 141, 388, 389, 394, 563, 603, 652, 689, 703, 705, 707], "corr": [69, 140, 393, 532, 533, 534, 567, 568, 569, 621, 622, 623, 656, 657, 658, 703], "000000": [69, 140, 141, 387], "001914": 69, "733916": 69, "253675": 69, "638056": 69, "015628": 69, "002744": 69, "wa": [69, 75, 140, 141, 142, 284, 335, 371, 385, 388, 391, 540, 549, 576, 587, 629, 638, 664, 673, 703, 709, 724, 728, 732, 809, 843], "insignific": [69, 703], "drop": [69, 75, 87, 139, 141, 142, 173, 284, 335, 371, 385, 387, 388, 393, 394, 445, 451, 485, 493, 501, 502, 506, 511, 520, 528, 549, 587, 638, 673, 703, 705, 809, 843], "much": [69, 141, 388], "effect": [69, 71, 73, 75, 86, 87, 88, 89, 113, 139, 140, 141, 142, 186, 276, 329, 365, 385, 386, 387, 392, 394, 395, 403, 411, 429, 437, 445, 479, 486, 502, 503, 504, 506, 509, 512, 521, 522, 529, 533, 534, 536, 537, 539, 543, 549, 555, 556, 565, 568, 569, 571, 572, 574, 575, 579, 580, 585, 587, 593, 594, 595, 602, 619, 622, 623, 625, 626, 628, 632, 638, 644, 645, 654, 657, 658, 660, 661, 663, 667, 673, 679, 680, 688, 699, 701, 703, 742], "7915": 69, "406": 69, "0073": [69, 140, 142, 144, 703], "0017": [69, 141, 703], "3856": 69, "0105": [69, 140, 142, 703], "0091": 69, "0027": [69, 703, 705], "4361": 69, "0006": [69, 387, 388, 703, 704, 705], "0039": [69, 388, 703, 706], "0143": [69, 703], "7507": 69, "0055": [69, 70, 388, 389, 703], "0113": [69, 388, 389, 394], "case": [69, 72, 140, 141, 142, 144, 202, 206, 217, 228, 240, 251, 385, 389, 390, 393, 445, 481, 489, 497, 506, 516, 524, 701, 703, 704, 706, 707, 778, 803, 837, 878], "construct": [69, 75, 87, 101, 130, 135, 138, 141, 206, 210, 217, 221, 228, 233, 240, 244, 251, 255, 264, 284, 316, 335, 354, 371, 385, 387, 388, 449, 478, 480, 484, 486, 488, 492, 494, 496, 500, 502, 504, 505, 510, 513, 515, 519, 521, 523, 527, 531, 549, 566, 587, 620, 638, 655, 673, 703, 707, 741, 745, 751, 752, 756, 759, 761, 763, 767, 771, 777, 778, 782, 785, 787, 791, 809, 826, 843], "misspecifi": 69, "littl": [69, 140], "impact": 69, "13": [69, 139, 140, 141, 144, 387, 388, 394, 702, 703, 705], "004": 69, "0045": [69, 72, 140, 141, 142], "0079": 69, "5607": 69, "5750": 69, "0200": 69, "0111": 69, "0076": [69, 141], "4636": 69, "1433": [69, 704], "0038": [69, 70, 388, 704], "0259": 69, "0110": 69, "0946": 69, "0362": [69, 388], "0007": [69, 70, 388, 703, 705], "0214": [69, 703], "0086": [69, 140, 703], "9315": [69, 141], "0058": [69, 387], "0114": [69, 703], "base": [69, 72, 73, 75, 80, 92, 110, 140, 141, 215, 272, 300, 325, 362, 384, 388, 390, 393, 486, 532, 533, 534, 567, 568, 569, 605, 621, 622, 623, 656, 657, 658, 691, 702, 709, 724, 732, 752, 755, 757, 763, 778, 781, 783], "g": [69, 73, 75, 128, 145, 183, 195, 203, 214, 224, 225, 231, 237, 248, 278, 295, 347, 382, 385, 392, 393, 394, 395, 403, 411, 429, 437, 563, 603, 652, 689, 703, 704, 707, 709, 738, 746, 757, 768, 783, 802, 858], "newei": [69, 71, 72, 144, 163, 169, 195, 395, 397, 405, 411, 413, 419, 421, 431, 439, 495, 504, 514, 522, 702, 703, 719, 732, 746], "west": [69, 71, 72, 144, 163, 169, 195, 395, 397, 405, 411, 413, 419, 421, 431, 439, 495, 504, 514, 522, 702, 703, 719, 732, 746], "reduc": [69, 75, 247, 388, 481, 489, 497, 502, 506, 513, 516, 524, 705], "serial": 69, "firmli": 69, "14": [69, 70, 140, 141, 144, 388, 394, 703, 706], "25": [69, 140, 141, 142, 387, 388, 389, 394, 703], "841": 69, "3094": 69, "0106": [69, 703, 704], "0031": [69, 140, 703], "9499": 69, "0032": [69, 703], "0152": 69, "8371": 69, "kernelcovari": [69, 70, 72, 92, 144, 189, 204, 238, 249, 755, 781], "final": [69, 73, 140, 262, 263, 297, 391, 393, 703], "similar": [69, 71, 140, 142, 144, 385, 387, 388, 389, 390, 392, 394, 495, 504, 514, 522, 705, 813, 847], "singl": [69, 75, 86, 128, 141, 142, 295, 347, 382, 387, 389, 445, 486, 563, 603, 652, 689, 704, 705, 757, 768, 783], "practic": [69, 139, 385, 393, 703, 707, 757, 768, 783], "least": [69, 75, 86, 139, 140, 141, 144, 202, 393, 504, 706, 752, 759], "twice": [69, 141], "onc": [69, 88, 89, 92, 140, 385, 388], "get": [69, 130, 445, 453, 466, 752, 756, 763, 767, 778, 782, 877], "form": [69, 71, 73, 87, 101, 110, 128, 139, 140, 141, 206, 217, 228, 240, 251, 264, 272, 295, 316, 325, 347, 354, 362, 382, 385, 393, 394, 403, 445, 502, 531, 563, 566, 603, 620, 652, 655, 689, 703, 705, 707, 738, 746, 752, 753, 763, 764, 778, 779, 791, 809, 826, 843], "progress": 69, "everi": 69, "15": [69, 140, 141, 388, 389, 394, 703, 705], "linearfactormodelgmm": [69, 71, 72, 86, 701], "47": [69, 140, 141, 142, 387, 389], "75791582822636": 69, "28": [69, 140, 141, 387, 389, 703], "102587296433015": 69, "20": [69, 70, 140, 141, 144, 387, 389, 391, 394, 702, 703, 705], "26": [69, 140, 141, 142, 388, 394, 703, 705], "361386479569045": 69, "30": [69, 141, 144, 387, 394, 703, 705], "019667723255562": 69, "40": [69, 141, 387, 388, 389, 702], "22": [69, 140, 141, 142, 703, 705, 707], "3253432529752": 69, "warn": [69, 75, 140, 705], "desir": [69, 140, 387, 389, 394], "necessarili": [69, 71, 140], "achiev": [69, 140, 388], "due": [69, 140, 388, 393, 703, 705], "precis": [69, 140, 300, 384, 387, 445, 605, 691, 703, 707], "loss": [69, 73, 140], "current": [69, 83, 140, 141, 703], "325343": 69, "41": [69, 394], "evalu": [69, 140, 142, 210, 221, 233, 244, 255, 484, 492, 500, 510, 519, 527, 761, 771, 787], "2528": [69, 387], "gradient": [69, 140], "74": [69, 140, 394, 705], "519350285676417": 69, "303730233779017": 69, "226426648306727": 69, "1930857690747": 69, "termin": 69, "successfulli": 69, "066871": 69, "1904": 69, "56": [69, 72, 139, 140, 141, 142], "7904": [69, 72], "067": [69, 388], "0012": [69, 70, 72, 388, 703], "55": [69, 70, 139, 141, 387, 388, 389, 703, 704, 705], "02": [69, 139, 141, 705], "0067": [69, 141, 388], "4335": 69, "0037": [69, 140, 141, 388, 392, 703], "0097": [69, 141, 703], "0135": 69, "8706": [69, 388], "0090": [69, 141, 703, 705], "0180": [69, 141], "5139": 69, "0066": [69, 388, 703], "0123": [69, 70, 392], "well": [69, 70, 71, 72, 75, 141, 143, 324, 352, 385, 388, 391, 701, 703], "impli": 69, "abl": 69, "16": [69, 140, 141, 388, 389, 394, 703], "7901": 69, "833": [69, 140], "0316": [69, 706], "0074": 69, "1450": 69, "0046": [69, 388], "0102": [69, 140, 142, 387, 394], "0137": [69, 140, 142, 388], "0030": [69, 140, 141, 142, 703], "5918": 69, "0078": [69, 389], "0195": 69, "0013": [69, 703, 705], "0849": [69, 703], "0103": [69, 70, 704], "approach": [69, 71, 73, 140, 702], "sub": 69, "repeat": [69, 75, 142, 704], "fix": [69, 75, 86, 87, 139, 392, 394, 395, 403, 411, 429, 437, 502, 504, 699, 701, 741, 745, 751], "keyword": [69, 70, 75, 140, 141, 189, 213, 217, 224, 225, 228, 388, 703, 704, 763, 768], "28032168977908": 69, "222217345491394": 69, "09415705495652": 69, "091266623633658": 69, "089908": 69, "37": [69, 140, 141, 142, 703], "2732": [69, 703], "80": [69, 141, 387], "088798287342204": 69, "088771422699594": 69, "088753": 69, "2210": 69, "65": [69, 140, 389], "088622400025223": 69, "088622": 69, "1235": 69, "08862232326855": 69, "998": [69, 703], "29": [69, 75, 141, 389, 394, 702, 703], "089": 69, "4231": 69, "0096": 69, "8726": 69, "5017": 69, "cue": [69, 86, 140, 224, 701], "jointli": [69, 263, 324, 352, 565, 575, 705, 706, 707], "rather": [69, 140, 393, 705], "than": [69, 73, 75, 87, 140, 141, 144, 314, 342, 392, 393, 504, 704, 705], "same": [69, 71, 72, 73, 110, 113, 128, 135, 140, 141, 144, 210, 221, 233, 236, 244, 255, 263, 272, 276, 284, 295, 314, 325, 329, 335, 347, 362, 365, 371, 382, 385, 387, 388, 393, 455, 504, 543, 549, 552, 563, 579, 587, 590, 603, 632, 638, 641, 652, 667, 673, 676, 689, 703, 704, 705, 707, 757, 759, 768, 783, 785, 809, 843], "18": [69, 70, 72, 140, 141, 388, 389, 394, 703, 705, 706], "524477849402306": 69, "386055312539717": 69, "339808379226664": 69, "30831247084623": 69, "077574": 69, "38": [69, 141, 388, 389, 703], "2664": 69, "78": [69, 387, 394, 703], "7903": 69, "719": 69, "19": [69, 140, 141, 350, 387, 392, 703, 705], "4157": 69, "0136": [69, 70, 703], "8881": 69, "0181": [69, 141], "4984": 69, "multipl": [70, 141, 144, 300, 384, 387, 392, 605, 691, 703, 704, 706, 707], "depend": [70, 75, 87, 88, 92, 113, 139, 140, 141, 144, 163, 189, 202, 204, 206, 213, 215, 217, 224, 226, 228, 231, 236, 238, 240, 247, 249, 251, 276, 329, 365, 385, 387, 388, 389, 392, 393, 395, 403, 411, 419, 429, 437, 478, 486, 494, 502, 513, 521, 532, 533, 534, 543, 549, 554, 555, 556, 567, 568, 569, 579, 587, 592, 594, 595, 621, 622, 623, 632, 638, 643, 644, 645, 656, 657, 658, 667, 673, 678, 679, 680, 703, 704, 705, 706, 707, 738, 746, 752, 759, 763, 774, 778, 785, 817, 851], "independ": [70, 392, 521], "exist": [70, 703], "mani": [70, 75, 85, 140, 141, 389, 392, 502, 699, 707], "express": [70, 144, 206, 217, 228, 240, 251, 350, 385, 387, 393, 703, 704, 707, 752, 763, 778], "port1": 70, "port2": 70, "port3": 70, "port4": 70, "portn": 70, "factor1": 70, "factork": 70, "hand": [70, 385, 387, 393, 478, 486, 494, 502, 513, 521, 703], "side": [70, 385, 478, 486, 494, 502, 513, 521, 703], "from_formula": [70, 75, 128, 141, 142, 295, 347, 382, 389, 392, 704, 705], "1": [70, 73, 86, 87, 95, 97, 128, 130, 134, 138, 139, 140, 141, 142, 144, 145, 151, 157, 163, 169, 170, 171, 172, 183, 185, 186, 188, 189, 195, 198, 201, 202, 203, 206, 210, 211, 212, 213, 214, 217, 221, 222, 223, 224, 225, 228, 231, 233, 234, 235, 236, 237, 240, 244, 245, 246, 247, 248, 251, 255, 256, 257, 278, 295, 300, 342, 347, 348, 350, 382, 384, 385, 387, 388, 389, 392, 393, 394, 395, 403, 411, 419, 429, 437, 445, 479, 481, 484, 486, 489, 492, 495, 497, 500, 504, 506, 510, 514, 516, 519, 522, 524, 527, 541, 563, 577, 603, 605, 630, 652, 665, 689, 691, 692, 698, 702, 703, 704, 705, 707, 709, 713, 716, 719, 724, 728, 732, 738, 741, 746, 752, 755, 757, 761, 763, 768, 771, 778, 781, 783, 785, 787, 790, 802, 803, 813, 817, 825, 837, 847, 851, 856, 857, 858], "combin": [70, 87, 388], "adequ": 70, "7229": 70, "9450": 70, "0190": [70, 705], "23": [70, 140, 141, 144, 702, 703, 706], "0044": [70, 141], "6929": 70, "0071": [70, 140, 387], "0075": 70, "4051": 70, "0024": [70, 141, 387, 388], "0088": [70, 705], "0081": [70, 140, 142, 703], "0021": [70, 72, 703, 705], "7457": 70, "omit": [70, 141, 142, 393, 752, 761, 771, 787, 809, 843], "simplifi": [70, 75, 85, 87, 130, 134, 140, 388, 393, 707, 759, 785], "experi": [70, 85, 128, 141, 295, 347, 382, 388, 392, 703], "altern": [70, 75, 92, 142, 204, 238, 249, 259, 385, 388, 391, 394, 445, 705, 707, 752, 789, 817, 824, 851], "appear": [70, 140, 259, 703, 704, 705], "inadequ": 70, "even": [70, 87, 139, 388, 394, 703], "port": 70, "v": [70, 128, 140, 141, 142, 145, 151, 157, 163, 295, 314, 342, 347, 350, 352, 382, 385, 563, 603, 652, 689, 704, 876, 878], "format": [70, 78, 81, 82, 128, 130, 134, 295, 347, 382, 388, 391, 394, 445, 563, 603, 652, 689, 703, 757, 768, 783], "7723": 70, "86": 70, "371": 70, "5940": 70, "5525": 70, "0042": [70, 141, 388, 703], "0918": [70, 388, 703], "0022": [70, 72, 141, 388, 705], "0063": [70, 703, 704, 705], "0050": [70, 704], "1337": 70, "2569": 70, "0036": [70, 141], "7058": 70, "0109": [70, 703], "To": 70, "verifi": [70, 75, 703], "interfac": [70, 75, 128, 142, 295, 347, 382, 389, 549, 587, 638, 673, 703, 705, 757, 759, 768, 783, 785], "ident": [70, 73, 92, 97, 139, 140, 141, 212, 223, 235, 246, 257, 349, 385, 388, 389, 392, 393, 479, 495, 703, 704, 705, 707, 755, 781], "359": 70, "commonli": [71, 391], "fama": [71, 75, 86, 419, 486, 529, 701], "explain": [71, 141, 144, 169, 349, 350, 388], "hypothesi": [71, 128, 143, 295, 347, 382, 391, 563, 603, 652, 689, 707, 790, 803, 825, 837, 859, 861, 864, 866], "associ": [71, 703], "simpl": [71, 73, 128, 140, 142, 295, 347, 382, 388, 394, 563, 603, 652, 689, 703, 704, 705, 785], "seemingli": [71, 73, 75, 86, 701, 703, 706, 752, 778, 824], "unrel": [71, 73, 75, 86, 701, 703, 706, 752, 778, 824], "regress": [71, 72, 73, 75, 86, 87, 141, 142, 143, 247, 258, 259, 260, 262, 273, 312, 324, 326, 342, 348, 349, 350, 352, 385, 389, 392, 393, 394, 486, 575, 701, 703, 709, 724, 728, 732, 752, 773, 778, 785, 813, 817, 824, 847, 851], "sur": [71, 72, 73, 75, 86, 701, 703, 704, 705, 706], "equal": [71, 73, 128, 140, 295, 347, 382, 385, 563, 603, 652, 689], "premium": [71, 73], "_": [71, 73, 130, 163, 202, 213, 224, 236, 348, 349, 350, 385, 393, 395, 403, 411, 429, 437, 478, 541, 577, 630, 665, 703, 707, 709, 752, 763, 778, 790, 813, 817, 825, 847, 851], "sim": [71, 73, 263, 278, 313, 314, 315, 324, 342, 348, 350, 385, 707, 802], "chi": [71, 128, 140, 141, 263, 278, 295, 313, 314, 324, 347, 348, 350, 382, 541, 563, 577, 603, 630, 652, 665, 689, 790, 802, 803, 825, 837], "2_p": 71, "demean": [71, 73, 385, 388, 394, 455, 458, 534, 569, 623, 654, 658, 684, 707, 774, 813, 847], "regressor": [71, 73, 75, 87, 92, 135, 139, 140, 141, 142, 144, 145, 151, 157, 163, 183, 185, 186, 188, 189, 195, 198, 201, 202, 203, 210, 213, 214, 221, 224, 225, 231, 233, 236, 237, 244, 247, 248, 255, 259, 260, 314, 342, 349, 385, 388, 389, 392, 393, 403, 484, 492, 500, 504, 510, 519, 527, 529, 540, 541, 565, 576, 577, 619, 629, 630, 654, 664, 665, 704, 705, 707, 709, 713, 716, 719, 724, 728, 732, 740, 741, 742, 744, 745, 750, 751, 752, 755, 759, 761, 771, 777, 778, 781, 785, 787, 790, 803, 809, 825, 837, 843], "2_": [71, 263, 313, 314, 324, 348, 350, 541, 577, 630, 665, 790, 803, 825, 837], "k": [71, 72, 73, 75, 140, 141, 144, 145, 151, 157, 163, 195, 202, 203, 236, 237, 240, 248, 251, 262, 279, 312, 330, 353, 366, 393, 395, 411, 429, 437, 540, 541, 575, 576, 577, 629, 630, 664, 665, 701, 702, 703, 707, 752, 763, 778, 790, 803, 825, 837, 856, 857, 872, 876, 877, 878], "over": [71, 75, 141, 385, 392, 707], "identifi": [71, 141, 385, 388, 389, 392, 455, 481, 489, 497, 502, 506, 513, 516, 524, 703, 707], "either": [71, 73, 92, 139, 140, 145, 210, 221, 233, 244, 255, 284, 335, 371, 385, 445, 447, 449, 458, 484, 486, 492, 500, 510, 519, 527, 703, 706, 707, 752, 757, 761, 763, 768, 771, 778, 783, 787, 809, 843, 878], "three": [71, 72, 73, 75, 86, 139, 140, 385, 387, 393, 445, 479, 495, 504, 701, 703, 706, 752], "gener": [71, 72, 73, 86, 140, 141, 144, 206, 213, 217, 228, 240, 251, 387, 389, 392, 393, 394, 451, 502, 509, 549, 587, 638, 654, 673, 684, 699, 701, 702, 705, 706, 763], "triangular": [71, 144, 163], "mathemat": [71, 139, 143, 169, 391, 392, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680], "detail": [71, 139, 141, 143, 189, 215, 226, 391, 790, 803, 825, 837], "concis": [71, 143, 391], "explan": [71, 143, 391, 859], "introduct": [71, 141, 143, 388, 391], "modul": [71, 86, 143, 391, 393, 703, 706], "refer": [71, 86, 143, 169, 385, 391, 450, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680, 706, 790, 803, 825, 837], "purpos": [72, 701], "strategi": [72, 388], "version": [72, 92, 97, 110, 140, 141, 212, 223, 235, 246, 247, 257, 272, 314, 325, 362, 385, 394, 703], "prefer": [72, 75, 140, 706], "eight": 72, "basic": [72, 143, 391], "usag": [72, 143, 391], "si": 72, "s1": 72, "s5": 72, "v1": 72, "v5": 72, "transform": [72, 385, 393, 394, 470, 481, 489, 497, 506, 516, 524, 552, 590, 641, 676, 703, 773, 774, 777], "prior": [72, 393], "copi": [72, 445, 785], "loc": [72, 133, 141, 175, 450, 703], "8879": 72, "109": [72, 703, 705], "sun": 72, "mai": [72, 75, 87, 139, 140, 385, 393, 481, 489, 497, 502, 506, 513, 516, 524, 707, 752, 763], "21": [72, 73, 140, 141, 142, 388, 389, 394, 703, 705, 706, 707], "2017": [72, 144, 392, 394, 706], "0060": [72, 141, 703], "7381": 72, "0029": [72, 141, 703, 705], "0092": 72, "0001": [72, 140, 141, 142, 215, 388, 394, 703, 704, 705], "0011": [72, 388, 703, 704, 705], "1281": 72, "8980": 72, "0068": [72, 388, 703, 704], "For": [73, 85, 130, 385, 387, 388, 393, 707], "share": [73, 85, 709], "alpha_": [73, 388, 393], "beta_": [73, 385, 703, 707], "sandwich": 73, "sg": 73, "defin": [73, 202, 213, 231, 236, 278, 324, 348, 352, 385, 393, 394, 536, 537, 540, 571, 572, 575, 576, 625, 626, 629, 660, 661, 664, 707, 790, 802, 803, 813, 817, 825, 837, 847, 851, 858], "i_": [73, 703, 707], "sigma_": [73, 393, 703], "sum_": [73, 145, 151, 157, 163, 183, 186, 195, 224, 385, 393, 395, 411, 429, 486, 707, 738, 746, 790, 803, 825, 837], "stack": [73, 395, 403, 411, 419, 429, 437, 703, 707, 752, 763, 778], "vector": [73, 144, 231, 385, 703, 707, 738, 746, 752, 758, 763, 769, 774, 778, 784], "g_": [73, 195, 385, 393, 707], "epsilon": [73, 145, 151, 157, 163, 186, 231, 278, 324, 342, 348, 350, 352, 385, 393, 429, 437, 478, 703, 705, 707, 752, 763, 778, 813, 817, 847, 851], "align": [73, 75, 210, 221, 233, 244, 255, 385, 393, 705, 707], "gamma": [73, 87, 139, 144, 145, 151, 163, 349, 385, 393, 746], "bw": [73, 163, 170, 171, 172, 385, 393, 395, 411], "frac": [73, 352, 385, 393, 540, 575, 576, 629, 664, 705, 707, 813, 817, 847, 851, 858], "just": [73, 141, 142, 388, 393, 705], "after": [73, 88, 89, 143, 385, 389, 390, 391, 394], "chi_": [73, 342, 385, 707], "row": [73, 128, 139, 141, 173, 177, 259, 263, 295, 347, 382, 385, 387, 563, 603, 652, 689, 705], "column": [73, 75, 79, 83, 130, 134, 138, 139, 140, 141, 173, 174, 177, 259, 263, 284, 335, 371, 385, 387, 388, 395, 403, 411, 429, 437, 445, 451, 470, 549, 587, 638, 673, 699, 703, 704, 705, 707, 713, 716, 719, 757, 761, 768, 771, 783, 787, 809, 843], "ldot": [73, 348, 350, 385, 703, 707, 738, 746, 752, 763, 778], "cannot": [73, 141, 349, 350, 388, 389, 392, 707], "its": [73, 141, 388, 707], "solut": [73, 75, 139, 388, 707], "multi": [73, 445, 455, 456, 481, 489, 497, 506, 516, 524], "throw": 73, "awai": 73, "remov": [73, 75, 387, 388, 394, 470, 762, 772, 788, 870, 875, 876], "virtual": [73, 388, 703, 704], "longer": [73, 388, 703], "c_": 73, "eta_": [73, 385], "compens": 73, "1s": [73, 385, 707], "conduct": [73, 143, 391], "treat": [73, 87, 130, 141, 210, 221, 233, 244, 255, 284, 324, 335, 350, 352, 371, 385, 387, 445, 479, 484, 492, 495, 500, 502, 504, 506, 510, 514, 519, 522, 527, 761, 771, 787, 809, 843], "problem": [73, 140, 385, 705, 707], "were": [73, 75, 263, 387, 388, 707], "third": [73, 703], "foc": 73, "ccc": 73, "block": [73, 141, 142, 206, 217, 228, 240, 251, 263, 385, 703, 707, 709, 724, 728, 732, 742, 752, 763, 778], "0_": 73, "times1": 73, "u": [73, 141, 385], "term": [73, 98, 99, 110, 272, 325, 362, 385, 388, 393, 707, 813, 847], "becom": 73, "previou": [73, 141, 385, 388, 392, 703], "tild": [73, 348, 385, 393, 707, 709, 724, 732, 774], "lambda_": 73, "piec": 73, "structur": [73, 75, 144, 206, 210, 215, 217, 221, 226, 228, 233, 240, 244, 251, 255, 387, 388, 393, 470, 481, 489, 497, 506, 516, 524, 703, 705, 706, 752, 761, 763, 771, 778, 787, 809, 843], "element": [73, 79, 128, 144, 145, 295, 347, 382, 563, 603, 652, 689, 699, 703, 707, 709, 724, 732], "occur": [73, 388, 707], "bottom": 73, "solv": [73, 385, 707], "sometim": 73, "doubt": 73, "about": [73, 141, 703, 705], "vdot": [73, 707, 752, 763, 778], "write": [73, 385, 707], "code": [73, 75, 85, 141, 385, 387, 388, 502, 506, 707], "bryzgalova": [73, 702], "cochran": [73, 702], "jagannathanet": [73, 702], "switch": 75, "patsi": 75, "constraint": [75, 128, 295, 347, 382, 389, 563, 603, 652, 689, 704, 705, 706, 709, 713, 716, 719, 724, 728, 732, 752, 753, 762, 763, 764, 772, 773, 774, 776, 777, 778, 779, 788], "translat": [75, 774], "string": [75, 78, 81, 82, 83, 84, 128, 144, 173, 295, 347, 382, 392, 445, 563, 603, 652, 689, 703, 704, 752, 757, 763, 768, 778, 783], "list": [75, 78, 79, 80, 87, 92, 128, 135, 140, 141, 142, 204, 206, 217, 228, 238, 240, 249, 251, 263, 295, 300, 324, 347, 352, 382, 384, 388, 445, 452, 465, 469, 563, 565, 580, 603, 605, 652, 689, 691, 699, 709, 713, 716, 719, 724, 728, 732, 740, 741, 744, 745, 750, 751, 760, 770, 786, 798, 873, 874, 879], "gh439": 75, "gh440": 75, "bug": 75, "escap": 75, "y": [75, 79, 80, 87, 139, 142, 145, 151, 157, 163, 189, 202, 203, 213, 214, 225, 231, 236, 237, 248, 385, 388, 389, 393, 394, 395, 403, 411, 419, 429, 437, 478, 479, 481, 487, 489, 495, 497, 504, 506, 514, 516, 522, 524, 532, 534, 567, 569, 621, 623, 656, 658, 699, 703, 707, 752, 763, 774, 778], "x": [75, 87, 139, 141, 142, 145, 151, 157, 163, 169, 173, 185, 188, 189, 198, 201, 202, 203, 213, 214, 225, 231, 236, 237, 248, 385, 387, 388, 389, 393, 395, 403, 411, 419, 429, 437, 445, 478, 479, 487, 495, 504, 514, 522, 532, 534, 567, 569, 621, 623, 656, 658, 699, 703, 705, 707, 709, 713, 716, 719, 724, 728, 732, 740, 741, 744, 745, 750, 751, 752, 763, 774, 777, 778], "panel": [75, 86, 140, 142, 390, 392, 393, 394, 702], "gh435": 75, "affect": [75, 144, 348, 388], "creat": [75, 79, 80, 92, 140, 141, 202, 205, 213, 216, 224, 227, 236, 239, 247, 250, 388, 481, 489, 497, 506, 516, 524, 549, 587, 638, 673, 871], "miss": [75, 86, 141, 202, 208, 213, 219, 224, 230, 236, 242, 247, 253, 284, 335, 371, 387, 445, 457, 478, 483, 485, 486, 491, 493, 494, 499, 501, 502, 508, 511, 513, 518, 520, 521, 526, 528, 549, 587, 638, 673, 699, 701, 705, 809, 843], "gh438": 75, "document": [75, 85, 86, 92, 142, 204, 238, 249, 388, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680], "gh434": 75, "iv2sl": [75, 86, 87, 128, 141, 142, 144, 213, 224, 236, 247, 295, 312, 347, 382, 701, 705], "relat": [75, 140, 141, 144, 385, 393, 470], "predict": [75, 141, 532, 533, 534, 567, 568, 569, 621, 622, 623, 656, 657, 658, 705], "would": [75, 140, 141, 142, 263, 385, 388, 389, 707, 752, 778], "produc": [75, 87, 135, 140, 141, 142, 173, 215, 236, 240, 251, 350, 387, 388, 393, 495, 504, 514, 522, 703, 704, 705, 707], "nan": [75, 387, 539, 574, 628, 663, 859, 862], "exog": [75, 87, 139, 140, 141, 142, 144, 185, 188, 198, 201, 202, 206, 210, 213, 217, 221, 224, 228, 233, 236, 240, 244, 247, 251, 255, 258, 263, 284, 314, 335, 342, 352, 371, 387, 388, 392, 478, 484, 486, 492, 494, 500, 502, 510, 513, 519, 521, 527, 540, 549, 563, 576, 587, 603, 629, 638, 652, 664, 673, 689, 703, 704, 705, 706, 741, 751, 752, 759, 761, 763, 771, 778, 785, 787, 809, 843], "endog": [75, 141, 142, 144, 185, 188, 198, 201, 202, 206, 210, 213, 217, 221, 224, 228, 233, 236, 240, 244, 247, 251, 255, 258, 278, 284, 313, 314, 315, 335, 348, 352, 371, 705, 741, 751, 752, 759, 761, 763, 771, 787, 802, 809, 843], "had": 75, "indexwarn": [75, 141], "now": [75, 139, 142, 391], "shown": [75, 703], "ad": [75, 78, 140, 388, 393, 703, 870, 871, 873, 874, 878, 879], "stacklevel": 75, "improv": [75, 85, 142, 701, 703, 707, 752, 778], "accuraci": [75, 707, 752, 778], "locat": [75, 86, 140, 142, 202, 208, 209, 213, 219, 220, 224, 230, 232, 236, 242, 243, 247, 253, 254, 385, 445, 457, 478, 483, 486, 491, 494, 499, 502, 508, 513, 518, 521, 526, 703], "clarifi": 75, "f": [75, 98, 110, 139, 140, 141, 142, 144, 259, 262, 272, 300, 303, 312, 315, 325, 353, 362, 385, 387, 388, 389, 392, 394, 540, 575, 576, 605, 608, 629, 664, 702, 703, 704, 705, 707, 864, 878], "messag": 75, "parser": 75, "accovari": 75, "incorrectli": 75, "overwritten": 75, "panelresult": [75, 479, 487, 495, 514], "corr_squared_between": [75, 529, 565, 619, 654], "corr_squared_overal": [75, 529, 565, 619, 654], "corr_squared_within": [75, 529, 565, 619, 654], "breusch_pagan": 75, "likelihood_ratio": 75, "diagon": [75, 707, 709, 724, 728, 732, 742, 752, 763, 778, 803, 837], "cluster": [75, 92, 140, 144, 145, 149, 189, 199, 204, 213, 215, 224, 238, 249, 385, 403, 404, 479, 485, 493, 495, 501, 504, 506, 511, 514, 520, 522, 528, 692, 699, 702, 707, 709, 755, 781, 856, 858], "rank_check": 75, "rank": [75, 385, 481, 489, 497, 502, 506, 513, 516, 524], "check": [75, 140, 173, 203, 214, 225, 237, 248, 481, 489, 497, 502, 506, 513, 516, 524, 755, 766, 781], "skip": [75, 481, 489, 497, 502, 506, 513, 516, 524], "defici": 75, "caution": [75, 141, 703, 707], "numpi": [75, 87, 128, 130, 134, 139, 141, 142, 144, 173, 206, 217, 228, 240, 251, 295, 347, 382, 394, 445, 449, 467, 468, 563, 603, 652, 689, 699, 703, 704, 705, 757, 768, 783], "linalg": [75, 87, 92, 139], "lstsq": 75, "better": [75, 140, 141], "svd": 75, "matrix_rank": 75, "lapack_driv": 75, "qr": 75, "calcul": [75, 399, 407, 415, 425, 433, 441, 706], "minor": 75, "releas": [75, 85, 86, 391], "wheel": 75, "build": [75, 140], "issu": [75, 110, 272, 273, 325, 326, 362, 388], "python": [75, 85], "perform": [75, 144, 203, 214, 225, 237, 248, 385, 392, 481, 486, 489, 497, 502, 506, 513, 516, 524, 701], "oper": 75, "pyhdf": [75, 92], "absorbingl": [75, 86, 98, 139], "absorb": [75, 86, 143, 502, 506], "categor": [75, 87, 130, 131, 134, 139, 173, 388, 389, 445, 479, 495, 502, 504, 514, 522, 563, 603, 652, 689], "unweight": [75, 139], "gh157": 75, "system": [75, 86, 702, 703, 704], "clusteredcovari": [75, 92, 144, 189, 204, 238, 249, 755, 781], "gh241": 75, "kernel_optimal_bandwidth": 75, "incorrect": 75, "tune": 75, "gh242": 75, "variou": [75, 142, 388], "gh239": 75, "gh240": 75, "mypi": 75, "gh232": 75, "gh234": 75, "gh235": 75, "gh238": 75, "public": [75, 247], "face": [75, 141], "gh228": 75, "gh229": 75, "famamacbethresult": [75, 487], "all_param": [75, 419, 529], "nparam": [75, 422, 530], "period": [75, 387, 388, 389, 392, 393, 394, 419, 422, 445, 451, 486, 529, 530, 699, 703, 707], "gh230": 75, "blacken": 75, "mcelroi": [75, 703, 704, 705, 817, 851], "berndt": [75, 703, 704, 705, 817, 851], "gh215": 75, "nep": 75, "gh222": 75, "instal": [75, 92], "gh217": 75, "cach": [75, 92], "inherit": [75, 140, 385, 541, 577, 630, 665], "gh211": 75, "panda": [75, 87, 130, 134, 139, 140, 141, 144, 173, 387, 388, 389, 391, 445, 448, 463, 470, 563, 603, 652, 689, 703, 704, 705, 757, 768, 773, 783], "handl": [75, 393, 445, 504], "veri": [75, 140, 141, 394], "dimension": [75, 86, 87, 139, 386, 445, 707, 858], "dummi": [75, 87, 130, 138, 139, 141, 173, 385, 392, 393, 394, 445, 449, 504], "been": [75, 88, 89, 140, 259, 324, 352, 387, 392, 755, 781], "000": [75, 387, 389, 394, 703], "categori": [75, 130, 138, 141, 173, 385, 387, 445, 502, 506, 699, 752], "per": [75, 141, 388, 529, 538, 560, 565, 573, 585, 599, 619, 627, 649, 654, 662, 685], "entiti": [75, 387, 390, 392, 393, 394, 395, 403, 411, 419, 429, 437, 445, 447, 449, 451, 453, 458, 460, 478, 479, 481, 486, 489, 494, 495, 497, 502, 503, 504, 506, 513, 514, 516, 521, 522, 524, 529, 532, 534, 538, 556, 565, 567, 569, 573, 595, 619, 621, 623, 627, 645, 654, 656, 658, 662, 680, 699], "id": [75, 140, 141, 388, 394, 395, 403, 411, 429, 437, 453, 466, 479, 495, 703, 706, 709], "drop_absorb": [75, 87, 502, 506], "panelol": [75, 86, 387, 388, 390, 391, 392, 563, 603, 652, 689, 701], "automat": [75, 141, 142, 163, 390, 487, 504, 702, 703], "gh206": 75, "cython": 75, "node": 75, "select": [75, 144, 163, 284, 335, 371, 549, 587, 638, 673, 702, 705, 746, 755, 781, 809, 843], "singleton": [75, 502, 506], "precondit": 75, "use_lsmr": [75, 504], "run": [75, 140, 141, 231, 388], "singelton": 75, "never": [75, 385, 389], "core": [75, 388, 856, 857], "graph": 75, "slope": [75, 87], "exclud": [75, 110, 272, 325, 362, 385, 388, 540, 541, 576, 577, 629, 630, 664, 665, 703, 707], "gh191": 75, "lsmr": [75, 87, 92, 139], "through": [75, 113, 140, 142, 143, 224, 276, 329, 365, 393, 543, 579, 632, 667, 703], "spars": [75, 87, 92, 130, 134, 139, 504], "extend": [75, 141, 385, 707], "exogen": [75, 79, 80, 87, 89, 141, 142, 144, 145, 151, 157, 163, 183, 186, 195, 202, 210, 213, 215, 221, 224, 233, 236, 244, 247, 255, 259, 263, 278, 284, 312, 314, 324, 335, 348, 349, 350, 352, 371, 385, 387, 395, 403, 411, 419, 429, 437, 478, 481, 484, 486, 489, 492, 494, 497, 500, 502, 506, 510, 513, 516, 519, 521, 524, 527, 534, 549, 556, 569, 587, 595, 623, 638, 645, 658, 673, 680, 703, 705, 706, 707, 709, 724, 728, 732, 742, 752, 759, 761, 763, 766, 771, 778, 785, 787, 809, 843], "being": [75, 141, 263, 385, 445], "correctli": [75, 140, 385], "label": [75, 173, 174, 181, 465, 469, 703, 705, 752, 757, 761, 763, 768, 771, 778, 783, 787, 789, 798, 809, 824, 833, 843], "ol": [75, 86, 141, 144, 247, 324, 349, 350, 352, 353, 385, 386, 388, 392, 701, 704, 705, 707, 709, 724, 728, 732, 755, 778, 781], "gh185": 75, "wald_test": 75, "renam": 75, "test_linear_constraint": 75, "memori": [75, 449, 504, 706], "avoid": [75, 87, 224, 449, 705, 707], "entity_effect": [75, 387, 388, 392, 394, 502, 504, 563, 603, 652, 689], "time_effect": [75, 388, 502], "By": [75, 140, 144, 388, 389, 703, 752, 763, 778], "algorithm": [75, 504], "whenev": [75, 236, 552, 590, 641, 676], "gib": [75, 504], "gh182": 75, "comparison": [75, 140, 141, 142, 300, 384, 388, 391, 605, 691, 703], "compar": [75, 141, 300, 605, 703, 705], "instead": [75, 97, 141, 144, 212, 223, 235, 246, 257, 388, 706], "gh178": 75, "did": 75, "famamacbeth": [75, 86, 391, 701], "gh176": 75, "fail": 75, "gh173": 75, "extern": 75, "packag": [75, 85, 144, 387, 390, 391, 394, 702], "manag": 75, "custom": [75, 144], "less": [75, 140, 144, 388], "gh172": 75, "gallant": [75, 163, 169, 195, 395, 411, 703, 719, 732, 746], "gh170": 75, "wooldridg": [75, 140, 141, 143, 312, 348, 349, 350, 385, 388, 391, 702, 703, 704, 705], "invalid": [75, 859], "invalidteststatist": [75, 278, 313, 314, 315, 342, 348, 790, 803, 825, 837, 864], "add": [75, 78, 79, 80, 87, 141, 300, 384, 388, 605, 691, 701, 753, 764, 779], "inform": [75, 79, 80, 86, 140, 141, 144, 184, 187, 197, 200, 236, 387, 445, 453, 466, 703, 709, 711, 713, 715, 716, 718, 719, 722, 724, 726, 728, 730, 732, 735, 739, 743, 748, 755, 781], "ivgmmcu": [75, 86, 140, 144, 202, 213, 236, 262, 701], "intern": [75, 247, 470, 703], "retain": 75, "index": [75, 86, 141, 173, 181, 387, 388, 389, 392, 393, 445, 452, 465, 472, 473, 474, 481, 489, 497, 506, 516, 524, 703, 707, 752, 763, 778], "origin": [75, 140, 141, 210, 221, 233, 244, 255, 263, 284, 335, 371, 390, 484, 485, 492, 493, 500, 501, 510, 511, 519, 520, 527, 528, 549, 552, 587, 590, 638, 641, 673, 676, 761, 771, 787, 809, 843], "conceiv": 75, "spell": 75, "docstr": [75, 85, 92, 204, 238, 249], "prevent": 75, "charact": 75, "kappa": [75, 140, 144, 145, 151, 157, 163, 202, 203, 236, 237, 240, 247, 248, 251, 262, 312, 313, 315, 353, 385], "liml": [75, 86, 236, 240, 251, 313, 315, 701], "licens": 75, "clean": 75, "across": [75, 144, 215, 387, 388, 703, 706, 707, 738, 746], "out": [75, 140, 284, 335, 371, 549, 587, 638, 673, 705, 809, 843], "retriev": [75, 92], "macbeth": [75, 86, 419, 486, 529, 701], "previous": [75, 703], "ignor": [75, 98, 100, 144, 388, 390, 392, 533, 555, 568, 594, 622, 644, 657, 679], "3sl": [75, 86, 701, 706, 752, 757, 768, 778], "random": [75, 86, 87, 130, 134, 139, 521, 522, 654, 701, 703, 704, 705, 757, 768, 783], "pool": [75, 86, 388, 486, 513, 575, 701], "instrument": [75, 86, 87, 141, 142, 144, 145, 151, 157, 163, 183, 185, 186, 188, 189, 195, 198, 201, 202, 203, 206, 213, 214, 215, 217, 224, 225, 228, 231, 236, 237, 240, 247, 248, 251, 259, 273, 278, 314, 324, 326, 342, 348, 349, 350, 352, 385, 702, 705, 706, 707, 713, 716, 719, 738, 741, 742, 745, 746, 751, 752, 759, 763, 766, 778], "etext": 78, "text": [78, 83, 84, 143, 391], "line": [78, 703], "titl": 79, "gleft": 79, "gright": 79, "yname": [79, 80], "xname": [79, 80], "doubl": [79, 141, 445], "merg": [79, 83], "horizont": 79, "taken": [79, 80, 385, 504], "tupl": [79, 135, 173, 182, 396, 404, 412, 420, 430, 438, 464, 703, 752, 763, 778, 809, 843, 876], "pair": [79, 704, 876], "endogen": [79, 80, 87, 141, 144, 145, 151, 157, 163, 189, 202, 206, 210, 213, 217, 221, 224, 228, 233, 236, 240, 244, 247, 251, 255, 259, 260, 263, 284, 314, 324, 335, 342, 348, 349, 350, 352, 371, 385, 703, 704, 705, 706, 707, 752, 759, 761, 763, 771, 778, 787, 809, 843], "var_xx": [79, 80], "match": [79, 140, 141, 390, 393, 394, 485, 493, 501, 511, 520, 528, 549, 587, 638, 673, 703, 761, 771, 787, 809, 843], "use_t": 80, "signific": [80, 141, 388, 529, 540, 541, 565, 576, 577, 619, 629, 630, 654, 664, 665], "level": [80, 101, 264, 316, 354, 387, 445, 470, 481, 489, 497, 506, 516, 524, 531, 566, 620, 655, 703, 791, 826], "confid": [80, 101, 264, 316, 354, 531, 566, 620, 655, 791, 826], "interv": [80, 101, 264, 316, 354, 529, 531, 560, 565, 566, 599, 619, 620, 649, 654, 655, 685, 791, 826], "student": [80, 385], "attach": 80, "concaten": [81, 82], "comma": [81, 128, 295, 347, 382, 563, 603, 652, 689], "delimit": 81, "It": [83, 113, 128, 140, 141, 276, 295, 329, 347, 365, 382, 385, 387, 388, 389, 392, 393, 394, 543, 554, 555, 556, 563, 579, 592, 594, 595, 603, 632, 643, 644, 645, 652, 667, 678, 679, 680, 689, 703, 704, 705, 707, 757, 768, 783, 790, 803, 813, 825, 837, 847], "recommend": [83, 703, 704], "as_latex_tabular": 83, "individu": [83, 140, 141, 258, 392, 393, 703, 789, 798, 799, 824, 833, 834], "txt": 84, "welcom": 85, "area": [85, 140, 142], "extens": [85, 388, 389, 705, 707], "program": 85, "typo": [85, 703], "experienc": 85, "programm": 85, "clear": 85, "opportun": [85, 144], "refactor": 85, "simplif": 85, "task": 85, "Of": 85, "cours": 85, "entir": [85, 752, 763, 778], "cover": [85, 388], "alwai": [85, 110, 141, 173, 178, 186, 272, 325, 362, 385, 387, 390, 395, 403, 411, 429, 437, 707, 742, 859, 860, 862], "github": 85, "fork": 85, "repo": 85, "branch": 85, "your": 85, "new": [85, 387], "featur": [85, 142, 703], "submit": 85, "pull": 85, "request": [85, 859], "stabl": 86, "latest": 86, "doc": 86, "recent": [86, 703], "develop": [86, 392], "devel": 86, "statsmodel": [86, 140, 141, 142, 144, 247, 388, 389, 392, 394, 563, 603, 652, 689, 701, 703, 706], "randomeffect": [86, 388, 389, 390, 392, 701], "firstdifferenceol": [86, 388, 389, 390, 392, 701], "betweenol": [86, 388, 389, 390, 392, 701], "pooledol": [86, 388, 389, 392, 502, 701], "equat": [86, 504, 702, 704, 706, 707, 713, 716, 719, 738, 740, 744, 745, 746, 750, 752, 757, 758, 759, 761, 763, 768, 769, 771, 778, 783, 784, 785, 787, 789, 798, 809, 813, 817, 824, 833, 843, 847, 851], "limit": [86, 140, 144, 236, 701, 755, 781], "ml": [86, 236], "ivliml": [86, 87, 140, 144, 202, 213, 224, 247, 251, 312, 701], "ivgmm": [86, 140, 144, 202, 224, 226, 236, 262, 701], "iv3sl": [86, 701, 705, 706, 805, 839], "ivsystemgmm": [86, 701, 705], "compat": [86, 139, 385], "plan": 86, "contribut": 86, "log": [86, 128, 140, 141, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 387, 388, 389, 392, 394, 529, 544, 565, 581, 619, 633, 654, 668, 703, 707, 803, 837], "interact": [87, 92], "nexog": [87, 202, 210, 213, 221, 224, 233, 236, 244, 247, 255, 284, 335, 371, 549, 587, 638, 673, 699, 759], "cat": [87, 130, 134, 139], "cont": [87, 130, 134], "cartesian": [87, 130, 138], "product": [87, 130, 134, 138, 144, 215, 766], "capabl": 87, "million": 87, "y_i": [87, 139, 144, 224, 231, 349, 703, 704], "x_i": [87, 139, 224, 231, 429, 703], "z_i": [87, 139, 145, 151, 163, 171, 172, 183, 186, 195, 231, 278], "epsilon_i": [87, 139, 144, 183, 186, 195, 224, 349, 411, 703], "z": [87, 142, 145, 151, 157, 163, 171, 185, 188, 189, 198, 201, 202, 203, 213, 214, 225, 231, 236, 237, 248, 324, 342, 348, 352, 385, 478, 707, 713, 716, 719, 741, 742, 745, 751, 752, 763, 856, 857], "fewer": 87, "known": [87, 141, 231, 707], "invert": 87, "inner": [87, 142, 387, 705], "frish": 87, "waugh": 87, "lovel": 87, "orthogon": [87, 139, 259, 348, 385, 393], "perfectli": [87, 388], "linearli": 87, "particular": [87, 141, 144, 189, 388, 392, 705, 761, 771, 787, 809, 843], "restrict": [87, 128, 262, 278, 295, 312, 313, 314, 315, 342, 347, 382, 385, 393, 394, 540, 541, 563, 576, 577, 603, 629, 630, 652, 664, 665, 689, 706, 707, 773, 774, 789, 802], "captur": 87, "redund": 87, "compon": [87, 143, 348, 349, 350, 385, 388, 392, 393, 705, 707], "np": [87, 128, 130, 134, 139, 141, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 387, 394, 563, 603, 652, 689, 703, 704, 705, 757, 768, 775, 783, 859, 862], "pd": [87, 130, 134, 139, 140, 141, 144, 387, 388, 563, 603, 652, 689, 703, 704, 705, 757, 768, 775, 783], "dep": [87, 139, 140, 141, 142, 144, 258, 387, 388, 389, 392, 394, 703, 704, 705], "standard_norm": [87, 130, 134, 139, 705], "20000": 87, "randint": [87, 130, 134, 139, 703], "rang": [87, 130, 134, 141, 703], "concat": [87, 130, 134, 140, 141, 703], "axi": [87, 130, 134, 141, 173, 177, 485, 493, 501, 511, 520, 528], "iaction": 87, "encod": 87, "absorbed_depend": 87, "absorbed_exog": 87, "has_const": [87, 98, 141, 202, 213, 224, 236, 247, 262, 312, 353, 478, 486, 494, 502, 513, 521, 752, 763, 778], "rais": [88, 89, 92, 144, 388, 445, 696, 875, 876], "runtimeerror": [88, 89, 92], "call": [88, 89, 140, 388, 394, 703], "ivdata": [90, 91, 94, 96], "auto": [92, 755, 781], "absorb_opt": [92, 139], "use_cach": [92, 139], "lsmr_option": 92, "unadjust": [92, 140, 141, 144, 186, 189, 204, 213, 215, 224, 238, 249, 259, 385, 387, 388, 389, 392, 394, 479, 487, 495, 504, 514, 522, 703, 704, 705, 706, 742, 755, 763, 766, 768, 781], "homoskedast": [92, 140, 141, 144, 157, 186, 189, 204, 213, 215, 224, 238, 249, 385, 388, 437, 478, 479, 481, 486, 487, 489, 494, 495, 497, 502, 504, 506, 513, 514, 516, 521, 522, 524, 540, 575, 576, 629, 664, 703, 704, 705, 713, 716, 719, 728, 742, 755, 766, 768, 781, 803, 837], "classic": [92, 140, 141, 204, 238, 249, 388, 392, 540, 576, 629, 664, 755, 766, 781], "hdfe": [92, 139], "fallback": 92, "forc": [92, 141, 144, 388, 703, 755, 781], "binari": [92, 130], "purg": [92, 534, 556, 569, 595, 623, 645, 658, 680], "store": [92, 705, 706], "dramat": 92, "speed": 92, "ass": 92, "deprec": [92, 391, 394], "accord": [92, 204, 238, 249, 447, 449, 455, 458], "command": [92, 140, 204, 238, 249, 387, 389], "absorbinglsresult": 92, "homoskedasticcovari": [92, 144, 189, 204, 238, 249, 755, 781], "configur": [92, 144, 183, 184, 186, 187, 195, 197, 199, 200, 204, 215, 226, 238, 249, 262, 296, 479, 487, 495, 504, 514, 522, 709, 711, 713, 715, 716, 718, 719, 722, 724, 726, 728, 730, 732, 735, 738, 739, 742, 743, 746, 748, 789, 793, 821, 824, 828], "hash": [92, 130], "content": 92, "64": [92, 140, 388, 705], "bit": 92, "xxhash": 92, "256": 92, "reus": 92, "held": 92, "nvar": [95, 97, 128, 145, 151, 157, 163, 185, 188, 189, 198, 201, 203, 210, 211, 212, 214, 221, 222, 223, 225, 231, 233, 234, 235, 237, 244, 245, 246, 248, 255, 256, 257, 295, 347, 382, 445, 484, 492, 500, 510, 519, 527, 536, 537, 563, 571, 572, 603, 625, 626, 652, 660, 661, 689, 741, 761, 771, 785, 787], "raw": [97, 212, 223, 235, 246, 257], "resid": [97, 98, 113, 140, 141, 212, 223, 235, 246, 257, 262, 276, 312, 329, 353, 365, 394, 529, 543, 565, 579, 619, 632, 654, 667, 789, 824], "absorbed_effect": 98, "absorbed_rsquar": 98, "df_absorb": 98, "df_model": [98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "f_statist": [98, 262, 300, 312, 353, 529, 565, 605, 619, 654], "fitted_valu": [98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "equival": [98, 112, 202, 207, 213, 218, 224, 229, 236, 241, 247, 252, 262, 275, 312, 328, 353, 364, 385, 388, 389, 392, 707], "idiosyncrat": [98, 262, 284, 312, 335, 353, 371, 388, 392, 393, 529, 549, 565, 587, 619, 638, 654, 673, 809, 843], "model_ss": [98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "resid_ss": [98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "rsquared_adj": [98, 262, 300, 312, 353], "s2": [98, 145, 151, 157, 163, 189, 262, 312, 353, 395, 403, 411, 419, 429, 437, 529, 565, 619, 654], "varianc": [98, 123, 141, 145, 150, 151, 156, 157, 162, 163, 168, 189, 194, 231, 262, 278, 290, 312, 341, 342, 353, 377, 385, 388, 393, 395, 402, 403, 410, 411, 418, 419, 428, 429, 436, 437, 444, 478, 481, 485, 486, 489, 493, 494, 497, 501, 502, 506, 511, 513, 516, 520, 521, 522, 524, 528, 529, 557, 565, 596, 602, 619, 646, 654, 681, 688, 699, 703, 704, 802, 803, 817, 837, 851], "wresid": [98, 262, 312, 353, 529, 565, 619, 654, 789, 824], "95": [101, 264, 316, 354, 531, 566, 620, 655, 703, 705, 791, 826], "despit": [110, 141, 272, 325, 362], "divid": [110, 140, 272, 325, 362, 541, 577, 630, 665], "against": [110, 140, 272, 325, 362, 385, 388], "dimens": [113, 173, 179, 276, 329, 365, 387, 388, 445, 459, 543, 579, 632, 667], "shape": [113, 130, 134, 141, 173, 276, 329, 365, 387, 445, 470, 543, 552, 579, 590, 632, 641, 667, 676, 703, 709], "natur": [113, 140, 141, 276, 329, 365, 543, 579, 632, 667, 705], "inclus": [113, 276, 329, 365, 388, 543, 579, 632, 667], "q": [128, 263, 278, 295, 313, 315, 324, 347, 348, 352, 382, 385, 563, 603, 652, 689, 703, 753, 764, 773, 779, 802], "appli": [128, 140, 141, 142, 236, 295, 347, 382, 388, 393, 403, 522, 563, 603, 652, 689, 703, 707, 709, 724, 728, 732], "union": [128, 140, 141, 142, 295, 347, 382, 387, 388, 392, 394, 563, 603, 652, 689, 699, 703, 704], "simplest": [128, 144, 295, 347, 382, 385, 563, 603, 652, 689, 757, 768, 783], "x1": [128, 142, 295, 347, 382, 481, 489, 497, 506, 516, 524, 563, 603, 652, 689, 705], "x2": [128, 142, 295, 347, 382, 563, 603, 652, 689, 705], "x3": [128, 142, 295, 347, 382, 563, 603, 652, 689], "without": [128, 203, 237, 248, 295, 347, 382, 394, 563, 603, 652, 689, 705], "kei": [128, 140, 144, 173, 177, 260, 295, 300, 347, 382, 384, 387, 388, 445, 563, 603, 605, 652, 689, 691, 701, 703, 704, 705, 706, 752, 757, 761, 763, 768, 771, 778, 783, 787, 809, 843, 869, 875, 876, 878], "valid": [128, 141, 142, 144, 189, 206, 217, 228, 240, 251, 295, 347, 382, 385, 481, 489, 497, 502, 506, 513, 516, 524, 563, 603, 652, 689, 705, 755, 766, 768, 781, 859], "examin": [128, 140, 141, 295, 313, 315, 347, 348, 349, 350, 382, 385, 563, 603, 652, 689, 707], "h_0": [128, 295, 347, 382, 563, 603, 652, 689], "theta": [128, 295, 347, 382, 388, 393, 563, 603, 652, 654, 689], "2_q": [128, 278, 295, 347, 382, 563, 603, 652, 689, 802], "wage": [128, 144, 206, 217, 228, 240, 251, 295, 347, 382, 388, 392, 703, 704, 705], "exper": [128, 141, 144, 206, 217, 228, 240, 251, 295, 347, 382, 388, 703, 704, 705, 706], "brthord": [128, 141, 206, 217, 228, 240, 251, 295, 347, 382], "educ": [128, 140, 142, 144, 206, 217, 228, 240, 251, 295, 347, 382, 388, 702, 703, 704, 705, 790, 803, 825, 837], "sib": [128, 141, 144, 206, 217, 228, 240, 251, 295, 347, 382], "wald_r": [128, 295, 347, 382, 563, 603, 652, 689], "dataarrai": [130, 173, 445], "best": [130, 387, 757, 768, 783], "convert": [130, 173, 387, 445, 470], "ncat": [130, 138, 699], "ncont": [130, 134, 138], "rs": [130, 134, 139, 703, 705], "randomst": [130, 134, 139, 699, 703], "100000": [130, 134, 394], "cats_df": 130, "count": [130, 140, 141, 388, 393], "top": 130, "freq": 130, "20251": 130, "20195": 130, "20331": 130, "20158": 130, "cart": [130, 134], "1875": 130, "invari": [130, 135], "permut": [130, 135], "isnul": [130, 173, 202, 213, 224, 236, 247, 445], "static": [134, 203, 206, 214, 217, 228, 237, 240, 248, 251], "frame": [134, 757, 768, 783], "conveni": 134, "720": 134, "csc_matrix": 138, "dummy_interact": 138, "prod_": 138, "distinct": [138, 403, 703, 757, 768, 783], "grow": 139, "notebook": [139, 141], "how": [139, 140, 141, 385, 388, 391, 703, 705, 707], "simul": [139, 692, 699, 705], "mirror": 139, "state": [139, 141, 703], "worker": [139, 703], "1_000_000": 139, "state_id": 139, "50": [139, 140, 141, 392, 394], "state_effect": 139, "max": [139, 140, 141, 387, 388, 389, 392, 393, 394], "firm_id": 139, "firm_effect": 139, "ep": [139, 185, 188, 198, 201, 395, 403, 411, 419, 429, 437, 709, 713, 716, 719, 724, 728, 732, 740, 741, 744, 745, 750, 751], "column_stack": [139, 705], "ones": [139, 141, 703, 707], "intercept": [139, 141, 142, 389, 390, 393, 394, 703], "trick": 139, "meaning": [139, 394, 703], "done": [139, 704], "ls": [139, 140], "8377": 139, "adj": [139, 140, 141, 142, 144, 394, 703, 705], "7975": 139, "1000000": 139, "962e": 139, "06": [139, 141, 387, 755, 766, 781], "49": [139, 140, 388, 389, 394], "6664": 139, "varaibl": 139, "987e": 139, "9477": 139, "1057": [139, 388], "9460": 139, "9495": 139, "9994": [139, 703], "990": 139, "89": [139, 141, 387, 705], "9974": [139, 703], "0008": [139, 141, 388, 703, 704], "989": [139, 703], "09": [139, 140, 703], "9989": 139, "0028": [139, 141, 388, 704, 705], "span": [139, 387, 707], "satisfi": [139, 210, 221, 233, 244, 255, 385, 752, 778], "datetim": 139, "dt": 139, "total_second": 139, "083729": 139, "237299": 139, "toler": [139, 755, 766, 781], "ax": [139, 387], "b": [139, 385, 393, 702, 703], "198676": 139, "damp": 139, "00000000000000e": 139, "00": [139, 388, 392, 705], "atol": 139, "00e": 139, "08": [139, 140, 389, 394, 705], "conlim": 139, "btol": 139, "maxit": 139, "itn": 139, "norm": 139, "cond": [139, 140, 142], "00000e": 139, "417e": 139, "03": [139, 394], "126e": 139, "0e": 139, "6e": 139, "04": [139, 387, 705], "83446e": 139, "677e": 139, "377e": 139, "9e": [139, 387], "01": 139, "1e": [139, 755, 766, 781], "2e": 139, "09819e": 139, "563e": 139, "668e": 139, "5e": [139, 387], "7e": [139, 387], "17247e": 139, "553e": 139, "446e": 139, "4e": 139, "3e": [139, 387], "30067e": 139, "551e": 139, "539e": 139, "30071e": 139, "662e": 139, "29984e": 139, "542e": 139, "999e": 139, "07": [139, 141, 387, 394], "29985e": 139, "882e": 139, "29990e": 139, "8e": [139, 387], "86056e": 139, "003e": 139, "finish": 139, "good": [139, 140, 142, 385, 707], "enough": 139, "istop": 139, "normr": 139, "norma": 139, "normar": 139, "conda": 139, "normx": 139, "001e": 139, "470e": 139, "08847e": 139, "953e": 139, "167e": 139, "15243e": 139, "484e": 139, "41447e": 139, "412e": 139, "88004e": 139, "266e": 139, "87319e": 139, "921e": 139, "87000e": 139, "868e": 139, "87108e": 139, "866e": 139, "87255e": 139, "62098e": 139, "857e": 139, "04265e": 139, "789e": 139, "99381e": 139, "309e": 139, "000e": 139, "472e": 139, "29233e": 139, "946e": 139, "623e": 139, "45416e": 139, "328e": 139, "34706e": 139, "107e": 139, "41880e": 139, "140e": 139, "42126e": 139, "176e": 139, "41939e": 139, "077e": 139, "41643e": 139, "40968e": 139, "02689e": 139, "060e": 139, "66462e": 139, "851e": 139, "22889e": 139, "454e": 139, "follow": [140, 143, 703, 878], "those": [140, 142, 144, 389, 703, 704], "chapter": [140, 141, 388, 703], "microeconometr": [140, 702], "stata": [140, 143, 385, 390, 393, 702, 707], "cameron": [140, 143, 702], "trivedi": [140, 143, 702], "main": [140, 390, 403, 703, 705, 706], "likelihood": [140, 144, 387, 388, 389, 392, 394, 529, 544, 565, 581, 619, 633, 654, 668, 707, 803, 837], "medic": [140, 142], "expenditur": [140, 142], "survei": [140, 142], "mep": 140, "pocket": 140, "drug": [140, 142], "characterist": [140, 142, 388], "insur": [140, 142, 703], "employ": [140, 141, 703], "like": [140, 142, 385, 388, 391, 392, 470, 699, 703, 704, 707, 752, 757, 761, 763, 768, 771, 778, 783, 787, 809, 843, 869, 873, 874, 879], "candid": 140, "percentag": [140, 699], "incom": [140, 141, 142], "social": [140, 142], "secur": [140, 142], "dropna": [140, 141, 142, 705], "ag": [140, 141, 142, 703, 705], "age2": [140, 142], "black": [140, 141, 142, 388], "blhisp": [140, 142], "hispan": [140, 142, 388], "drugexp": [140, 142], "presc": [140, 142], "expens": [140, 142], "educyr": [140, 142], "fair": [140, 142], "femal": [140, 142], "firmsz": [140, 142], "fph": [140, 142], "poor": [140, 142], "hi_empunion": [140, 142], "thro": [140, 142], "emp": [140, 142, 703], "hisp": [140, 142, 388], "hiapan": [140, 142], "ldrugexp": [140, 142], "linc": [140, 142], "lowincom": [140, 142], "marri": [140, 142, 388, 392, 563, 603, 652, 689, 703, 704], "midincom": [140, 142], "middl": [140, 142], "msa": [140, 142], "metropolitan": [140, 142], "multlc": [140, 142], "poverti": [140, 142], "priolist": [140, 142], "prioriti": [140, 142], "privat": [140, 142, 247], "ssiratio": [140, 142], "ssi": [140, 142], "ratio": [140, 142, 342, 385, 707, 803, 817, 837, 851], "totchr": [140, 142], "chronic": [140, 142], "vegood": [140, 142], "vgh": [140, 142], "vg": [140, 142], "next": [140, 141, 388, 703], "control": [140, 141, 144, 388, 479, 495, 504, 514, 522], "summar": 140, "group": [140, 141, 145, 385, 388, 393, 403, 445, 447, 449, 451, 453, 455, 458, 565, 585, 703, 709, 858], "percentil": 140, "10089": [140, 142], "mean": [140, 141, 142, 183, 186, 195, 199, 385, 389, 393, 504, 703, 707, 738, 742, 746, 856, 857], "481361": 140, "382198": 140, "860938": 140, "577064": 140, "75": [140, 141, 394], "051740": 140, "362052": 140, "485949": 140, "292858": 140, "494050": 140, "682109": 140, "min": [140, 141, 385, 387, 388, 389, 392, 394], "678342": 140, "180172": 140, "91": [140, 387], "743275": 140, "163544": 140, "913143": 140, "369880": 140, "907755": 140, "743160": 140, "744476": 140, "worth": [140, 141, 390, 703], "536544": 140, "187432": 140, "062048": 140, "140529": 140, "367818": 140, "390277": 140, "241254": 140, "170389": 140, "504522": 140, "250620": 140, "And": 140, "relev": [140, 273, 326, 387, 449, 705], "especi": 140, "lead": [140, 142, 502, 707, 752, 778], "weak": [140, 141], "exclus": 140, "212431": 140, "116419": 140, "119849": 140, "037352": 140, "253946": 140, "190433": 140, "044578": 140, "062465": 140, "008232": 140, "187275": 140, "add_const": [140, 141, 144, 388, 392, 563, 603, 652, 689, 703, 706], "process": [140, 210, 221, 233, 244, 255, 284, 335, 371, 484, 492, 500, 510, 519, 527, 761, 771, 787, 809, 843], "api": [140, 141, 144, 247, 388, 392, 563, 603, 652, 689, 703, 706], "const": [140, 141, 144, 388, 392, 699, 703, 706], "nest": [140, 144], "ivolsmod": 140, "res_ol": [140, 141, 703], "1770": [140, 141, 142], "1765": [140, 142, 703], "2262": [140, 142], "0739": [140, 142], "0260": [140, 141, 142, 703], "8441": [140, 142], "0230": [140, 142, 705], "1248": [140, 142], "8611": [140, 142], "1570": [140, 141, 142], "320": [140, 142], "5533": [140, 142], "1689": [140, 142], "4404": [140, 142], "049": [140, 142], "4220": [140, 142], "4587": [140, 142], "0578": [140, 142], "0254": [140, 142], "2797": [140, 142], "0226": [140, 141, 142, 703], "1075": [140, 142], "0019": [140, 142, 703], "8228": [140, 142], "0683": [140, 142], "0003": [140, 141, 142, 389, 703, 704, 705], "7646": [140, 142], "4445": [140, 142], "0164": [140, 142], "0373": [140, 142], "1513": [140, 142], "0341": [140, 142, 144, 703], "4353": [140, 141, 142], "2182": [140, 142], "0844": [140, 142], "strong": [140, 141], "ivmod": 140, "res_2sl": [140, 141], "0640": [140, 142, 704], "0634": [140, 142, 703], "2000": [140, 142], "7872": [140, 142, 703], "2688": [140, 142], "246": [140, 142], "2602": [140, 142], "3141": [140, 142], "4503": [140, 142], "44": [140, 142, 389, 394], "157": [140, 141, 142, 387, 705], "4303": [140, 142], "4703": [140, 142, 703], "0204": [140, 142], "0326": [140, 142], "6257": [140, 142], "5315": [140, 142], "0843": [140, 142], "0435": [140, 141, 142], "0132": [140, 141, 142, 703], "4092": [140, 142], "0191": [140, 142], "0870": [140, 142], "8436": [140, 142], "0426": [140, 142, 388], "1314": [140, 142, 388], "2174": [140, 142, 703], "0395": [140, 142], "5052": [140, 142], "2948": [140, 142], "1400": [140, 142], "8976": [140, 142, 703], "2211": [140, 142], "0592": [140, 141, 142], "3310": [140, 142], "4642": [140, 142, 703], "res_2sls_robust": 140, "account": [140, 388, 403, 479, 504, 532, 533, 534, 554, 555, 556, 567, 568, 569, 592, 594, 595, 621, 622, 623, 643, 644, 645, 656, 657, 658, 678, 679, 680, 703], "res_2sls_std": 140, "iter_limit": [140, 144, 215, 705, 755, 766, 781], "res_gmm": 140, "alter": [140, 144], "weight_typ": [140, 144, 213, 217, 224, 228, 262, 705, 763, 768, 789], "res_gmm_clust": 140, "simultan": [140, 231, 236, 502, 702, 703, 704, 706], "order": [140, 141, 170, 171, 172, 348, 385, 388, 549, 587, 638, 673, 703, 704, 706, 753, 757, 764, 768, 779, 783, 869, 873, 874, 879], "sens": [140, 144, 385, 394, 703, 752, 778], "fragil": 140, "res_gmm_cu": 140, "045365": 140, "404": 140, "ordereddict": [140, 388, 703, 704, 706], "hold": [140, 141, 388, 692], "advantag": [140, 703], "preserv": [140, 387, 703, 704, 706], "present": [140, 143, 391, 394, 696, 703, 813, 847, 878], "With": [140, 445], "fairli": [140, 388, 703], "vari": [140, 388, 703], "slightli": [140, 141], "conclus": [140, 141], "reach": [140, 141], "sensit": [140, 141], "choic": [140, 144, 189, 385, 391, 394, 504, 541, 577, 630, 665, 705, 707], "parenthes": [140, 141, 142, 388], "collect": [140, 388, 703, 704, 706], "homo": 140, "hetero": 140, "est": [140, 141, 142, 388], "0414": 140, "0406": 140, "0292": [140, 388], "0388": 140, "0409": [140, 141], "0400": 140, "0286": 140, "0382": 140, "1882": [140, 703], "1955": 140, "1952": 140, "1700": [140, 389], "1949": 140, "9899": 140, "9933": 140, "0359": [140, 703], "1501": 140, "8386": 140, "8530": 140, "8810": 140, "8752": 140, "8778": 140, "7277": 140, "8847": 140, "030": 140, "660": 140, "658": 140, "299": [140, 705], "657": 140, "4512": 140, "4510": 140, "4482": 140, "42": [140, 394], "942": 140, "43": 140, "769": 140, "738": 140, "33": [140, 141, 389, 703, 705], "701": 140, "0278": [140, 141, 388], "0282": 140, "0245": [140, 141, 704], "0288": [140, 141, 387, 703], "8933": 140, "8653": 140, "8398": [140, 705], "8928": 140, "0141": [140, 703], "0142": [140, 141], "0119": [140, 388], "0834": 140, "8753": 140, "8773": 140, "8969": 140, "0943": 140, "0945": 140, "0957": 140, "0950": 140, "4400": 140, "3079": 140, "3142": 140, "4934": 140, "3333": 140, "2237": [140, 141], "2231": [140, 704], "2091": 140, "2236": 140, "7805": 140, "6514": 140, "6344": [140, 703], "1662": 140, "6421": 140, "durbin": [140, 385], "exploit": [140, 393], "fact": 140, "h0": [140, 141], "2819": 140, "0x7f8feff58fd0": 140, "wu": [140, 352, 385], "hausman": [140, 352, 385], "variant": 140, "wu_hausman": 140, "3253": [140, 141], "10081": 140, "0x7f8feff58d30": 140, "replic": [140, 701], "step1": 140, "step2": 140, "345410499713": 140, "tmp": [140, 141, 703], "ipykernel_3902": 140, "2400394995": 140, "py": [140, 141, 387, 703], "futurewarn": [140, 141, 703], "futur": [140, 141, 387, 703], "obj": [140, 141, 703], "34": [140, 141, 388, 394, 703], "wooldridge_regress": [140, 141, 312], "4542": [140, 703, 704], "0x7f8fefa514c0": 140, "power": [140, 385], "lm": [140, 790, 825], "wooldridge_scor": [140, 312], "24": [140, 141, 388, 703, 705], "9350": 140, "0x7f8fefa51040": 140, "overidentifi": [140, 141, 262, 278, 312, 313, 314, 315, 342, 385, 789, 802], "word": 140, "actual": [140, 141, 195, 196, 263, 388, 390, 393], "evid": 140, "j_stat": [140, 262, 789], "0475": [140, 703], "3061": 140, "0x7f8ff01d6df0": 140, "stori": 140, "res_gmm_al": 140, "5903": 140, "0089": 140, "0x7f8fef8ac5e0": 140, "probabl": [140, 388], "od": 140, "col": [140, 173, 703, 757, 768], "1768": 140, "0644": 140, "9053": 140, "1763": [140, 388], "0651": [140, 141], "9064": 140, "2250": 140, "1734": 140, "950": 140, "8201": 140, "2145": 140, "7267": 140, "267": [140, 141, 703], "326": 140, "4196": 140, "4399": 140, "4548": 140, "4710": 140, "834": 140, "193": 140, "163": [140, 388], "0613": 140, "0565": 140, "1842": 140, "6066": 140, "2596": [140, 394], "5312": 140, "0177": 140, "0335": [140, 141], "7521": 140, "7086": 140, "3433": 140, "1223": [140, 141], "2473": [140, 703], "2280": 140, "2965": 140, "1876": 140, "1484": 140, "2479": 140, "3559": [140, 141], "5639": 140, "0727": 140, "2425": [140, 141], "1170": [140, 704], "3459": 140, "9323": 140, "3254": [140, 703], "1760": [140, 141, 703], "0908": [140, 388], "assess": 140, "credibl": 140, "partial": [140, 141, 259, 385, 388], "first_stag": [140, 141, 262, 312], "0761": 140, "0179": [140, 388], "shea": [140, 141, 259, 385], "806": 140, "441e": 140, "distn": [140, 141], "0290": [140, 144], "705": 140, "0128": [140, 703], "4896": 140, "0734": 140, "6226": 140, "184": 140, "0484": 140, "3266": 140, "0627": 140, "1084": 140, "1916": 140, "1121": 140, "break": 140, "rule": [140, 141, 142, 395, 411, 419, 481, 489, 497, 506, 516, 524], "thumb": [140, 141, 395, 411, 419], "res_2sls_al": 140, "0821": 140, "0243": [140, 388, 394], "179": [140, 141], "959": [140, 388], "6494": 140, "0724": [140, 703], "5497": [140, 703], "0080": [140, 141, 388, 703], "206": 140, "0410": [140, 141], "3552": 140, "0676": [140, 141], "5369": 140, "1690": 140, "3289": 140, "0637": 140, "1947": 140, "1151": 140, "4799": 140, "9286": 140, "finit": [140, 144], "strongli": [140, 703], "exact": [140, 707], "res_liml": 140, "0394": [140, 141], "8807": 140, "577": 140, "4513": 140, "730": [140, 703], "0283": [140, 706], "8776": [140, 703], "8781": 140, "0947": 140, "3114": 140, "2241": 140, "6531": 140, "9957": 140, "8361": 140, "0001153166806434": 140, "As": [140, 703], "27": [140, 141, 388, 703], "res_ivol": 140, "sm_ol": 140, "sm": [140, 144, 388, 392, 563, 603, 652, 689, 703, 706], "073879": 140, "861131": 140, "440381": 140, "057806": 140, "003529": 140, "010482": 140, "151307": 140, "2281671701": 140, "econometr": [141, 388, 702, 703, 790, 803, 825, 837], "jeffrei": [141, 388, 702], "demonstr": [141, 703, 705], "primarili": [141, 388], "signal": 141, "beyond": [141, 388, 395, 403, 411, 429, 437], "direct": [141, 142], "among": 141, "mroz": [141, 705], "1987": [141, 387, 388], "empir": 141, "hour": [141, 388, 703, 705], "work": [141, 387, 388, 392, 702, 703, 705], "assumpt": [141, 263, 392, 393, 540, 575, 576, 629, 664, 703, 705, 707], "econometrica": 141, "765": [141, 387], "799": 141, "nlf": 141, "labor": [141, 388], "1975": 141, "kidslt6": [141, 705], "kid": 141, "kidsge6": 141, "woman": 141, "yr": [141, 703], "school": [141, 388, 703], "earn": [141, 703, 704, 706], "repwag": 141, "interview": 141, "1976": 141, "hushr": 141, "husband": 141, "husag": 141, "huseduc": 141, "huswag": 141, "hourli": [141, 703, 704], "faminc": 141, "famili": 141, "mtr": 141, "fed": 141, "margin": [141, 703], "tax": 141, "motheduc": 141, "mother": 141, "fatheduc": 141, "father": 141, "unem": 141, "counti": 141, "citi": 141, "live": [141, 703], "smsa": 141, "mkt": 141, "nwifeinc": [141, 705], "lwage": [141, 388, 392, 563, 603, 652, 689, 705], "expersq": [141, 388, 392, 563, 603, 652, 689, 703, 704, 705], "special": [141, 202, 389, 392, 393, 506, 701, 703, 706, 778], "1179": [141, 388], "1158": [141, 388], "428": [141, 705], "57": [141, 387, 705], "196": [141, 705], "1852": 141, "1848": 141, "3163": 141, "5474": 141, "1086": 141, "0144": [141, 388], "5628": 141, "0805": [141, 703], "1368": 141, "subject": [141, 142], "save": 141, "later": 141, "relationship": 141, "res_first": 141, "educ_hat": 141, "1726": 141, "1706": [141, 703], "258": [141, 703], "237": 141, "2753": [141, 389, 704], "186": [141, 703], "6975": 141, "777": 141, "2694": 141, "0285": 141, "4476": 141, "2135": 141, "res_second": 141, "0934": [141, 387], "0913": [141, 388], "8487": 141, "0914": [141, 703], "4411": 141, "4451": 141, "9911": 141, "3216": 141, "4312": 141, "3134": 141, "0351": 141, "6878": 141, "0095": [141, 703], "1279": [141, 388, 703], "res_direct": 141, "5982": 141, "941e": 141, "1070": 141, "9465": 141, "6119": 141, "sibl": 141, "blackburn": 141, "d": [141, 385, 388, 445, 449, 470, 702, 872, 876, 877], "neumark": 141, "1992": 141, "unobserv": 141, "abil": [141, 703], "interindustri": 141, "differenti": 141, "quarterli": 141, "journal": [141, 388, 702], "107": [141, 703], "1421": 141, "1436": 141, "weekli": 141, "iq": [141, 144], "kww": 141, "knowledg": 141, "world": 141, "tenur": [141, 703, 706], "south": [141, 702, 703, 704], "urban": 141, "meduc": 141, "feduc": 141, "0973": [141, 703], "0964": 141, "934": [141, 144, 388, 703], "100": [141, 387, 389, 699, 705, 755, 781], "71": [141, 394], "9733": 141, "0814": 141, "73": [141, 705], "419": 141, "8139": [141, 388], "1328": 141, "0598": 141, "035": [141, 703], "0481": 141, "0715": 141, "0576": 141, "0566": 141, "143": 141, "1131": [141, 703], "125": 141, "921": 141, "365": 141, "2287": [141, 703], "0303": [141, 703], "5569": 141, "2880": 141, "1694": 141, "0101": [141, 703], "715": 141, "1310": 141, "3539": 141, "497": 141, "4373": 141, "8248": 141, "1224": [141, 704], "0263": [141, 703], "6599": 141, "0709": [141, 388], "1738": [141, 388], "concept": [141, 142], "wl": [141, 386, 389, 449, 479, 701], "2_i": [141, 163, 817, 851], "w_i": [141, 170, 171, 172, 704, 705, 746, 817, 851], "feasibl": [141, 394, 707], "could": [141, 389, 703], "res2": 141, "fgls_mod": 141, "fgls_re": 141, "sigma2_hat": 141, "exp": 141, "9903": [141, 705], "1360": [141, 703], "2224": 141, "3675": [141, 703], "4956": 141, "9452": 141, "0518": 141, "1307": [141, 703], "0158": 141, "5311": 141, "5953": 141, "particularli": 141, "don": 141, "res_gl": 141, "520": 141, "2031": 141, "3231": 141, "105": 141, "5699": 141, "8363": 141, "1166": 141, "0241": [141, 388], "8497": 141, "0695": 141, "1638": 141, "babi": 141, "birthweight": 141, "mullahi": 141, "1997": 141, "cigarett": 141, "behavior": 141, "review": [141, 702, 703], "79": 141, "596": 141, "593": 141, "1988": [141, 387], "cigtax": 141, "cig": 141, "home": [141, 387], "cigpric": 141, "bwght": 141, "ounc": 141, "pariti": 141, "child": 141, "male": [141, 703, 704], "white": [141, 388, 429, 479, 495, 504, 514, 522, 703], "smked": 141, "dai": [141, 703], "preg": 141, "lbwght": 141, "bwghtlb": 141, "pound": 141, "pack": 141, "_weak": 141, "1388": 141, "0731": 141, "1499": [141, 703], "9746": 141, "2361": [141, 703], "9192": 141, "3580": 141, "3172": [141, 387], "3681": 141, "0356": 141, "0247": [141, 388, 704], "4398": 141, "0129": [141, 389, 703], "0840": 141, "substanti": [141, 388, 703], "warrant": 141, "interpret": [141, 388, 707], "150": 141, "5224": 141, "5242": 141, "1356": 141, "2866": 141, "7203": 141, "0381": [141, 388], "123": [141, 387, 703], "6456": 141, "7951": 141, "0238": 141, "0223": 141, "0656": 141, "0199": 141, "0675": 141, "colleg": [141, 702], "card": 141, "1995": 141, "geograph": 141, "aspect": 141, "labour": 141, "essai": 141, "honour": 141, "john": [141, 702], "vanderkamp": 141, "ed": 141, "l": [141, 702], "christophid": 141, "grant": [141, 387], "swidinski": 141, "201": [141, 703], "222": 141, "toronto": 141, "univers": [141, 702], "press": [141, 702], "person": [141, 388], "nearc2": 141, "1966": [141, 389], "nearc4": 141, "nl": 141, "momdad14": 141, "dad": 141, "sinmom14": 141, "step14": 141, "parent": 141, "reg661": 141, "region": [141, 703], "reg662": 141, "reg663": 141, "reg664": 141, "reg665": 141, "reg666": 141, "reg667": 141, "reg668": 141, "reg669": 141, "south66": 141, "smsa66": 141, "cent": 141, "enrol": 141, "libcrd14": 141, "lib": 141, "xpersq": 141, "instr": [141, 236, 258, 263, 278, 313, 314, 315, 342, 348, 385, 802], "4771": 141, "4745": 141, "3010": [141, 704], "3693": 141, "3199": 141, "0848": 141, "7702": 141, "1536": [141, 704], "4862": 141, "638": [141, 388], "2148": 141, "77": [141, 388, 389, 705], "456": 141, "217": [141, 389], "059": 141, "4125": 141, "0320": [141, 388], "896": 141, "4752": 141, "3498": [141, 394], "5100": 141, "6100": 141, "9355": 141, "0923": 141, "138": 141, "1164": 141, "7547": 141, "4022": 141, "1109": 141, "6255": 141, "6196": 141, "0516": 141, "1416": [141, 388], "3645": 141, "7155": 141, "3291": 141, "2259": 141, "0255": 141, "1103": 141, "2309": [141, 394], "8174": 141, "1908": 141, "2417": 141, "0786": 141, "1854": 141, "4242": 141, "6714": 141, "4420": [141, 703], "2847": [141, 704], "0279": [141, 703], "1789": 141, "1562": [141, 703], "8759": 141, "3785": 141, "3226": 141, "1172": 141, "2070": 141, "5660": 141, "5714": 141, "2886": 141, "5230": 141, "2726": [141, 703], "2186": 141, "2230": 141, "7111": 141, "1659": 141, "3028": 141, "2826": 141, "1996": 141, "7656": 141, "1599": 141, "2168": [141, 142], "2389": 141, "9077": 141, "3640": 141, "6850": 141, "2513": [141, 703], "5239": 141, "2562": 141, "0449": [141, 389, 706], "0218": 141, "2103": 141, "0575": 141, "2903": 141, "1794": 141, "6000": 141, "2998": 141, "2963": 141, "1377": 141, "6208": 141, "0740": 141, "62": 141, "417": 141, "4757": 141, "7659": [141, 704], "592": [141, 705], "0716": [141, 388], "0980": 141, "1798": [141, 389], "1990": [141, 389], "985": [141, 703], "2345": 141, "1635": 141, "1364": 141, "0192": 141, "1159": 141, "0988": [141, 703], "1739": 141, "1480": 141, "0280": 141, "2917": 141, "2028": 141, "0932": [141, 703], "0262": 141, "0185": 141, "4153": 141, "0626": [141, 704, 705], "0350": [141, 704], "7531": 141, "0059": [141, 703, 704], "1650": 141, "1445": [141, 703], "0337": 141, "2850": 141, "0784": 141, "2107": [141, 703], "0551": 141, "0411": 141, "3402": 141, "1802": 141, "1280": 141, "0428": [141, 388], "9912": [141, 394], "0441": 141, "2119": 141, "1405": [141, 144], "0450": 141, "0018": [141, 703], "0523": 141, "1180": 141, "0455": [141, 704], "5934": [141, 704], "2071": 141, "0564": 141, "0505": 141, "1183": 141, "2634": [141, 703], "1553": 141, "0425": 141, "1186": 141, "0387": 141, "0658": [141, 703], "1944": 141, "0747": 141, "540": 141, "0818": 141, "nearli": [141, 389], "howev": [141, 392], "concern": 141, "strength": 141, "2382": 141, "2343": 141, "840": 141, "83": [141, 388], "6662": 141, "9085": 141, "0352": [141, 703], "8855": 141, "4468": 141, "1083": [141, 388], "0233": 141, "6376": 141, "0625": 141, "1540": 141, "7128": 141, "1468": 141, "0524": [141, 703, 705], "8031": 141, "0051": [141, 388, 703], "2494": [141, 703], "1118": 141, "0311": 141, "5995": 141, "0509": [141, 388], "1727": 141, "1447": 141, "0291": 141, "9775": 141, "2016": [141, 702], "0877": 141, "0205": [141, 703], "9035": 141, "3663": 141, "0217": [141, 388], "0587": 141, "1008": 141, "0365": [141, 388], "7644": 141, "0057": [141, 703, 704], "0293": [141, 703], "1722": 141, "1483": 141, "0355": 141, "0787": 141, "2178": 141, "0499": 141, "1471": 141, "2514": 141, "0354": [141, 703], "1352": 141, "1463": 141, "0491": 141, "9794": 141, "0500": [141, 704], "1629": 141, "0617": 141, "2641": 141, "1346": [141, 389], "0504": 141, "6689": 141, "0357": [141, 703, 704], "2334": [141, 388], "0831": [141, 388, 703], "0571": 141, "4552": 141, "1456": 141, "1950": 141, "1078": 141, "6317": 141, "0085": 141, "0275": 141, "1881": 141, "1315": 141, "0540": 141, "0149": [141, 703], "0257": 141, "2373": 141, "smaller": [141, 703], "naiv": [141, 495, 504, 514, 522, 707], "technic": [141, 703], "214": [141, 394, 703], "simpler": [141, 385, 705], "discuss": [141, 143], "anoth": 141, "languag": 141, "augment": 141, "parameter": 141, "differenc": [141, 388, 389, 390, 393, 394, 454], "res_formula": 141, "974531649295841e": 141, "reg": 141, "661": 141, "reg66": 141, "astyp": [141, 387, 394], "res_cat": 141, "662": [141, 703], "663": 141, "664": 141, "665": [141, 703], "666": 141, "667": [141, 387], "668": 141, "669": 141, "lnwage": 141, "1357": 141, "1296": 141, "653": [141, 702, 705], "3985": 141, "1207": 141, "9039": 141, "7329": 141, "8291": 141, "0442": 141, "0134": [141, 388, 703], "3038": 141, "0704": 141, "2485": 141, "0614": [141, 388], "0313": [141, 703], "9622": 141, "0497": 141, "043e": 141, "1227": 141, "IF": 141, "8256": 141, "0928": [141, 703], "0x7f9e00499160": 141, "accid": 141, "1624": 141, "1544": 141, "82": [141, 394], "954": 141, "0582": 141, "0346": [141, 704], "6810": 141, "1260": 141, "3923": 141, "1226": 141, "9024": 141, "7207": 141, "8169": 141, "0184": 141, "0700": [141, 394, 703], "2840": [141, 703], "0224": 141, "0308": 141, "9932": 141, "0462": 141, "1218": 141, "ipykernel_4206": 141, "309156546": 141, "overidentif": [141, 312, 348, 385], "uncorrel": [141, 385, 392, 393, 707], "wooldridge_overid": [141, 312], "4435": 141, "5055": 141, "0x7f9e00731280": 141, "formal": [141, 554, 555, 556, 592, 594, 595, 643, 644, 645, 678, 679, 680], "2_1": 141, "3719811106150277": 141, "31": [141, 705], "0421": [141, 388], "5939": 141, "0x7f9e00731e50": 141, "32": 141, "1126588681969989": 141, "elimin": [141, 392, 504], "jobtrain": [141, 387], "head": [141, 387, 388, 389], "isin": 141, "sort_valu": 141, "fcode": [141, 387], "set_index": [141, 387, 388, 389, 392, 394, 563, 603, 652, 689], "hrsemp": [141, 387], "scrap": [141, 387], "lscrap": [141, 387], "h": [141, 385, 702, 790, 803, 825, 837], "holzer": 141, "cheatham": 141, "knott": 141, "1993": [141, 703, 704], "train": [141, 387], "subsidi": 141, "michigan": 141, "46": [141, 387], "625": 141, "636": 141, "1989": [141, 387], "emploi": [141, 387, 755, 766, 781], "employe": [141, 703], "plant": [141, 389], "sale": [141, 387], "avgsal": [141, 387], "salari": 141, "item": [141, 387, 470, 471, 870], "rework": [141, 387], "tothr": [141, 387], "receiv": 141, "d89": [141, 387], "d88": [141, 387], "totrain": 141, "lemploi": 141, "lsale": 141, "lrework": 141, "lhrsemp": 141, "lscrap_1": 141, "lag": [141, 170, 171, 172, 195, 702], "grant_1": [141, 387], "clscrap": [141, 387], "cgrant": [141, 387], "clemploi": [141, 387], "clsale": [141, 387], "lavgsal": [141, 387], "clavgsal": [141, 387], "cgrant_1": [141, 387], "chrsemp": [141, 387], "314": [141, 703], "290": [141, 703], "450000e": 141, "500000": 141, "415708": 141, "885350": 141, "903448": 141, "679815e": 141, "18326": 141, "284644": 141, "500798": 141, "4025": 141, "063452": 141, "843101": 141, "977975e": 141, "6507": 141, "584305": 141, "410032": [141, 387], "100000e": 141, "4237": [141, 142, 703], "410604": 141, "527000e": 141, "13664": 141, "418084": 141, "900000e": 141, "17160": 141, "419309": 141, "000000e": 141, "22000": 141, "419486": [141, 387], "500": [141, 389, 757, 768, 783], "700000e": 141, "40563": 141, "108": [141, 703], "276": 141, "199722": 141, "883537": 141, "648551": 141, "197452": 141, "114650": 141, "188094": 141, "145294": 141, "45": [141, 388, 389, 394], "694834": 141, "398712": 141, "319107": 141, "010000": 141, "767500": 141, "332500": 141, "555000": 141, "267500": 141, "250000": 141, "144": [141, 394], "119": [141, 703], "168993": 141, "096876": 141, "128995": 141, "754753": 141, "589774": 141, "251180": 141, "489422": 141, "353818": 141, "502170": 141, "411099": 141, "982874": 141, "351611": 141, "350983": 141, "031946": 141, "023286": 141, "522509": 141, "115118": 141, "064538": 141, "116219": 141, "750337": 141, "092537": 141, "182321": 141, "215391": 141, "998797": 141, "397895": 141, "673976": 141, "896701": 141, "610610": 141, "clhrsemp": [141, 387], "131": [141, 387, 703], "058601": 141, "423050": 141, "642580": 141, "074255": 141, "301290": 141, "235229": 141, "080411": 141, "753490": 141, "338574": 141, "020135": 141, "057159": 141, "272727": 141, "039375": 141, "086255": 141, "063067": 141, "568912": 141, "027800": 141, "394449": 141, "delta": [141, 144, 324, 352, 385, 393, 494, 707], "812321": 141, "377778": 141, "817556": 141, "185697": 141, "523825": 141, "490310": 141, "496392": 141, "626858": 141, "850180": 141, "502169": 141, "355820": 141, "846154": 141, "110000": 141, "167054": 141, "333330": 141, "090000": 141, "054067": 141, "35": [141, 387], "3408": 141, "3255": 141, "266": 141, "5806": 141, "1139": 141, "5076": 141, "6117": 141, "5225": 141, "6837": 141, "437": 141, "0662": 141, "8235": 141, "507": 141, "367": 141, "cleaner": 141, "res_iv": 141, "0159": [141, 703, 705], "3464": 141, "0674": [141, 392], "0327": [141, 388], "1241": 141, "2632": 141, "7924": 141, "2759": 141, "2106": 141, "0077": 141, "8293": 141, "0619": 141, "0401": [141, 388], "9707": 141, "1035": 141, "0208": [141, 388], "7236": 141, "runner": [141, 387], "503": 141, "pred": 141, "self": 141, "enhanc": [142, 702], "basi": [142, 389, 705], "context": [142, 387, 484, 492, 500, 510, 519, 527], "mark": [142, 702], "surround": [142, 704, 757, 768, 783], "manner": 142, "join": [142, 703], "x4": 142, "x5": 142, "z1": [142, 757, 768], "z2": [142, 757, 768], "z3": 142, "submodel": 142, "asid": [142, 705], "quickstart": 142, "what": [142, 388], "unlik": [142, 172, 231, 385, 388, 481, 489, 497, 516, 524, 707], "initi": [142, 215, 387, 388, 699, 703, 704, 707, 766], "iv_r": 142, "readili": 142, "iv_res2": 142, "ols_r": [142, 144], "0659": 142, "0654": 142, "2004": 142, "7709": 142, "353": 142, "5252": 142, "0873": [142, 705], "8348": 142, "4498": 142, "453": [142, 388], "8892": 142, "1653": 142, "brief": [143, 391], "overview": [143, 391], "introductori": [143, 702], "book": [143, 391], "advanc": 143, "further": 143, "x_": [144, 224, 349, 385, 388, 392, 393, 395, 411, 486, 494, 502, 513, 521, 533, 534, 568, 569, 622, 623, 657, 658, 707, 752, 763, 778], "1i": [144, 349, 385, 707, 738, 746], "beta_1": [144, 705], "2i": [144, 349, 385, 707, 738, 746], "beta_2": [144, 349, 705], "z_": [144, 224, 385, 707, 738, 746, 763], "nu_i": 144, "k_1": 144, "k_2": 144, "neq": [144, 713, 716, 719], "p_2": 144, "project": [144, 259, 324, 342, 352, 385], "p_1": 144, "accept": [144, 388, 445, 757, 768, 783], "0459": 144, "0438": 144, "872": 144, "mon": [144, 394], "mar": 144, "52": [144, 387, 389, 703], "4912": 144, "4692": 144, "5719": 144, "5716": 144, "4108": 144, "6649": 144, "0198": [144, 392], "0485": [144, 388], "8434": 144, "0837": [144, 703], "1974": 144, "fuller": [144, 236, 240, 251], "user": [144, 703, 707], "matric": [144, 385, 740, 744, 750], "homoskedasticweightmatrix": 144, "heteroskedasticweightmatrix": 144, "kernelweightmatrix": 144, "within": [144, 387, 388, 389, 390, 392, 394, 479, 495, 529, 534, 556, 565, 569, 595, 619, 623, 645, 654, 658, 680], "onewayclusteredweightmatrix": 144, "studi": [144, 702], "andrew": [144, 163, 169, 195, 395, 411, 703, 719, 732, 746], "membership": [144, 199, 445, 453, 466, 858], "iq_band": 144, "ineffici": [144, 385, 392], "abov": [144, 705, 707], "tol": [144, 215, 755, 766, 781], "success": 144, "stop": [144, 696], "outer": [144, 215, 387, 766], "initial_weight": [144, 215, 766], "place": [144, 385, 388, 752, 763, 778], "dure": [144, 388], "ninstr": [145, 151, 157, 163, 185, 188, 189, 198, 201, 202, 203, 213, 214, 224, 225, 231, 236, 237, 248, 741, 759], "assign": 145, "ncluster": [145, 709], "xi_": [145, 393, 395, 411], "mathcal": [145, 385, 393, 403, 709], "_g": 145, "_0": [163, 411, 746], "_j": [163, 411, 746], "larger": [169, 215, 504], "involv": 169, "maxlag": [170, 171, 172], "6z_i": 171, "leq": 171, "truncat": 172, "pi": [172, 385], "w_0": 172, "sin": [172, 385], "co": [172, 385, 388, 703], "geq": [172, 385], "var_nam": [173, 445], "convert_dummi": [173, 445], "drop_first": [173, 445, 451], "abstract": [173, 445], "univari": 173, "wrap": 173, "xarrai": [173, 445], "flat": [173, 445], "view": [173, 178, 180, 445, 448, 450, 453, 456, 459, 463, 464, 466, 467, 468, 703, 873, 874, 879], "2d": [173, 178, 387, 453, 466], "ndim": [173, 445], "g_i": [183, 195, 738, 746], "w": [183, 186, 189, 195, 213, 214, 224, 231, 278, 324, 352, 385, 393, 541, 577, 630, 665, 707, 713, 716, 719, 738, 746, 763, 789, 802, 857], "_ig_i": [183, 738], "optimal_bw": [195, 746], "gamma_0": [195, 705], "gamma_j": 195, "nendog": [202, 210, 213, 221, 224, 233, 236, 244, 255, 284, 335, 371, 759], "vcv": [202, 213, 236], "bootstrap": [202, 203, 213, 214, 225, 236, 237, 248], "notnul": [202, 213, 224, 236, 247], "regressand": [203, 214, 225, 231, 237, 248], "scalar": [203, 237, 248, 385], "expos": [203, 214, 225, 237, 248, 393, 485, 493, 501, 511, 520, 528, 869], "facilit": [203, 214, 225, 237, 248, 388, 703], "ivresult": [204, 238, 249], "olsresult": [204, 215, 226, 238, 249, 260], "explicitli": [206, 217, 228, 240, 251, 389, 394, 481, 486, 489, 497, 516, 524], "eval_env": [210, 221, 233, 244, 255, 761, 771, 787], "depth": [210, 221, 233, 244, 255, 484, 492, 500, 510, 519, 527, 761, 771, 787], "suppli": [210, 221, 233, 244, 255, 484, 492, 500, 510, 519, 527, 761, 771, 787], "weight_config": [213, 217, 224, 228, 262, 763, 768, 789], "zw": [213, 707, 713, 716, 719, 763], "criteria": 215, "ivgmmcovari": [215, 226], "ivgmmresult": [215, 226], "most": [224, 385, 387, 388, 392, 393, 481, 489, 495, 497, 502, 506, 516, 524, 703, 707], "circumst": [224, 388, 706], "min_": [224, 385, 707], "y_": [224, 385, 388, 392, 393, 486, 494, 502, 513, 521, 533, 534, 568, 569, 622, 623, 657, 658, 707, 752, 763, 778, 813, 847], "target": [231, 773, 774, 775], "long": [231, 393, 703, 707, 790, 803, 825, 837], "tradit": 231, "explicit": [231, 385], "unmodifi": [236, 240, 251], "m_": [236, 342, 385], "p_": [236, 324, 352, 385, 707], "part": [236, 389], "n_": [236, 263, 278, 313, 314, 315, 342, 348, 352, 385, 393, 802], "neeed": 247, "linear_model": [247, 701], "diagnost": [258, 707], "post": [258, 259], "otherwis": [259, 704, 875], "pval": [259, 859, 864], "dist": 259, "respect": [259, 300, 384, 393, 506, 605, 691, 817, 851], "weight_matrix": 262, "quantiti": [263, 388, 392], "j_e": 263, "w_e": 263, "wlog": 263, "denot": [263, 486, 707, 752, 763, 778], "j_c": 263, "whose": [263, 388], "firststageresult": [273, 326], "diagnos": [273, 326], "suffici": [278, 313, 315, 802], "sqrt": [278, 385, 393, 703, 707, 802], "filter": [284, 335, 371, 549, 587, 638, 673, 809, 843], "star": [300, 384, 605, 691], "descript": [300, 301, 605, 606, 757, 768, 783], "estimator_method": [300, 605], "anderson_rubin": 312, "anderson": [312, 313, 385], "rubin": [312, 313, 385], "basmann": [312, 315, 385], "basmann_f": 312, "sargan": [312, 314, 385], "ln": [313, 385, 703, 705, 707], "onto": [324, 352], "_e": [324, 352], "_c": [324, 352], "var": [324, 352, 445, 447, 458, 703, 707], "leav": [324, 352, 385, 703], "annihil": [342, 385], "gamma_1": [348, 350, 705], "gamma_q": 348, "_1": 350, "gamma_p": 350, "x_j": 350, "2002": [350, 702, 703, 704, 705], "eq": [350, 703], "_ol": 353, "ivmodelcomparison": 384, "recov": 385, "k_": 385, "written": 385, "underset": 385, "textrm": [385, 393], "underbrac": 385, "gamma_": [385, 393], "u_": 385, "compactli": [385, 752, 763, 778], "implicit": [385, 478, 482, 486, 490, 494, 498, 502, 507, 513, 517, 521, 525], "partit": 385, "mathrm": [385, 707], "eig": 385, "eigenvalu": 385, "zwz": 385, "let": 385, "rss": 385, "mss": 385, "tss": 385, "unless": 385, "dot": [385, 707, 752, 763, 778], "asymptot": [385, 392, 707, 790, 803, 825, 837, 856, 857], "xi": [385, 395, 411, 707], "member": [385, 392, 703], "rescal": 385, "e_": 385, "0s": 385, "h_": 385, "pr": 385, "phi": 385, "2t_": 385, "t_": [385, 393], "cdot": 385, "cdf": 385, "ci_": 385, "pm": 385, "q_": 385, "quantil": 385, "critic": [385, 864, 865], "wsw": 385, "collaps": 385, "replac": [385, 393, 395, 411, 429, 437, 707], "notabl": [385, 394], "overlin": 385, "nu": 385, "minu": [385, 537, 572, 626, 661], "magnitud": 385, "Then": [385, 393], "nr": [385, 388, 392, 563, 603, 652, 689], "andersen": 385, "basman": 385, "haussman": 385, "wh": 385, "k1": 385, "k2": [385, 707], "j_": 385, "ensur": [385, 481, 489, 497, 502, 506, 513, 516, 524, 703, 704, 706], "r2": [385, 703, 789, 813, 817, 824, 847, 851], "under": [385, 392, 540, 575, 576, 629, 664], "unexplain": 385, "On": [385, 393], "wors": 385, "w_": [385, 393], "6z_": 385, "leq0": 385, "5m": 385, "geq1": 385, "todo": [385, 703], "execut": [385, 399, 407, 415, 425, 433, 441, 789, 801, 824, 836], "minimum": 385, "reparameter": 385, "somewhat": [385, 392], "obviou": 385, "driven": 385, "baltagi": [385, 393, 702], "baumet": [385, 702], "camet": [385, 702], "camtri05": [385, 702], "camtri09": [385, 702], "green": [385, 702, 703, 707, 790, 803, 825, 837], "newwes94": [385, 702], "wool10": [385, 702], "wool12": [385, 702], "primari": 387, "3d": 387, "job": 387, "47000000": 387, "35000": 387, "43000000": 387, "37000": 387, "49000000": 387, "39000": 387, "410440": 387, "1560000": 387, "10500": 387, "1970000": 387, "11000": 387, "463100": 387, "270027": 387, "088949": 387, "518670": 387, "063013": 387, "130621": 387, "571320": 387, "259130": 387, "080043": 387, "233347": 387, "305651": 387, "055570": 387, "946565": 387, "165385": 387, "052644": 387, "198597": 387, "047832": 387, "046520": 387, "mi_data": 387, "referenc": 387, "represent": [387, 392, 449], "0528": [387, 703], "0379": 387, "140": [387, 703], "overal": [387, 388, 389, 392, 394, 529, 533, 555, 565, 568, 594, 619, 622, 644, 654, 657, 679, 703, 704, 705, 706, 813, 817, 847, 851], "90": [387, 703, 705], "459": [387, 388], "0751": 387, "48": [387, 392, 394, 703, 705], "0267": [387, 394], "avg": [387, 388, 389, 392, 394], "ob": [387, 388, 389, 392, 393, 394], "9167": 387, "0054": [387, 394, 703], "poolabl": [387, 388, 389, 392, 394], "094": 387, "1184": 387, "missingvaluewarn": 387, "super": 387, "__init__": 387, "check_rank": [387, 478, 481, 486, 489, 494, 497, 502, 506, 513, 516, 521, 524], "np_data": 387, "asarrai": 387, "np_lscrap": 387, "get_loc": 387, "np_hrsemp": 387, "nentiti": [387, 445, 699], "ntime": [387, 699], "reshap": 387, "entrant": 387, "schedul": 387, "remain": [387, 393], "viabl": 387, "notat": [387, 389, 703], "principl": 387, "da": 387, "to_xarrai": 387, "keysview": [387, 874], "coordin": 387, "int64": [387, 388, 394], "410495": 387, "410500": 387, "419482": 387, "419483": 387, "08895": 387, "1306": 387, "1942": [387, 388], "1525": 387, "259": [387, 703], "68": [387, 388], "741": [387, 705], "798": 387, "05557": 387, "05264": 387, "06063": 387, "05716": 387, "947": 387, "1986": [387, 388], "101": [387, 703], "165": [387, 394], "04783": 387, "611": 387, "you": 387, "manual": [387, 702, 703], "year_str": 387, "reset_index": [387, 394], "year_cat": 387, "053435": 387, "252033": 387, "1985": [387, 388], "1240": 387, "3496": 387, "1591": 387, "1146": 387, "3888": 387, "1684": 387, "3868": 387, "0685": [387, 703], "4620": [387, 388], "1176": [387, 703], "9297": 387, "6957": 387, "2284": 387, "649": 387, "vella": [388, 703, 704], "verbeek": 388, "1998": 388, "dynam": 388, "young": 388, "men": [388, 392], "183": [388, 705], "1980": 388, "multiindex": [388, 389, 394, 445, 456, 470], "understood": 388, "wage_panel": [388, 392, 563, 603, 652, 689], "occup": 388, "2672": 388, "197540": 388, "1981": 388, "2320": 388, "853060": 388, "1982": 388, "2940": [388, 705], "344462": 388, "1983": 388, "2960": 388, "433213": 388, "1984": 388, "3071": 388, "568125": 388, "plain": 388, "understand": 388, "exog_var": [388, 563, 603, 652, 689], "pooled_r": [388, 703], "1893": 388, "2066": 388, "4360": [388, 392], "1692": 388, "2982": 388, "72": [388, 389, 394, 703], "545": [388, 392], "4345": 388, "0921": 388, "0783": 388, "1761": 388, "2396": 388, "2455": 388, "1392": 388, "0236": 388, "9049": 388, "1855": 388, "0930": 388, "0160": [388, 703], "7703": 388, "4412": 388, "0248": [388, 703], "0568": 388, "0672": 388, "9095": 388, "0404": 388, "0941": 388, "9413": [388, 703], "0157": 388, "8997": 388, "0775": [388, 703], "1390": 388, "0052": [388, 703], "442": 388, "0811": [388, 703], "1016": 388, "1825": [388, 389], "0172": [388, 703], "635": 388, "1488": 388, "2161": 388, "0583": 388, "0304": 388, "9214": 388, "0548": [388, 703], "1178": [388, 703], "0628": 388, "0332": 388, "8900": 388, "0588": 388, "0620": 388, "0367": 388, "6915": 388, "0099": [388, 703], "1339": 388, "0905": [388, 704], "2566": 388, "1691": 388, "1092": 388, "0434": 388, "5200": 388, "0118": 388, "1420": 388, "0464": 388, "0580": 388, "2330": 388, "0494": [388, 703], "5165": 388, "0769": 388, "2707": 388, "consid": [388, 705, 706, 707], "quasi": [388, 392, 393], "re_r": 388, "1806": 388, "1853": 388, "1799": 388, "1828": 388, "1622": 388, "409": 388, "0234": 388, "1514": 388, "1546": 388, "8771": 388, "2735": 388, "3203": 388, "1394": 388, "0480": 388, "9054": [388, 394], "0453": [388, 703], "5078": 388, "6116": 388, "0622": 388, "1058": 388, "0154": 388, "0756": 388, "1361": 388, "0047": [388, 704], "8623": [388, 705], "0061": [388, 704], "0638": 388, "0168": 388, "8035": 388, "0309": [388, 703], "0967": [388, 705], "0919": [388, 703], "0107": 388, "5744": 388, "1129": 388, "1059": 388, "9289": 388, "1409": [388, 703], "6362": 388, "1019": 388, "0889": 388, "0324": 388, "9519": 388, "3412": 388, "0944": 388, "0202": 388, "0417": 388, "4840": 388, "6284": 388, "0616": 388, "1020": [388, 703], "0430": 388, "0515": 388, "8350": 388, "4037": 388, "1440": 388, "0577": [388, 703], "0615": 388, "9383": 388, "3482": 388, "0629": 388, "1782": 388, "2834": 388, "1994": [388, 393, 702], "2321": [388, 703], "1348": 388, "0817": 388, "6504": 388, "0989": 388, "0253": 388, "2950": [388, 703], "trend": 388, "matter": 388, "access": [388, 703], "variance_decomposit": [388, 565, 654], "106946": 388, "123324": 388, "percent": 388, "464438": 388, "decomposit": [388, 565, 602, 654, 688], "theta_i": 388, "unbalanc": [388, 393, 479], "balanc": [388, 479], "645059": 388, "110": 388, "broadli": 388, "be_r": 388, "2155": [388, 704], "1141": 388, "1686": 388, "194": 388, "633": 388, "538": 388, "2836": 388, "1784": 388, "5897": 388, "1125": 388, "0668": 388, "6340": 388, "1414": 388, "0489": 388, "8915": 388, "2375": 388, "2355": 388, "0737": 388, "0938": 388, "4538": 388, "0501": 388, "0412": 388, "4346": 388, "0606": [388, 703], "2226": 388, "5159": 388, "0702": 388, "1123": 388, "2587": 388, "0460": 388, "6214": 388, "1683": 388, "3491": 388, "reweight": [388, 393, 479], "BE": 388, "consider": 388, "slower": 388, "wise": [388, 393, 532, 534, 567, 569, 621, 623, 656, 658], "incorpor": 388, "fe_r": [388, 563, 603, 652, 689], "0807": 388, "1324": [388, 389, 394], "851": 388, "3805": 388, "4260": 388, "0183": 388, "748": 388, "3901": 388, "3612": [388, 704], "0800": 388, "0193": [388, 704], "1430": [388, 392, 705], "0467": 388, "5494": 388, "0108": [388, 703], "0826": 388, "1512": 388, "0219": [388, 389], "8883": 388, "1082": [388, 703], "2530": 388, "0244": 388, "360": 388, "2051": 388, "3008": 388, "3544": 388, "121": 388, "2971": 388, "4118": 388, "4901": 388, "529": [388, 705], "4191": 388, "5611": 388, "6175": 388, "0452": [388, 703], "648": 388, "5288": 388, "7062": 388, "7655": 388, "0561": 388, "6555": 388, "8755": 388, "9250": 388, "0688": 388, "450": 388, "7902": 388, "0599": 388, "1568": 388, "544": [388, 392], "wherea": 388, "fe_te_r": 388, "0216": [388, 704], "4809": 388, "2253": 388, "0378": 388, "430": 388, "7964": 388, "9448": 388, "551": 388, "use_lsdv": [388, 504], "auto_df": [388, 390, 504], "instruct": 388, "treatment": [388, 504], "lost": 388, "count_effect": [388, 390, 504], "other_effect": [388, 502, 506, 692, 699], "engog": 388, "below": [388, 393, 703], "we": 388, "reproduc": 388, "paneldata": [388, 481, 485, 489, 493, 497, 501, 506, 511, 516, 520, 524, 528], "time_id": [388, 395, 403, 411, 429, 437, 445], "fe_oe_r": 388, "addition": [388, 502], "look": [388, 703], "soak": 388, "challeng": 388, "fd_re": 388, "0268": 388, "5491": 388, "3815": 388, "5328": 388, "2305": 388, "208": 388, "3811": 388, "0196": 388, "9096": 388, "0773": 388, "1542": 388, "8005": 388, "0197": 388, "1767": 388, "0296": 388, "0813": 388, "0229": 388, "6633": 388, "0963": [388, 703], "certain": [388, 752, 778], "cluster_ent": [388, 495, 504, 506, 514, 522], "cluster_tim": [388, 504, 514, 522], "clust_ent": 388, "clust_entity_tim": 388, "board": 388, "suggest": [388, 707], "decreas": 388, "address": [388, 392], "1866": 388, "1679": 388, "2027": 388, "142": 388, "0347": 388, "5360": 388, "2892": 388, "3145": 388, "1438": 388, "9045": 388, "8727": 388, "7952": 388, "4008": 388, "4428": 388, "0892": 388, "7881": 388, "1728": 388, "3223": 388, "1934": 388, "2747": 388, "1571": 388, "1077": [388, 703], "0525": [388, 703], "8989": 388, "0994": 388, "626": 388, "802": 388, "296": 388, "1801": 388, "087": 388, "5343": [388, 703], "6732": 388, "reliabl": 388, "theori": [388, 392], "value_count": 388, "881": [388, 389], "509": [388, 389], "486": 388, "401": 388, "399": [388, 705], "233": [388, 703], "2989": 388, "4352": 388, "116": 388, "1479": 388, "2346": 388, "8145": 388, "3247": 388, "2553": 388, "0297": [388, 389], "8469": [388, 703], "2020": 388, "0857": [388, 703], "0266": [388, 703, 705], "5892": 388, "5557": 388, "0679": [388, 703], "6513": 388, "1155": 388, "2442": 388, "0139": [388, 703], "7322": 388, "0804": [388, 703], "1350": 388, "8846": 388, "1213": 388, "6323": 388, "1174": 388, "2428": 388, "caveat": 389, "grunfeld": [389, 394], "corpor": 389, "illustr": [389, 703], "stock": 389, "capit": [389, 394, 703], "load_panda": [389, 394], "motor": [389, 394], "1935": 389, "317": 389, "3078": 389, "1936": 389, "391": 389, "4661": [389, 703], "1937": 389, "410": 389, "5387": [389, 703], "156": 389, "1938": 389, "257": 389, "2792": 389, "209": 389, "1939": 389, "330": [389, 703], "4313": 389, "203": 389, "entityeffect": [389, 392, 506], "impos": [389, 393, 703, 706, 773], "grand": [389, 393], "7667": [389, 394], "8223": [389, 394, 703], "220": [389, 394, 706], "8132": [389, 394], "1167": [389, 394], "340": [389, 394, 703], "207": [389, 394], "3100": [389, 394], "0165": [389, 394], "744": [389, 394], "2774": [389, 394], "3426": [389, 394], "1101": [389, 394, 703], "7461": [389, 394], "0879": [389, 394], "8193": 389, "8071": 389, "272": 389, "891": 389, "0750": [389, 704], "76": 389, "743": 389, "800": 389, "timeeffect": [389, 506], "7253": 389, "7944": 389, "7566": 389, "7856": 389, "1153": 389, "248": 389, "188": 389, "394": 389, "732": [389, 705], "6861": 389, "97": [389, 394], "278": 389, "3514": 389, "0210": [389, 704], "696": 389, "3099": 389, "3930": 389, "0912": 389, "1422": 389, "476": 389, "straight": 389, "forward": 389, "8644": 389, "4195": 389, "7616": 389, "997": [389, 703, 705], "3825": 389, "444": 389, "8597": 389, "85": [389, 705], "1746": [389, 703], "8692": 389, "3730": 389, "4323": 389, "0269": 389, "0726": 389, "4287": 389, "8643": 389, "7539": [389, 705], "8461": 389, "1071": 389, "679": 389, "2786": 389, "1900": 389, "3673": 389, "0891": 389, "348": [389, 703], "0736": 389, "1045": 389, "8179": 389, "8426": 389, "7357": [389, 704], "1301": 389, "487": 389, "4134": [389, 703], "5654": 389, "992": 389, "828": 389, "2275": 389, "0242": 389, "3904": [389, 704], "1145": 389, "753": 389, "1037": 389, "1254": [389, 706], "detect": 390, "design": [390, 392, 393], "affin": 390, "aggreg": [390, 703], "plm": [391, 394], "analysi": [391, 394, 702, 703, 790, 803, 825, 837], "countri": [392, 704], "diverg": 392, "setup": 392, "techniqu": 392, "presenc": 392, "man": 392, "1365": 392, "wed": 392, "apr": [392, 394], "0270": 392, "1439": 392, "200": [392, 703], "87": 392, "3812": 392, "3953": 392, "113": 392, "3712": 392, "4194": 392, "560": 392, "0041": 392, "1073": 392, "0182": 392, "8992": 392, "0717": [392, 703], "0828": 392, "1864": 392, "0440": 392, "1215": 392, "3360": 392, "nt": 393, "want": 393, "lsdv": [393, 394, 504], "d_": 393, "multipli": 393, "theta_": 393, "approx1": 393, "approx0": 393, "rss_": [393, 575], "propto": 393, "imbalanc": 393, "root": [393, 449], "xx": [393, 395, 403, 411, 429, 437], "ti": 393, "ii": [393, 707, 817, 851], "belong": 393, "agre": 393, "prefix": 393, "texttt": 393, "_squar": 393, "iw": 393, "ddot": [393, 707, 752, 763, 778], "reflect": 393, "rho_": 393, "deviat": 393, "o": 393, "few": 394, "liner": 394, "quickli": 394, "slow": 394, "moder": 394, "nor": 394, "them": [394, 703], "rsquared_inclus": [394, 565], "inconsist": 394, "canon": 394, "etdata": 394, "838": 394, "paneleffectsresult": [394, 504], "0x2aeec70b7f0": 394, "tedata": 394, "quit": 394, "fe_b": 394, "atlant": 394, "refin": 394, "chrysler": 394, "diamond": 394, "electr": 394, "goodyear": 394, "ibm": 394, "steel": 394, "oil": 394, "westinghous": 394, "9461": 394, "9429": 394, "rmse": 394, "2995": 394, "302": 394, "6388": 394, "coef": 394, "0880": 394, "1323": 394, "2776": [394, 703, 705], "3425": 394, "94": 394, "1637": 394, "127": 394, "6652": 394, "60": [394, 705], "3834": 394, "3382": 394, "6771": 394, "2138": 394, "7520": 394, "9436": 394, "88": [394, 705], "3806": 394, "2393": 394, "4613": 394, "264": [394, 703], "8953": 394, "0871": [394, 705], "7209": 394, "2801": 394, "3043": 394, "9080": 394, "66": [394, 705], "6363": [394, 703], "3788": 394, "98": 394, "7389": 394, "5338": 394, "5820": 394, "3792": 394, "8749": 394, "6852": 394, "5212": 394, "122": [394, 705], "4829": 394, "9595": 394, "6023": 394, "173": [394, 703], "3636": 394, "9660": 394, "3575": 394, "81": [394, 703], "9683": 394, "3092": 394, "0339": 394, "8942": 394, "0424": 394, "5782": 394, "2978": 394, "7219": 394, "5655": [394, 703], "entity_id": [395, 403, 411, 429, 437, 445], "extra_df": [395, 403, 411, 429, 437], "consum": [395, 403, 411, 429, 437], "irrespect": [395, 403, 411, 429, 437], "xi_t": [395, 411], "s_i": 395, "ij": [395, 703, 707, 763, 790, 813, 825, 847], "i0": 395, "group_debia": [403, 404, 709], "roger": [403, 755, 781], "intersect": 403, "driscol": [411, 495, 504, 514, 522], "kraai": [411, 495, 504, 514, 522], "n_t": 411, "_t": [411, 486], "disabl": 419, "cast": 445, "typeerror": 445, "valueerror": [445, 696], "wrong": 445, "values2d": 445, "values3d": 445, "deep": 446, "return_panel": 449, "low_memori": [449, 504], "float64arrai": [449, 741, 751], "boolean": [450, 495, 504, 514, 522], "groupbi": [455, 703], "_panel": 463, "mi": [470, 703], "legaci": 470, "shim": 470, "logic": 470, "major_axi": [470, 471], "minor_axi": [470, 471], "proport": [478, 481, 486, 489, 494, 497, 502, 506, 513, 516, 521, 524, 703, 704], "not_nul": [478, 486, 494, 502, 513, 521], "coerc": [479, 481, 489, 495, 497, 504, 506, 514, 516, 522, 524], "conform": [481, 489, 497, 506, 516, 524], "numer": [481, 489, 497, 502, 506, 513, 516, 524, 864], "unstabl": [481, 489, 497, 502, 506, 513, 516, 524], "full": [481, 489, 497, 502, 506, 513, 516, 524, 703, 707, 774], "generate_panel_data": [481, 489, 497, 506, 516, 524], "panel_data": [481, 489, 497, 506, 516, 524], "reformat": [485, 493, 501, 511, 520, 528], "made": [486, 541, 577, 630, 665, 705], "scenario": 495, "gamma_t": 502, "gamma_i": 502, "arbitrari": [502, 703, 707, 738], "u_i": 521, "small_sampl": 522, "randomeffectsresult": 522, "entity_info": [529, 565, 619, 654], "estimated_effect": [529, 565, 619, 654], "f_statistic_robust": [529, 565, 619, 654], "loglik": [529, 565, 619, 654], "rsquared_between": [529, 565, 605, 619, 654], "rsquared_overal": [529, 565, 605, 619, 654], "rsquared_within": [529, 565, 605, 619, 654], "time_info": [529, 565, 619, 654], "plu": [536, 571, 625, 660], "fill": [539, 574, 628, 663], "rss_r": [540, 576, 629, 664], "rss_u": [540, 576, 629, 664], "df_u": [540, 576, 629, 664], "unrestrict": [540, 576, 629, 664, 707], "f_pool": 565, "included_effect": 565, "other_info": 565, "df_": 575, "panelmodelcomparison": 691, "namedtupl": [692, 699], "alia": [692, 693, 695, 697, 698], "field": [692, 693, 695, 697, 698], "occurr": 694, "sy": 696, "maxsiz": 696, "971": 699, "rng": 699, "explanatori": 699, "sequenc": 699, "seed": 699, "panelmodeldata": 699, "deriv": 699, "intention": 701, "intent": 701, "multivari": [701, 759, 785], "badi": 702, "wilei": 702, "son": 702, "2008": 702, "svetlana": 702, "spuriou": 702, "paper": 702, "baum": 702, "christoph": 702, "schaffer": 702, "steven": 702, "stillman": 702, "routin": 702, "2007": 702, "465": 702, "506": 702, "colin": 702, "jonah": 702, "gelbach": 702, "dougla": 702, "miller": 702, "multiwai": 702, "2011": 702, "238": 702, "249": 702, "pravin": 702, "cambridg": 702, "2005": 702, "adrian": 702, "vol": 702, "station": 702, "tx": [702, 703], "2009": 702, "revis": 702, "edit": [702, 703], "princeton": 702, "william": [702, 790, 803, 825, 837], "pearson": [702, 790, 803, 825, 837], "2003": [702, 790, 803, 825, 837], "henningsen": [702, 707], "hamann": 702, "systemfit": 702, "softwar": 702, "doi": 702, "dx": 702, "org": 702, "18637": 702, "jss": 702, "v023": 702, "i04": 702, "jagannathan": 702, "ravi": 702, "georgio": 702, "skoulaki": 702, "zhenyu": 702, "wang": 702, "470": 702, "481": 702, "whitnei": 702, "kenneth": 702, "631": 702, "statacorp": 702, "2013": 702, "mit": 702, "2010": [702, 703], "modern": 702, "western": 702, "pub": 702, "2012": 702, "compris": 703, "omega": [703, 707, 709, 713, 716, 719, 724, 728, 732, 752, 778, 817, 851], "epsilon_j": 703, "benefici": 703, "munnel": 703, "gdp": [703, 704], "unemploy": 703, "gf": 703, "al": 703, "fl": 703, "la": 703, "ms": 703, "mw": 703, "il": 703, "IN": 703, "ky": 703, "mn": 703, "oh": 703, "wi": 703, "ma": 703, "de": 703, "md": 703, "nj": 703, "ny": 703, "pa": 703, "va": 703, "mt": 703, "nd": 703, "sd": 703, "wy": 703, "ne": 703, "ct": 703, "me": 703, "nh": 703, "ri": 703, "vt": 703, "ga": 703, "nc": 703, "sc": 703, "tn": 703, "wv": 703, "sw": 703, "az": 703, "nv": 703, "nm": 703, "ut": 703, "cn": 703, "ak": 703, "ia": 703, "ks": 703, "mo": 703, "ok": 703, "wc": 703, "ca": 703, "OR": 703, "def": 703, "map_region": 703, "st_abb": 703, "map": 703, "total_emp": 703, "emp_shar": 703, "weighed_unemp": 703, "unemp": 703, "agg_data": 703, "gsp": 703, "pc": 703, "hwy": 703, "water": 703, "complex": 703, "ordereddictionari": 703, "mod_data": 703, "region_data": 703, "lngsp": 703, "lnpc": 703, "lnhwy": 703, "lnwater": 703, "lnutil": 703, "lnemp": 703, "gain": [703, 706, 707, 790, 803, 825, 837], "inspect": 703, "diag": 703, "pyplot": 703, "plt": 703, "vmax": 703, "style": 703, "3f": 703, "nbsp": 703, "447": 703, "547": 703, "525": 703, "425": 703, "763": 703, "167": 703, "325": 703, "697": 703, "489": 703, "132": 703, "565": 703, "537": 703, "343": 703, "130": 703, "505": 703, "574": 703, "037": 703, "241": 703, "322": 703, "351": 703, "058": 703, "091": 703, "783": 703, "269": 703, "388": 703, "713": 703, "366": 703, "350": 703, "298": 703, "seen": 703, "ipython": 703, "imag": 703, "display_png": 703, "system_correct": 703, "png": 703, "as_text": 703, "split": 703, "9937": 703, "9988": 703, "judg": [703, 704, 705, 813, 817, 847, 851], "dhryme": [703, 704, 705, 817, 851], "num": [703, 704, 705, 706], "310": 703, "4680": 703, "723": 703, "1424": 703, "4117": 703, "1580": 703, "4800": 703, "0780": 703, "8856": 703, "5169": 703, "6480": 703, "8987": 703, "8725": 703, "1785": 703, "0607": 703, "9399": 703, "0595": [703, 705], "2975": 703, "1898": 703, "3744": 703, "1774": 703, "4559": 703, "9237": 703, "9533": 703, "0847": 703, "252": 703, "1193": [703, 705], "5007": 703, "1334": 703, "0072": 703, "9979": 703, "1273": 703, "0389": 703, "0766": 703, "0858": 703, "8929": 703, "3719": 703, "0916": 703, "2449": 703, "1312": 703, "0258": 703, "3050": 703, "3819": 703, "1195": 703, "0611": [703, 705], "2240": 703, "0261": 703, "2558": 703, "0161": 703, "5216": 703, "1107": 703, "7102": 703, "3045": 703, "7386": 703, "3439": 703, "3723": 703, "7051": 703, "0156": 703, "equation_label": [703, 704, 789, 824], "coast": 703, "9900": 703, "2862": 703, "9602": 703, "5675": 703, "5704": 703, "8100": 703, "7303": 703, "1699": 703, "8500": 703, "0643": 703, "3500": 703, "1317": 703, "1138": 703, "1569": 703, "3547": [703, 704], "3470": 703, "1733": 703, "0020": [703, 705], "6867": 703, "0895": [703, 704], "1928": 703, "8471": 703, "8204": 703, "0696": 703, "1708": 703, "7349": 703, "4043": 703, "4180": 703, "append": 703, "ipykernel_2412": 703, "3962891974": 703, "886": 703, "178": 703, "190": 703, "953": 703, "003": 703, "083": 703, "077": 703, "136": [703, 705], "522": 703, "539": 703, "016": 703, "960": 703, "170": [703, 705], "347": 703, "090": 703, "070": 703, "006": 703, "463": 703, "115": 703, "180": 703, "262": 703, "079": 703, "001": 703, "294": 703, "118": [703, 705], "557": 703, "494": 703, "020": 703, "616": [703, 704, 705, 706], "311": 703, "060": 703, "659": 703, "018": 703, "162": 703, "063": 703, "641": 703, "081": 703, "281": 703, "620": 703, "008": 703, "096": 703, "612": 703, "694": 703, "062": 703, "031": 703, "405": 703, "295": 703, "321": 703, "029": 703, "stronger": 703, "violat": 703, "seem": 703, "2443339187": 703, "567": 703, "002": 703, "358": 703, "805": 703, "007": 703, "028": 703, "164": 703, "075": 703, "169": [703, 705], "637": 703, "362": 703, "017": 703, "590": 703, "174": 703, "226": 703, "917": 703, "994": 703, "378": 703, "153": 703, "306": 703, "533": 703, "344": 703, "005": 703, "999": 703, "969": [703, 705], "380": 703, "855": 703, "778": 703, "673": 703, "026": 703, "986": 703, "927": 703, "043": 703, "773": 703, "111": [703, 705], "604": 703, "717": 703, "356": 703, "621": 703, "386": 703, "546": 703, "475": 703, "995": 703, "se": 703, "3606921718": 703, "002124": 703, "301235": 703, "200966": 703, "142355": 703, "163546": 703, "165995": 703, "076637": 703, "085831": 703, "294855": 703, "205417": 703, "169950": 703, "091865": 703, "152601": 703, "084031": 703, "114834": 703, "048489": 703, "020407": 703, "285621": 703, "118316": 703, "131329": 703, "377570": 703, "167307": 703, "310861": 703, "080893": 703, "042818": 703, "279472": 703, "063212": 703, "104344": 703, "233403": 703, "206248": 703, "095886": 703, "101564": 703, "385885": 703, "211083": 703, "294570": 703, "090104": 703, "fring": [703, 704, 706], "benefit": [703, 704, 706], "censor": [703, 704], "fdata": 703, "441": 703, "457": 703, "annearn": 703, "hrearn": [703, 704, 706], "nrtheast": [703, 704], "northeast": 703, "nrthcen": [703, 704], "north": 703, "central": 703, "offic": 703, "annhr": 703, "ind1": 703, "ind2": 703, "ind3": 703, "ind4": 703, "ind5": 703, "ind6": 703, "ind7": 703, "ind8": 703, "ind9": 703, "vacdai": 703, "vac": 703, "sicklv": 703, "sick": 703, "pension": 703, "annben": 703, "hrben": [703, 704, 706], "annhrssq": 703, "beratio": 703, "lannhr": 703, "tenuresq": 703, "lannearn": 703, "peratio": 703, "vserat": 703, "bring": 703, "fmod_data": 703, "fmod": 703, "2087": 703, "2926": 703, "4822": 703, "6321": 703, "2153": 703, "1658": 703, "2502": 703, "4588": 703, "0684": 703, "7085": 703, "3248": 703, "5929": 703, "0758": 703, "0567": 703, "3367": 703, "1813": 703, "1870": 703, "4274": 703, "0829": 703, "3276": 703, "1843": [703, 704], "5640": 703, "8080": 703, "4035": 703, "0026": 703, "5988": 703, "4566": 703, "5459": 703, "8365": 703, "4029": 703, "5265": 703, "6132": 703, "1508": 703, "5993": 703, "9201": 703, "0239": 703, "5501": 703, "1565": 703, "2475": [703, 705], "7145": 703, "6424": 703, "5540": 703, "1202": [703, 705], "1678": 703, "4526": 703, "6054": 703, "8844": 703, "0458": 703, "3275": 703, "7847": 703, "3938": 703, "5322": 703, "5565": 703, "8897": 703, "1453": 703, "1225": 703, "6049": 703, "0768": 703, "0082": 703, "3896": 703, "0608": 703, "3259": 703, "0093": [703, 705], "3965": 703, "0536": 703, "4011": 703, "0730": 703, "3659": 703, "0482": [703, 704], "5839": 703, "2713": 703, "4605": 703, "0227": 703, "0653": 703, "3476": 703, "7282": 703, "1506": 703, "1052": 703, "7918": 703, "4285": 703, "1972": 703, "0380": 703, "5776": 703, "5635": 703, "1669": 703, "0909": 703, "0579": [703, 704], "2418": 703, "0390": 703, "1547": 703, "0902": 703, "2453": 703, "2130": 703, "0517": 703, "2683": 703, "0471": 703, "6985": 703, "3606": 703, "though": 703, "typic": 703, "exog_earn": 703, "exog_ben": 703, "1685": 703, "2762": 703, "4504": 703, "5240": 703, "3246": 703, "0201": 703, "6520": 703, "3959": 703, "5000": 703, "2987": 703, "3657": 703, "6342": 703, "0212": 703, "0522": 703, "4058": 703, "6849": 703, "1234": 703, "1043": 703, "3928": 703, "8116": 703, "0049": 703, "3345": 703, "8741": 703, "4305": 703, "2411": 703, "2146": [703, 704], "3780": 703, "3095": [703, 705], "1320": 703, "5845": 703, "9368": 703, "8231": 703, "0535": 703, "5927": 703, "0791": 703, "8927": 703, "0948": 703, "9114": 703, "0130": 703, "2409": 703, "6275": 703, "3766": 703, "9259": 703, "2835": 703, "4698": 703, "2141": 703, "0433": 703, "1292": 703, "2990": 703, "via": 703, "fmod_r": 703, "2749": 703, "4532": 703, "5147": 703, "3161": 703, "0206": 703, "6428": 703, "3867": 703, "5001": 703, "3004": 703, "3658": 703, "0211": 703, "4044": 703, "6859": 703, "1233": 703, "8760": 703, "8115": 703, "5314": 703, "2342": 703, "2171": 703, "3752": 703, "3124": 703, "1191": 703, "9145": 703, "0556": 703, "2648": 703, "9947": 703, "0527": 703, "5919": 703, "0792": 703, "9004": 703, "0635": 703, "9213": 703, "8528": 703, "0492": [703, 704], "2189": 703, "0307": 703, "0677": 703, "6025": 703, "3771": 703, "9364": 703, "8627": 703, "1258": 703, "2956": 703, "fres_het": 703, "8703": 703, "9002": 703, "2297": 703, "8183": 703, "0809": 703, "3413": 703, "6586": 703, "2270": 703, "9257": 703, "5507": 703, "5819": 703, "0083": 703, "0148": 703, "2857": 703, "8647": 703, "5443": 703, "6644": 703, "5273": 703, "3110": 703, "5678": 703, "4992": 703, "4921": 703, "3002": 703, "1674": 703, "0966": 703, "6087": 703, "6111": 703, "7768": 703, "0632": 703, "0949": 703, "0376": 703, "4121": 703, "0514": 703, "3342": 703, "2760": 703, "4773": 703, "0397": [703, 705], "3975": 703, "1363": [703, 705], "2918": 703, "hac_r": 703, "0048": 703, "5120": 703, "0120": [703, 705], "4933": 703, "5547": 703, "1391": 703, "3093": 703, "6907": 703, "0925": 703, "9263": 703, "4694": 703, "4270": 703, "5486": 703, "5833": 703, "2637": 703, "5875": 703, "6211": 703, "2657": 703, "4750": 703, "4065": 703, "4813": 703, "3520": 703, "0187": 703, "1887": 703, "0753": 703, "1344": 703, "1228": 703, "0866": [703, 705], "5596": 703, "0976": 703, "0064": 703, "0386": 703, "9026": 703, "5160": 703, "0318": 703, "0669": 703, "9161": 703, "0705": 703, "3407": [703, 706], "2384": 703, "5148": 703, "7117": 703, "1010": 703, "3271": 703, "enter": 703, "983476381": 703, "28390328": 703, "23829810": 703, "random_clust": 703, "51": [703, 705], "clustered_r": 703, "8501": 703, "9692": 703, "1901": 703, "8579": 703, "3424": 703, "6576": 703, "2285": [703, 704], "0926": 703, "9262": 703, "4690": 703, "4267": 703, "5479": 703, "5837": 703, "2696": 703, "5759": 703, "6327": 703, "5181": 703, "0312": 703, "3024": 703, "4812": 703, "4701": 703, "4083": 703, "0533": 703, "6435": 703, "0342": 703, "6121": 703, "8547": 703, "4288": 703, "0145": 703, "0375": 703, "6793": 703, "7036": 703, "2777": 703, "1717": 703, "2737": 703, "4795": 703, "0317": 703, "7496": 703, "1519": 703, "equicorrel": 703, "avg_corr": 703, "ey": 703, "rho": [703, 707, 790, 825], "sigma_pr": 703, "mod_pre_sigma": 703, "res_pr": 703, "9966": 703, "9945": 703, "549": 703, "9753": 703, "8200": 703, "7883": 703, "739": 703, "1011": 703, "2727": 703, "3708": 703, "7185": 703, "5065": 703, "7087": 703, "9882": 703, "9582": 703, "3098": 703, "1134": 703, "6971": 703, "5016": 703, "1736": [703, 705], "3318": 703, "7720": 703, "6685": 703, "5190": 703, "2040": 703, "8494": 703, "1426": 703, "9557": [703, 705], "5316": 703, "1671": 703, "6466": 703, "full_cov": [703, 755, 781], "param_nam": [703, 752, 753, 763, 764, 778, 779], "underscor": 703, "gf_intercept": 703, "gf_lnpc": 703, "gf_lnhwy": 703, "gf_lnwater": 703, "gf_lnutil": 703, "gf_lnemp": 703, "gf_unemp": 703, "sw_intercept": 703, "sw_lnpc": 703, "sw_lnhwy": 703, "sw_lnwater": 703, "sw_lnutil": 703, "sw_lnemp": 703, "sw_unemp": 703, "enforc": [703, 707], "rest": 703, "wc_unemp": 703, "mt_unemp": 703, "ne_unemp": 703, "ma_unemp": 703, "so_unemp": 703, "rest0": 703, "rest1": 703, "rest2": 703, "rest3": 703, "rest4": 703, "rest5": 703, "rest6": 703, "rest7": 703, "mw_unemp": 703, "cn_unemp": 703, "add_constraint": 703, "constrained_r": 703, "005801": 703, "complic": [703, 704], "idea": 703, "singular": [703, 707], "reset_constraint": 703, "9777": 703, "9891": 703, "2159": 703, "2656": 703, "2057": 703, "6963": 703, "3639": 703, "3238": 703, "4041": 703, "3103": 703, "141": 703, "2557": [703, 704], "3649": 703, "3615": 703, "0591": 703, "0166": 703, "466": 703, "1408": 703, "6142": 703, "752": 703, "6628": 703, "939": 703, "0117": 703, "2869": 703, "2201": 703, "3034": 703, "1924": 703, "7183": 703, "capm": 703, "mv": 703, "mv_ol": 703, "multivariate_l": 703, "mv_ols_r": 703, "6564": 703, "9773": 703, "1608": 703, "2457": 703, "3736": 703, "0403": 703, "2947": 703, "0711": 703, "0276": 703, "879": 703, "0171": 703, "1251": 703, "5142": 703, "0538": 703, "019": 703, "9965": 703, "1111": [703, 704], "8787": 703, "9861": 703, "0126": 703, "376": 703, "9615": 703, "4953": 703, "8472": 703, "0162": [703, 705], "204": [703, 705], "8154": 703, "8790": 703, "5167": 703, "9851": 703, "515": 703, "9337": 703, "0366": 703, "mostli": 704, "6951": 704, "2197": 704, "1873": 704, "3775": 704, "6950": 704, "8605": 704, "0445": 704, "5974": 704, "0228": 704, "0473": [704, 705], "4326": 704, "2518": 704, "0490": 704, "1435": 704, "1559": 704, "3478": 704, "0621": [704, 705], "3074": 704, "2650": 704, "0714": 704, "7132": 704, "0867": 704, "2624": 704, "0176": 704, "1775": 704, "0586": 704, "0289": 704, "2923": 704, "3682": 704, "0474": 704, "4612": 704, "9280": 704, "4247": 704, "5260": 704, "1270": 704, "1714": 704, "0213": 704, "4600": 704, "8899": 704, "8408": 704, "1247": 704, "6551": 704, "4472": 704, "3920": 704, "1410": 704, "2539": 704, "3210": 704, "7127": 704, "4473": 704, "5894": 704, "1640": 704, "braces_formula": 704, "braces_mod": 704, "braces_r": 704, "meaningless": 704, "labeled_formula": 704, "labels_mod": 704, "labeled_r": 704, "unlabel": 704, "foral": 704, "random_weight": 704, "chisquar": 704, "weighted_mod": 704, "7356": 704, "1199": 704, "0363": [704, 705], "7306": 704, "0271": 704, "0470": 704, "3111": 704, "0465": 704, "5047": 704, "1647": 704, "3468": 704, "1840": 704, "2977": 704, "0708": 704, "1755": 704, "7410": 704, "0545": 704, "3300": 704, "1162": 704, "4885": 704, "2666": [704, 705], "4557": 704, "4787": 704, "2493": 704, "7081": 704, "3269": 704, "2579": 704, "2674": 704, "2050": 704, "8325": 704, "1786": 704, "5499": 704, "1212": 704, "0240": [704, 706], "3691": 704, "9398": 704, "7307": 704, "1776": 704, "9466": 704, "4046": 704, "3396": 704, "7396": 704, "8067": 704, "7043": 704, "5651": 704, "1872": [704, 705], "4262": 704, "eqnarrai": 705, "beta_0": 705, "beta_3": 705, "beta_4": 705, "beta_5": 705, "h_i": 705, "gamma_2": 705, "gamma_3": 705, "gamma_4": 705, "morz": 705, "hours_mod": 705, "hours_r": 705, "1903": 705, "1807": 705, "429": 705, "2770": 705, "0952": 705, "1261": 705, "99": 705, "0427": 705, "195": 705, "96": 705, "2806": 705, "7790": 705, "412": 705, "308": 705, "445": 705, "6787": 705, "7137": 705, "535": 705, "6449": 705, "1626": 705, "472": 705, "4442": 705, "700": 705, "2551": 705, "lwage_mod": 705, "lwage_r": 705, "7582": 705, "7559": 705, "1362": 705, "0875": 705, "3892": 705, "0557": 705, "0299": 705, "7501": 705, "0801": 705, "1110": 705, "4898": 705, "8666": 705, "3862": 705, "system_2sl": 705, "system_2sls_r": 705, "1276": 705, "0961": 705, "7279": 705, "system_3sl": 705, "system_3sls_r": 705, "7778": 705, "651": 705, "5456": 705, "4617": 705, "0138": 705, "7822": 705, "521": 705, "052": 705, "2870": 705, "0222": 705, "716": 705, "1563": 705, "2476": 705, "4136": 705, "4646": 705, "2405": 705, "124": 705, "2969": 705, "461": 705, "968": 705, "0859": 705, "3864": 705, "0546": 705, "1171": 705, "0550": 705, "0295": [705, 706], "8622": 705, "1128": 705, "0794": 705, "4010": 705, "programmat": 705, "weaker": 705, "condition": [705, 707], "system_gmm": 705, "system_gmm_r": 705, "0121": 705, "7776": 705, "7268": 705, "5440": 705, "4626": 705, "7868": 705, "519": 705, "038": 705, "2876": 705, "1564": 705, "4149": 705, "4631": 705, "1742": 705, "2403": 705, "2925": 705, "3866": 705, "7540": 705, "meaningfulli": 705, "0345": 705, "2256": 705, "0361": 705, "027": 705, "5086": 705, "2864": 705, "768": 705, "508": 705, "0572": 705, "231": 705, "5947": 705, "227": 705, "216": 705, "0493": 705, "197": 705, "2578": 705, "3146": 705, "5538": 705, "674": 705, "1587": 705, "1933": 705, "2618": 705, "771": 705, "69": 705, "0999": 705, "1338": 705, "0720": 705, "9840": 705, "8475": 705, "0647": 705, "133e": 705, "2298": 705, "2188": 705, "y_1": [705, 752, 763, 778], "y_2": [705, 752, 763, 778], "x_1": [705, 752, 763, 778], "epsilon_1": 705, "x_2": [705, 752, 763, 778], "substitut": 705, "epsilon_2": 705, "default_rng": 705, "20220224": 705, "50000": 705, "y2": [705, 757, 768, 783], "y1": [705, 757, 768, 783], "in_sampl": 705, "10000": 705, "oo": 705, "9992": 705, "9868": 705, "0116": 705, "9877": 705, "9970": 705, "158": 705, "9847": 705, "9809": 705, "9982": 705, "9637": 705, "40000": 705, "125377": 705, "024812": 705, "40001": 705, "489893": 705, "707565": 705, "40002": 705, "189191": 705, "727702": 705, "40003": 705, "081779": 705, "756181": 705, "40004": 705, "628805": 705, "227368": 705, "49995": 705, "293820": 705, "140007": 705, "49996": 705, "462017": 705, "848988": 705, "49997": 705, "698136": 705, "510755": 705, "49998": 705, "862183": 705, "732983": 705, "49999": 705, "118024": 705, "147715": 705, "y1_pred": 705, "y1_x1": 705, "y1_y2": 705, "y2_pred": 705, "y2_x2": 705, "y2_y1": 705, "pred_df": 705, "own": 706, "entri": [706, 757, 768, 783], "0757": 706, "sat": 706, "jun": 706, "2839": 706, "573": 706, "6161": 706, "9517": 706, "1163": 706, "0186": 706, "2478": 706, "0798": 706, "1528": 706, "9598": 706, "3372": 706, "0862": 706, "6390": 706, "5509": 706, "7270": 706, "5617": 706, "5743": 706, "0062": 706, "0393": 706, "systemresult": [706, 755, 781], "0x282ca8f7b70": 706, "sure": [706, 778], "cccc": [707, 752, 763, 778], "fgl": [707, 752, 757, 763, 778, 783], "nk": 707, "odot": 707, "iota_": 707, "psi_": 707, "1k": 707, "2k": 707, "kk": 707, "needless": 707, "found": [707, 875], "ki": [707, 738, 746], "ji": [707, 738, 746], "widehat": 707, "immedi": 707, "breusch": [707, 790, 825], "pagan": [707, 790, 825], "ssr_": [707, 817, 851], "tss_": [707, 817, 851], "uncent": 707, "1977": 707, "iota": 707, "formul": 707, "tr": [707, 817, 851], "psi": 707, "full_sigma": [709, 724, 728, 732], "ndepend": [709, 724, 728, 732], "linearconstraint": [709, 713, 716, 719, 724, 728, 754, 765, 780], "cov_clust": 709, "group_debias_coeffici": 709, "attrdict": [711, 715, 718, 722, 726, 730, 735, 739, 743, 748, 789, 799, 824, 834], "i_n": [716, 742, 752, 778], "neqn": 745, "_ig_": 746, "w_j": 746, "nequat": 751, "empti": [752, 763, 876], "prespecifi": [752, 757, 763, 778, 783], "vertic": [752, 763, 778], "y_k": [752, 763, 778], "x_k": [752, 763, 778], "nconstraint": [753, 764, 779], "nparamet": [753, 764, 779], "con": [754, 765, 780], "repres": [757, 768, 783], "curli": [757, 768, 783], "brace": [757, 768, 783], "encapsul": [757, 768, 783], "x1_1": [757, 768, 783], "x1_2": [757, 768], "x2_1": [757, 768, 783], "x2_2": [757, 768], "randn": [757, 768, 783], "eq1": [757, 768, 783], "eq2": [757, 768, 783], "ndep": [759, 785], "At": 759, "fir": [761, 771, 787], "assembl": [761, 771, 787, 809, 843], "eqn": [761, 771, 787, 809, 843], "beta_j": 763, "gmmsystemresult": 766, "num_param": 773, "require_panda": 773, "constrain": [773, 775, 777], "back": 774, "beta_c": 774, "system_rsquar": [789, 824], "lr": [803, 837], "sum_i": [813, 817, 847, 851], "sum_j": [813, 817, 847, 851], "denomin": [813, 847], "_ij": [817, 851], "sum__i": [817, 851], "why": 859, "critical_valu": [859, 864], "df_denom": 864, "holder": 864, "statement": 864, "kwarg": [869, 878], "shallow": 871, "itemsview": 873, "keyerror": [875, 876], "lack": 878, "valuesview": 879}, "objects": {"linearmodels.asset_pricing": [[74, 0, 0, "-", "covariance"], [74, 0, 0, "-", "model"], [74, 0, 0, "-", "results"]], "linearmodels.asset_pricing.covariance": [[0, 1, 1, "", "HeteroskedasticCovariance"], [7, 1, 1, "", "KernelCovariance"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance": [[1, 2, 1, "", "config"], [2, 2, 1, "", "cov"], [3, 2, 1, "", "inv_jacobian"], [4, 2, 1, "", "jacobian"], [5, 2, 1, "", "s"], [6, 2, 1, "", "square"]], "linearmodels.asset_pricing.covariance.KernelCovariance": [[8, 2, 1, "", "bandwidth"], [9, 2, 1, "", "config"], [10, 2, 1, "", "cov"], [11, 2, 1, "", "inv_jacobian"], [12, 2, 1, "", "jacobian"], [13, 2, 1, "", "kernel"], [14, 2, 1, "", "s"], [15, 2, 1, "", "square"]], "linearmodels.asset_pricing.model": [[16, 1, 1, "", "LinearFactorModel"], [20, 1, 1, "", "LinearFactorModelGMM"], [24, 1, 1, "", "TradedFactorModel"]], "linearmodels.asset_pricing.model.LinearFactorModel": [[17, 3, 1, "", "fit"], [18, 2, 1, "", "formula"], [19, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM": [[21, 3, 1, "", "fit"], [22, 2, 1, "", "formula"], [23, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.TradedFactorModel": [[25, 3, 1, "", "fit"], [26, 2, 1, "", "formula"], [27, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.results": [[28, 1, 1, "", "GMMFactorModelResults"], [49, 1, 1, "", "LinearFactorModelResults"]], "linearmodels.asset_pricing.results.GMMFactorModelResults": [[29, 2, 1, "", "alphas"], [30, 2, 1, "", "betas"], [31, 2, 1, "", "cov"], [32, 2, 1, "", "cov_estimator"], [33, 2, 1, "", "full_summary"], [34, 2, 1, "", "iterations"], [35, 2, 1, "", "j_statistic"], [36, 2, 1, "", "name"], [37, 2, 1, "", "nobs"], [38, 2, 1, "", "params"], [39, 2, 1, "", "pvalues"], [40, 2, 1, "", "residual_ss"], [41, 2, 1, "", "risk_premia"], [42, 2, 1, "", "risk_premia_se"], [43, 2, 1, "", "risk_premia_tstats"], [44, 2, 1, "", "rsquared"], [45, 2, 1, "", "std_errors"], [46, 2, 1, "", "summary"], [47, 2, 1, "", "total_ss"], [48, 2, 1, "", "tstats"]], "linearmodels.asset_pricing.results.LinearFactorModelResults": [[50, 2, 1, "", "alphas"], [51, 2, 1, "", "betas"], [52, 2, 1, "", "cov"], [53, 2, 1, "", "cov_estimator"], [54, 2, 1, "", "full_summary"], [55, 2, 1, "", "j_statistic"], [56, 2, 1, "", "name"], [57, 2, 1, "", "nobs"], [58, 2, 1, "", "params"], [59, 2, 1, "", "pvalues"], [60, 2, 1, "", "residual_ss"], [61, 2, 1, "", "risk_premia"], [62, 2, 1, "", "risk_premia_se"], [63, 2, 1, "", "risk_premia_tstats"], [64, 2, 1, "", "rsquared"], [65, 2, 1, "", "std_errors"], [66, 2, 1, "", "summary"], [67, 2, 1, "", "total_ss"], [68, 2, 1, "", "tstats"]], "linearmodels.compat": [[76, 0, 0, "-", "statsmodels"]], "linearmodels.compat.statsmodels": [[77, 1, 1, "", "Summary"]], "linearmodels.compat.statsmodels.Summary": [[78, 3, 1, "", "add_extra_txt"], [79, 3, 1, "", "add_table_2cols"], [80, 3, 1, "", "add_table_params"], [81, 3, 1, "", "as_csv"], [82, 3, 1, "", "as_html"], [83, 3, 1, "", "as_latex"], [84, 3, 1, "", "as_text"]], "linearmodels.iv": [[386, 0, 0, "-", "absorbing"], [386, 0, 0, "-", "covariance"], [386, 0, 0, "-", "data"], [386, 0, 0, "-", "gmm"], [386, 0, 0, "-", "model"], [386, 0, 0, "-", "results"]], "linearmodels.iv.absorbing": [[87, 1, 1, "", "AbsorbingLS"], [98, 1, 1, "", "AbsorbingLSResults"], [130, 1, 1, "", "Interaction"]], "linearmodels.iv.absorbing.AbsorbingLS": [[88, 2, 1, "", "absorbed_dependent"], [89, 2, 1, "", "absorbed_exog"], [90, 2, 1, "", "dependent"], [91, 2, 1, "", "exog"], [92, 3, 1, "", "fit"], [93, 2, 1, "", "has_constant"], [94, 2, 1, "", "instruments"], [95, 3, 1, "", "resids"], [96, 2, 1, "", "weights"], [97, 3, 1, "", "wresids"]], "linearmodels.iv.absorbing.AbsorbingLSResults": [[99, 2, 1, "", "absorbed_effects"], [100, 2, 1, "", "absorbed_rsquared"], [101, 3, 1, "", "conf_int"], [102, 2, 1, "", "cov"], [103, 2, 1, "", "cov_config"], [104, 2, 1, "", "cov_estimator"], [105, 2, 1, "", "cov_type"], [106, 2, 1, "", "debiased"], [107, 2, 1, "", "df_absorbed"], [108, 2, 1, "", "df_model"], [109, 2, 1, "", "df_resid"], [110, 2, 1, "", "f_statistic"], [111, 2, 1, "", "fitted_values"], [112, 2, 1, "", "has_constant"], [113, 2, 1, "", "idiosyncratic"], [114, 2, 1, "", "method"], [115, 2, 1, "", "model_ss"], [116, 2, 1, "", "nobs"], [117, 2, 1, "", "params"], [118, 2, 1, "", "pvalues"], [119, 2, 1, "", "resid_ss"], [120, 2, 1, "", "resids"], [121, 2, 1, "", "rsquared"], [122, 2, 1, "", "rsquared_adj"], [123, 2, 1, "", "s2"], [124, 2, 1, "", "std_errors"], [125, 2, 1, "", "summary"], [126, 2, 1, "", "total_ss"], [127, 2, 1, "", "tstats"], [128, 3, 1, "", "wald_test"], [129, 2, 1, "", "wresids"]], "linearmodels.iv.absorbing.Interaction": [[131, 2, 1, "", "cat"], [132, 2, 1, "", "cont"], [133, 3, 1, "", "drop"], [134, 3, 1, "", "from_frame"], [135, 2, 1, "", "hash"], [136, 2, 1, "", "isnull"], [137, 2, 1, "", "nobs"], [138, 2, 1, "", "sparse"]], "linearmodels.iv.covariance": [[145, 1, 1, "", "ClusteredCovariance"], [151, 1, 1, "", "HeteroskedasticCovariance"], [157, 1, 1, "", "HomoskedasticCovariance"], [163, 1, 1, "", "KernelCovariance"], [169, 4, 1, "", "kernel_optimal_bandwidth"], [170, 4, 1, "", "kernel_weight_bartlett"], [171, 4, 1, "", "kernel_weight_parzen"], [172, 4, 1, "", "kernel_weight_quadratic_spectral"]], "linearmodels.iv.covariance.ClusteredCovariance": [[146, 2, 1, "", "config"], [147, 2, 1, "", "cov"], [148, 2, 1, "", "debiased"], [149, 2, 1, "", "s"], [150, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HeteroskedasticCovariance": [[152, 2, 1, "", "config"], [153, 2, 1, "", "cov"], [154, 2, 1, "", "debiased"], [155, 2, 1, "", "s"], [156, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HomoskedasticCovariance": [[158, 2, 1, "", "config"], [159, 2, 1, "", "cov"], [160, 2, 1, "", "debiased"], [161, 2, 1, "", "s"], [162, 2, 1, "", "s2"]], "linearmodels.iv.covariance.KernelCovariance": [[164, 2, 1, "", "config"], [165, 2, 1, "", "cov"], [166, 2, 1, "", "debiased"], [167, 2, 1, "", "s"], [168, 2, 1, "", "s2"]], "linearmodels.iv.data": [[173, 1, 1, "", "IVData"]], "linearmodels.iv.data.IVData": [[174, 2, 1, "", "cols"], [175, 3, 1, "", "drop"], [176, 2, 1, "", "isnull"], [177, 2, 1, "", "labels"], [178, 2, 1, "", "ndarray"], [179, 2, 1, "", "ndim"], [180, 2, 1, "", "pandas"], [181, 2, 1, "", "rows"], [182, 2, 1, "", "shape"]], "linearmodels.iv.gmm": [[183, 1, 1, "", "HeteroskedasticWeightMatrix"], [186, 1, 1, "", "HomoskedasticWeightMatrix"], [189, 1, 1, "", "IVGMMCovariance"], [195, 1, 1, "", "KernelWeightMatrix"], [199, 1, 1, "", "OneWayClusteredWeightMatrix"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix": [[184, 2, 1, "", "config"], [185, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix": [[187, 2, 1, "", "config"], [188, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.IVGMMCovariance": [[190, 2, 1, "", "config"], [191, 2, 1, "", "cov"], [192, 2, 1, "", "debiased"], [193, 2, 1, "", "s"], [194, 2, 1, "", "s2"]], "linearmodels.iv.gmm.KernelWeightMatrix": [[196, 2, 1, "", "bandwidth"], [197, 2, 1, "", "config"], [198, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix": [[200, 2, 1, "", "config"], [201, 3, 1, "", "weight_matrix"]], "linearmodels.iv.model": [[202, 1, 1, "", "IV2SLS"], [213, 1, 1, "", "IVGMM"], [224, 1, 1, "", "IVGMMCUE"], [236, 1, 1, "", "IVLIML"], [247, 1, 1, "", "_OLS"]], "linearmodels.iv.model.IV2SLS": [[203, 3, 1, "", "estimate_parameters"], [204, 3, 1, "", "fit"], [205, 2, 1, "", "formula"], [206, 3, 1, "", "from_formula"], [207, 2, 1, "", "has_constant"], [208, 2, 1, "", "isnull"], [209, 2, 1, "", "notnull"], [210, 3, 1, "", "predict"], [211, 3, 1, "", "resids"], [212, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMM": [[214, 3, 1, "", "estimate_parameters"], [215, 3, 1, "", "fit"], [216, 2, 1, "", "formula"], [217, 3, 1, "", "from_formula"], [218, 2, 1, "", "has_constant"], [219, 2, 1, "", "isnull"], [220, 2, 1, "", "notnull"], [221, 3, 1, "", "predict"], [222, 3, 1, "", "resids"], [223, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMMCUE": [[225, 3, 1, "", "estimate_parameters"], [226, 3, 1, "", "fit"], [227, 2, 1, "", "formula"], [228, 3, 1, "", "from_formula"], [229, 2, 1, "", "has_constant"], [230, 2, 1, "", "isnull"], [231, 3, 1, "", "j"], [232, 2, 1, "", "notnull"], [233, 3, 1, "", "predict"], [234, 3, 1, "", "resids"], [235, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVLIML": [[237, 3, 1, "", "estimate_parameters"], [238, 3, 1, "", "fit"], [239, 2, 1, "", "formula"], [240, 3, 1, "", "from_formula"], [241, 2, 1, "", "has_constant"], [242, 2, 1, "", "isnull"], [243, 2, 1, "", "notnull"], [244, 3, 1, "", "predict"], [245, 3, 1, "", "resids"], [246, 3, 1, "", "wresids"]], "linearmodels.iv.model._OLS": [[248, 3, 1, "", "estimate_parameters"], [249, 3, 1, "", "fit"], [250, 2, 1, "", "formula"], [251, 3, 1, "", "from_formula"], [252, 2, 1, "", "has_constant"], [253, 2, 1, "", "isnull"], [254, 2, 1, "", "notnull"], [255, 3, 1, "", "predict"], [256, 3, 1, "", "resids"], [257, 3, 1, "", "wresids"]], "linearmodels.iv.results": [[258, 1, 1, "", "FirstStageResults"], [262, 1, 1, "", "IVGMMResults"], [300, 1, 1, "", "IVModelComparison"], [312, 1, 1, "", "IVResults"], [353, 1, 1, "", "OLSResults"], [384, 4, 1, "", "compare"]], "linearmodels.iv.results.FirstStageResults": [[259, 2, 1, "", "diagnostics"], [260, 2, 1, "", "individual"], [261, 2, 1, "", "summary"]], "linearmodels.iv.results.IVGMMResults": [[263, 3, 1, "", "c_stat"], [264, 3, 1, "", "conf_int"], [265, 2, 1, "", "cov"], [266, 2, 1, "", "cov_config"], [267, 2, 1, "", "cov_estimator"], [268, 2, 1, "", "cov_type"], [269, 2, 1, "", "debiased"], [270, 2, 1, "", "df_model"], [271, 2, 1, "", "df_resid"], [272, 2, 1, "", "f_statistic"], [273, 2, 1, "", "first_stage"], [274, 2, 1, "", "fitted_values"], [275, 2, 1, "", "has_constant"], [276, 2, 1, "", "idiosyncratic"], [277, 2, 1, "", "iterations"], [278, 2, 1, "", "j_stat"], [279, 2, 1, "", "kappa"], [280, 2, 1, "", "method"], [281, 2, 1, "", "model_ss"], [282, 2, 1, "", "nobs"], [283, 2, 1, "", "params"], [284, 3, 1, "", "predict"], [285, 2, 1, "", "pvalues"], [286, 2, 1, "", "resid_ss"], [287, 2, 1, "", "resids"], [288, 2, 1, "", "rsquared"], [289, 2, 1, "", "rsquared_adj"], [290, 2, 1, "", "s2"], [291, 2, 1, "", "std_errors"], [292, 2, 1, "", "summary"], [293, 2, 1, "", "total_ss"], [294, 2, 1, "", "tstats"], [295, 3, 1, "", "wald_test"], [296, 2, 1, "", "weight_config"], [297, 2, 1, "", "weight_matrix"], [298, 2, 1, "", "weight_type"], [299, 2, 1, "", "wresids"]], "linearmodels.iv.results.IVModelComparison": [[301, 2, 1, "", "cov_estimator"], [302, 2, 1, "", "estimator_method"], [303, 2, 1, "", "f_statistic"], [304, 2, 1, "", "nobs"], [305, 2, 1, "", "params"], [306, 2, 1, "", "pvalues"], [307, 2, 1, "", "rsquared"], [308, 2, 1, "", "rsquared_adj"], [309, 2, 1, "", "std_errors"], [310, 2, 1, "", "summary"], [311, 2, 1, "", "tstats"]], "linearmodels.iv.results.IVResults": [[313, 2, 1, "", "anderson_rubin"], [314, 2, 1, "", "basmann"], [315, 2, 1, "", "basmann_f"], [316, 3, 1, "", "conf_int"], [317, 2, 1, "", "cov"], [318, 2, 1, "", "cov_config"], [319, 2, 1, "", "cov_estimator"], [320, 2, 1, "", "cov_type"], [321, 2, 1, "", "debiased"], [322, 2, 1, "", "df_model"], [323, 2, 1, "", "df_resid"], [324, 3, 1, "", "durbin"], [325, 2, 1, "", "f_statistic"], [326, 2, 1, "", "first_stage"], [327, 2, 1, "", "fitted_values"], [328, 2, 1, "", "has_constant"], [329, 2, 1, "", "idiosyncratic"], [330, 2, 1, "", "kappa"], [331, 2, 1, "", "method"], [332, 2, 1, "", "model_ss"], [333, 2, 1, "", "nobs"], [334, 2, 1, "", "params"], [335, 3, 1, "", "predict"], [336, 2, 1, "", "pvalues"], [337, 2, 1, "", "resid_ss"], [338, 2, 1, "", "resids"], [339, 2, 1, "", "rsquared"], [340, 2, 1, "", "rsquared_adj"], [341, 2, 1, "", "s2"], [342, 2, 1, "", "sargan"], [343, 2, 1, "", "std_errors"], [344, 2, 1, "", "summary"], [345, 2, 1, "", "total_ss"], [346, 2, 1, "", "tstats"], [347, 3, 1, "", "wald_test"], [348, 2, 1, "", "wooldridge_overid"], [349, 2, 1, "", "wooldridge_regression"], [350, 2, 1, "", "wooldridge_score"], [351, 2, 1, "", "wresids"], [352, 3, 1, "", "wu_hausman"]], "linearmodels.iv.results.OLSResults": [[354, 3, 1, "", "conf_int"], [355, 2, 1, "", "cov"], [356, 2, 1, "", "cov_config"], [357, 2, 1, "", "cov_estimator"], [358, 2, 1, "", "cov_type"], [359, 2, 1, "", "debiased"], [360, 2, 1, "", "df_model"], [361, 2, 1, "", "df_resid"], [362, 2, 1, "", "f_statistic"], [363, 2, 1, "", "fitted_values"], [364, 2, 1, "", "has_constant"], [365, 2, 1, "", "idiosyncratic"], [366, 2, 1, "", "kappa"], [367, 2, 1, "", "method"], [368, 2, 1, "", "model_ss"], [369, 2, 1, "", "nobs"], [370, 2, 1, "", "params"], [371, 3, 1, "", "predict"], [372, 2, 1, "", "pvalues"], [373, 2, 1, "", "resid_ss"], [374, 2, 1, "", "resids"], [375, 2, 1, "", "rsquared"], [376, 2, 1, "", "rsquared_adj"], [377, 2, 1, "", "s2"], [378, 2, 1, "", "std_errors"], [379, 2, 1, "", "summary"], [380, 2, 1, "", "total_ss"], [381, 2, 1, "", "tstats"], [382, 3, 1, "", "wald_test"], [383, 2, 1, "", "wresids"]], "linearmodels.panel": [[700, 0, 0, "-", "covariance"], [700, 0, 0, "-", "data"], [700, 0, 0, "-", "model"], [700, 0, 0, "-", "results"], [700, 0, 0, "-", "utility"]], "linearmodels.panel.covariance": [[395, 1, 1, "", "ACCovariance"], [403, 1, 1, "", "ClusteredCovariance"], [411, 1, 1, "", "DriscollKraay"], [419, 1, 1, "", "FamaMacBethCovariance"], [429, 1, 1, "", "HeteroskedasticCovariance"], [437, 1, 1, "", "HomoskedasticCovariance"]], "linearmodels.panel.covariance.ACCovariance": [[396, 5, 1, "", "ALLOWED_KWARGS"], [397, 5, 1, "", "DEFAULT_KERNEL"], [398, 2, 1, "", "cov"], [399, 3, 1, "", "deferred_cov"], [400, 2, 1, "", "eps"], [401, 2, 1, "", "name"], [402, 2, 1, "", "s2"]], "linearmodels.panel.covariance.ClusteredCovariance": [[404, 5, 1, "", "ALLOWED_KWARGS"], [405, 5, 1, "", "DEFAULT_KERNEL"], [406, 2, 1, "", "cov"], [407, 3, 1, "", "deferred_cov"], [408, 2, 1, "", "eps"], [409, 2, 1, "", "name"], [410, 2, 1, "", "s2"]], "linearmodels.panel.covariance.DriscollKraay": [[412, 5, 1, "", "ALLOWED_KWARGS"], [413, 5, 1, "", "DEFAULT_KERNEL"], [414, 2, 1, "", "cov"], [415, 3, 1, "", "deferred_cov"], [416, 2, 1, "", "eps"], [417, 2, 1, "", "name"], [418, 2, 1, "", "s2"]], "linearmodels.panel.covariance.FamaMacBethCovariance": [[420, 5, 1, "", "ALLOWED_KWARGS"], [421, 5, 1, "", "DEFAULT_KERNEL"], [422, 2, 1, "", "all_params"], [423, 2, 1, "", "bandwidth"], [424, 2, 1, "", "cov"], [425, 3, 1, "", "deferred_cov"], [426, 2, 1, "", "eps"], [427, 2, 1, "", "name"], [428, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HeteroskedasticCovariance": [[430, 5, 1, "", "ALLOWED_KWARGS"], [431, 5, 1, "", "DEFAULT_KERNEL"], [432, 2, 1, "", "cov"], [433, 3, 1, "", "deferred_cov"], [434, 2, 1, "", "eps"], [435, 2, 1, "", "name"], [436, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HomoskedasticCovariance": [[438, 5, 1, "", "ALLOWED_KWARGS"], [439, 5, 1, "", "DEFAULT_KERNEL"], [440, 2, 1, "", "cov"], [441, 3, 1, "", "deferred_cov"], [442, 2, 1, "", "eps"], [443, 2, 1, "", "name"], [444, 2, 1, "", "s2"]], "linearmodels.panel.data": [[445, 1, 1, "", "PanelData"], [470, 1, 1, "", "_Panel"]], "linearmodels.panel.data.PanelData": [[446, 3, 1, "", "copy"], [447, 3, 1, "", "count"], [448, 2, 1, "", "dataframe"], [449, 3, 1, "", "demean"], [450, 3, 1, "", "drop"], [451, 3, 1, "", "dummies"], [452, 2, 1, "", "entities"], [453, 2, 1, "", "entity_ids"], [454, 3, 1, "", "first_difference"], [455, 3, 1, "", "general_demean"], [456, 2, 1, "", "index"], [457, 2, 1, "", "isnull"], [458, 3, 1, "", "mean"], [459, 2, 1, "", "ndim"], [460, 2, 1, "", "nentity"], [461, 2, 1, "", "nobs"], [462, 2, 1, "", "nvar"], [463, 2, 1, "", "panel"], [464, 2, 1, "", "shape"], [465, 2, 1, "", "time"], [466, 2, 1, "", "time_ids"], [467, 2, 1, "", "values2d"], [468, 2, 1, "", "values3d"], [469, 2, 1, "", "vars"]], "linearmodels.panel.data._Panel": [[471, 3, 1, "", "from_array"], [472, 2, 1, "", "items"], [473, 2, 1, "", "major_axis"], [474, 2, 1, "", "minor_axis"], [475, 2, 1, "", "shape"], [476, 3, 1, "", "to_frame"], [477, 2, 1, "", "values"]], "linearmodels.panel.model": [[478, 1, 1, "", "BetweenOLS"], [486, 1, 1, "", "FamaMacBeth"], [494, 1, 1, "", "FirstDifferenceOLS"], [502, 1, 1, "", "PanelOLS"], [513, 1, 1, "", "PooledOLS"], [521, 1, 1, "", "RandomEffects"]], "linearmodels.panel.model.BetweenOLS": [[479, 3, 1, "", "fit"], [480, 2, 1, "", "formula"], [481, 3, 1, "", "from_formula"], [482, 2, 1, "", "has_constant"], [483, 2, 1, "", "not_null"], [484, 3, 1, "", "predict"], [485, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FamaMacBeth": [[487, 3, 1, "", "fit"], [488, 2, 1, "", "formula"], [489, 3, 1, "", "from_formula"], [490, 2, 1, "", "has_constant"], [491, 2, 1, "", "not_null"], [492, 3, 1, "", "predict"], [493, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FirstDifferenceOLS": [[495, 3, 1, "", "fit"], [496, 2, 1, "", "formula"], [497, 3, 1, "", "from_formula"], [498, 2, 1, "", "has_constant"], [499, 2, 1, "", "not_null"], [500, 3, 1, "", "predict"], [501, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.PanelOLS": [[503, 2, 1, "", "entity_effects"], [504, 3, 1, "", "fit"], [505, 2, 1, "", "formula"], [506, 3, 1, "", "from_formula"], [507, 2, 1, "", "has_constant"], [508, 2, 1, "", "not_null"], [509, 2, 1, "", "other_effects"], [510, 3, 1, "", "predict"], [511, 3, 1, "", "reformat_clusters"], [512, 2, 1, "", "time_effects"]], "linearmodels.panel.model.PooledOLS": [[514, 3, 1, "", "fit"], [515, 2, 1, "", "formula"], [516, 3, 1, "", "from_formula"], [517, 2, 1, "", "has_constant"], [518, 2, 1, "", "not_null"], [519, 3, 1, "", "predict"], [520, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.RandomEffects": [[522, 3, 1, "", "fit"], [523, 2, 1, "", "formula"], [524, 3, 1, "", "from_formula"], [525, 2, 1, "", "has_constant"], [526, 2, 1, "", "not_null"], [527, 3, 1, "", "predict"], [528, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.results": [[529, 1, 1, "", "FamaMacBethResults"], [565, 1, 1, "", "PanelEffectsResults"], [605, 1, 1, "", "PanelModelComparison"], [619, 1, 1, "", "PanelResults"], [654, 1, 1, "", "RandomEffectsResults"], [691, 4, 1, "", "compare"]], "linearmodels.panel.results.FamaMacBethResults": [[530, 2, 1, "", "all_params"], [531, 3, 1, "", "conf_int"], [532, 2, 1, "", "corr_squared_between"], [533, 2, 1, "", "corr_squared_overall"], [534, 2, 1, "", "corr_squared_within"], [535, 2, 1, "", "cov"], [536, 2, 1, "", "df_model"], [537, 2, 1, "", "df_resid"], [538, 2, 1, "", "entity_info"], [539, 2, 1, "", "estimated_effects"], [540, 2, 1, "", "f_statistic"], [541, 2, 1, "", "f_statistic_robust"], [542, 2, 1, "", "fitted_values"], [543, 2, 1, "", "idiosyncratic"], [544, 2, 1, "", "loglik"], [545, 2, 1, "", "model_ss"], [546, 2, 1, "", "name"], [547, 2, 1, "", "nobs"], [548, 2, 1, "", "params"], [549, 3, 1, "", "predict"], [550, 2, 1, "", "pvalues"], [551, 2, 1, "", "resid_ss"], [552, 2, 1, "", "resids"], [553, 2, 1, "", "rsquared"], [554, 2, 1, "", "rsquared_between"], [555, 2, 1, "", "rsquared_overall"], [556, 2, 1, "", "rsquared_within"], [557, 2, 1, "", "s2"], [558, 2, 1, "", "std_errors"], [559, 2, 1, "", "summary"], [560, 2, 1, "", "time_info"], [561, 2, 1, "", "total_ss"], [562, 2, 1, "", "tstats"], [563, 3, 1, "", "wald_test"], [564, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelEffectsResults": [[566, 3, 1, "", "conf_int"], [567, 2, 1, "", "corr_squared_between"], [568, 2, 1, "", "corr_squared_overall"], [569, 2, 1, "", "corr_squared_within"], [570, 2, 1, "", "cov"], [571, 2, 1, "", "df_model"], [572, 2, 1, "", "df_resid"], [573, 2, 1, "", "entity_info"], [574, 2, 1, "", "estimated_effects"], [575, 2, 1, "", "f_pooled"], [576, 2, 1, "", "f_statistic"], [577, 2, 1, "", "f_statistic_robust"], [578, 2, 1, "", "fitted_values"], [579, 2, 1, "", "idiosyncratic"], [580, 2, 1, "", "included_effects"], [581, 2, 1, "", "loglik"], [582, 2, 1, "", "model_ss"], [583, 2, 1, "", "name"], [584, 2, 1, "", "nobs"], [585, 2, 1, "", "other_info"], [586, 2, 1, "", "params"], [587, 3, 1, "", "predict"], [588, 2, 1, "", "pvalues"], [589, 2, 1, "", "resid_ss"], [590, 2, 1, "", "resids"], [591, 2, 1, "", "rsquared"], [592, 2, 1, "", "rsquared_between"], [593, 2, 1, "", "rsquared_inclusive"], [594, 2, 1, "", "rsquared_overall"], [595, 2, 1, "", "rsquared_within"], [596, 2, 1, "", "s2"], [597, 2, 1, "", "std_errors"], [598, 2, 1, "", "summary"], [599, 2, 1, "", "time_info"], [600, 2, 1, "", "total_ss"], [601, 2, 1, "", "tstats"], [602, 2, 1, "", "variance_decomposition"], [603, 3, 1, "", "wald_test"], [604, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelModelComparison": [[606, 2, 1, "", "cov_estimator"], [607, 2, 1, "", "estimator_method"], [608, 2, 1, "", "f_statistic"], [609, 2, 1, "", "nobs"], [610, 2, 1, "", "params"], [611, 2, 1, "", "pvalues"], [612, 2, 1, "", "rsquared"], [613, 2, 1, "", "rsquared_between"], [614, 2, 1, "", "rsquared_overall"], [615, 2, 1, "", "rsquared_within"], [616, 2, 1, "", "std_errors"], [617, 2, 1, "", "summary"], [618, 2, 1, "", "tstats"]], "linearmodels.panel.results.PanelResults": [[620, 3, 1, "", "conf_int"], [621, 2, 1, "", "corr_squared_between"], [622, 2, 1, "", "corr_squared_overall"], [623, 2, 1, "", "corr_squared_within"], [624, 2, 1, "", "cov"], [625, 2, 1, "", "df_model"], [626, 2, 1, "", "df_resid"], [627, 2, 1, "", "entity_info"], [628, 2, 1, "", "estimated_effects"], [629, 2, 1, "", "f_statistic"], [630, 2, 1, "", "f_statistic_robust"], [631, 2, 1, "", "fitted_values"], [632, 2, 1, "", "idiosyncratic"], [633, 2, 1, "", "loglik"], [634, 2, 1, "", "model_ss"], [635, 2, 1, "", "name"], [636, 2, 1, "", "nobs"], [637, 2, 1, "", "params"], [638, 3, 1, "", "predict"], [639, 2, 1, "", "pvalues"], [640, 2, 1, "", "resid_ss"], [641, 2, 1, "", "resids"], [642, 2, 1, "", "rsquared"], [643, 2, 1, "", "rsquared_between"], [644, 2, 1, "", "rsquared_overall"], [645, 2, 1, "", "rsquared_within"], [646, 2, 1, "", "s2"], [647, 2, 1, "", "std_errors"], [648, 2, 1, "", "summary"], [649, 2, 1, "", "time_info"], [650, 2, 1, "", "total_ss"], [651, 2, 1, "", "tstats"], [652, 3, 1, "", "wald_test"], [653, 2, 1, "", "wresids"]], "linearmodels.panel.results.RandomEffectsResults": [[655, 3, 1, "", "conf_int"], [656, 2, 1, "", "corr_squared_between"], [657, 2, 1, "", "corr_squared_overall"], [658, 2, 1, "", "corr_squared_within"], [659, 2, 1, "", "cov"], [660, 2, 1, "", "df_model"], [661, 2, 1, "", "df_resid"], [662, 2, 1, "", "entity_info"], [663, 2, 1, "", "estimated_effects"], [664, 2, 1, "", "f_statistic"], [665, 2, 1, "", "f_statistic_robust"], [666, 2, 1, "", "fitted_values"], [667, 2, 1, "", "idiosyncratic"], [668, 2, 1, "", "loglik"], [669, 2, 1, "", "model_ss"], [670, 2, 1, "", "name"], [671, 2, 1, "", "nobs"], [672, 2, 1, "", "params"], [673, 3, 1, "", "predict"], [674, 2, 1, "", "pvalues"], [675, 2, 1, "", "resid_ss"], [676, 2, 1, "", "resids"], [677, 2, 1, "", "rsquared"], [678, 2, 1, "", "rsquared_between"], [679, 2, 1, "", "rsquared_overall"], [680, 2, 1, "", "rsquared_within"], [681, 2, 1, "", "s2"], [682, 2, 1, "", "std_errors"], [683, 2, 1, "", "summary"], [684, 2, 1, "", "theta"], [685, 2, 1, "", "time_info"], [686, 2, 1, "", "total_ss"], [687, 2, 1, "", "tstats"], [688, 2, 1, "", "variance_decomposition"], [689, 3, 1, "", "wald_test"], [690, 2, 1, "", "wresids"]], "linearmodels.panel.utility": [[692, 1, 1, "", "PanelModelData"], [699, 4, 1, "", "generate_panel_data"]], "linearmodels.panel.utility.PanelModelData": [[693, 5, 1, "", "clusters"], [694, 3, 1, "", "count"], [695, 5, 1, "", "data"], [696, 3, 1, "", "index"], [697, 5, 1, "", "other_effects"], [698, 5, 1, "", "weights"]], "linearmodels.shared.covariance": [[856, 4, 1, "", "cov_cluster"], [857, 4, 1, "", "cov_kernel"], [858, 4, 1, "", "group_debias_coefficient"]], "linearmodels.shared.hypotheses": [[859, 1, 1, "", "InvalidTestStatistic"], [864, 1, 1, "", "WaldTestStatistic"]], "linearmodels.shared.hypotheses.InvalidTestStatistic": [[860, 2, 1, "", "critical_values"], [861, 2, 1, "", "null"], [862, 2, 1, "", "pval"], [863, 2, 1, "", "stat"]], "linearmodels.shared.hypotheses.WaldTestStatistic": [[865, 2, 1, "", "critical_values"], [866, 2, 1, "", "null"], [867, 2, 1, "", "pval"], [868, 2, 1, "", "stat"]], "linearmodels.shared.utility": [[869, 1, 1, "", "AttrDict"]], "linearmodels.shared.utility.AttrDict": [[870, 3, 1, "", "clear"], [871, 3, 1, "", "copy"], [872, 3, 1, "", "get"], [873, 3, 1, "", "items"], [874, 3, 1, "", "keys"], [875, 3, 1, "", "pop"], [876, 3, 1, "", "popitem"], [877, 3, 1, "", "setdefault"], [878, 3, 1, "", "update"], [879, 3, 1, "", "values"]], "linearmodels.system": [[708, 0, 0, "-", "covariance"], [708, 0, 0, "-", "gmm"], [708, 0, 0, "-", "model"], [708, 0, 0, "-", "results"]], "linearmodels.system.covariance": [[709, 1, 1, "", "ClusteredCovariance"], [713, 1, 1, "", "GMMHeteroskedasticCovariance"], [716, 1, 1, "", "GMMHomoskedasticCovariance"], [719, 1, 1, "", "GMMKernelCovariance"], [724, 1, 1, "", "HeteroskedasticCovariance"], [728, 1, 1, "", "HomoskedasticCovariance"], [732, 1, 1, "", "KernelCovariance"]], "linearmodels.system.covariance.ClusteredCovariance": [[710, 2, 1, "", "cov"], [711, 2, 1, "", "cov_config"], [712, 2, 1, "", "sigma"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance": [[714, 2, 1, "", "cov"], [715, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance": [[717, 2, 1, "", "cov"], [718, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMKernelCovariance": [[720, 2, 1, "", "bandwidth"], [721, 2, 1, "", "cov"], [722, 2, 1, "", "cov_config"], [723, 2, 1, "", "kernel"]], "linearmodels.system.covariance.HeteroskedasticCovariance": [[725, 2, 1, "", "cov"], [726, 2, 1, "", "cov_config"], [727, 2, 1, "", "sigma"]], "linearmodels.system.covariance.HomoskedasticCovariance": [[729, 2, 1, "", "cov"], [730, 2, 1, "", "cov_config"], [731, 2, 1, "", "sigma"]], "linearmodels.system.covariance.KernelCovariance": [[733, 2, 1, "", "bandwidth"], [734, 2, 1, "", "cov"], [735, 2, 1, "", "cov_config"], [736, 2, 1, "", "kernel"], [737, 2, 1, "", "sigma"]], "linearmodels.system.gmm": [[738, 1, 1, "", "HeteroskedasticWeightMatrix"], [742, 1, 1, "", "HomoskedasticWeightMatrix"], [746, 1, 1, "", "KernelWeightMatrix"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix": [[739, 2, 1, "", "config"], [740, 3, 1, "", "sigma"], [741, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix": [[743, 2, 1, "", "config"], [744, 3, 1, "", "sigma"], [745, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.KernelWeightMatrix": [[747, 2, 1, "", "bandwidth"], [748, 2, 1, "", "config"], [749, 2, 1, "", "kernel"], [750, 3, 1, "", "sigma"], [751, 3, 1, "", "weight_matrix"]], "linearmodels.system.model": [[752, 1, 1, "", "IV3SLS"], [763, 1, 1, "", "IVSystemGMM"], [773, 1, 1, "", "LinearConstraint"], [778, 1, 1, "", "SUR"]], "linearmodels.system.model.IV3SLS": [[753, 3, 1, "", "add_constraints"], [754, 2, 1, "", "constraints"], [755, 3, 1, "", "fit"], [756, 2, 1, "", "formula"], [757, 3, 1, "", "from_formula"], [758, 2, 1, "", "has_constant"], [759, 3, 1, "", "multivariate_iv"], [760, 2, 1, "", "param_names"], [761, 3, 1, "", "predict"], [762, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.IVSystemGMM": [[764, 3, 1, "", "add_constraints"], [765, 2, 1, "", "constraints"], [766, 3, 1, "", "fit"], [767, 2, 1, "", "formula"], [768, 3, 1, "", "from_formula"], [769, 2, 1, "", "has_constant"], [770, 2, 1, "", "param_names"], [771, 3, 1, "", "predict"], [772, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.LinearConstraint": [[774, 2, 1, "", "a"], [775, 2, 1, "", "q"], [776, 2, 1, "", "r"], [777, 2, 1, "", "t"]], "linearmodels.system.model.SUR": [[779, 3, 1, "", "add_constraints"], [780, 2, 1, "", "constraints"], [781, 3, 1, "", "fit"], [782, 2, 1, "", "formula"], [783, 3, 1, "", "from_formula"], [784, 2, 1, "", "has_constant"], [785, 3, 1, "", "multivariate_ls"], [786, 2, 1, "", "param_names"], [787, 3, 1, "", "predict"], [788, 3, 1, "", "reset_constraints"]], "linearmodels.system.results": [[789, 1, 1, "", "GMMSystemResults"], [824, 1, 1, "", "SystemResults"]], "linearmodels.system.results.GMMSystemResults": [[790, 3, 1, "", "breusch_pagan"], [791, 3, 1, "", "conf_int"], [792, 2, 1, "", "cov"], [793, 2, 1, "", "cov_config"], [794, 2, 1, "", "cov_estimator"], [795, 2, 1, "", "debiased"], [796, 2, 1, "", "df_model"], [797, 2, 1, "", "df_resid"], [798, 2, 1, "", "equation_labels"], [799, 2, 1, "", "equations"], [800, 2, 1, "", "fitted_values"], [801, 2, 1, "", "iterations"], [802, 2, 1, "", "j_stat"], [803, 3, 1, "", "likelihood_ratio"], [804, 2, 1, "", "method"], [805, 2, 1, "", "model"], [806, 2, 1, "", "model_ss"], [807, 2, 1, "", "nobs"], [808, 2, 1, "", "params"], [809, 3, 1, "", "predict"], [810, 2, 1, "", "pvalues"], [811, 2, 1, "", "resid_ss"], [812, 2, 1, "", "resids"], [813, 2, 1, "", "rsquared"], [814, 2, 1, "", "sigma"], [815, 2, 1, "", "std_errors"], [816, 2, 1, "", "summary"], [817, 2, 1, "", "system_rsquared"], [818, 2, 1, "", "total_ss"], [819, 2, 1, "", "tstats"], [820, 2, 1, "", "w"], [821, 2, 1, "", "weight_config"], [822, 2, 1, "", "weight_type"], [823, 2, 1, "", "wresids"]], "linearmodels.system.results.SystemResults": [[825, 3, 1, "", "breusch_pagan"], [826, 3, 1, "", "conf_int"], [827, 2, 1, "", "cov"], [828, 2, 1, "", "cov_config"], [829, 2, 1, "", "cov_estimator"], [830, 2, 1, "", "debiased"], [831, 2, 1, "", "df_model"], [832, 2, 1, "", "df_resid"], [833, 2, 1, "", "equation_labels"], [834, 2, 1, "", "equations"], [835, 2, 1, "", "fitted_values"], [836, 2, 1, "", "iterations"], [837, 3, 1, "", "likelihood_ratio"], [838, 2, 1, "", "method"], [839, 2, 1, "", "model"], [840, 2, 1, "", "model_ss"], [841, 2, 1, "", "nobs"], [842, 2, 1, "", "params"], [843, 3, 1, "", "predict"], [844, 2, 1, "", "pvalues"], [845, 2, 1, "", "resid_ss"], [846, 2, 1, "", "resids"], [847, 2, 1, "", "rsquared"], [848, 2, 1, "", "sigma"], [849, 2, 1, "", "std_errors"], [850, 2, 1, "", "summary"], [851, 2, 1, "", "system_rsquared"], [852, 2, 1, "", "total_ss"], [853, 2, 1, "", "tstats"], [854, 2, 1, "", "wresids"]], "linearmodels": [[855, 0, 0, "-", "utility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"linearmodel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "asset_pr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "covari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 74, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 385, 386, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 700, 703, 704, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 856, 857, 858], "heteroskedasticcovari": [0, 1, 2, 3, 4, 5, 6, 151, 152, 153, 154, 155, 156, 429, 430, 431, 432, 433, 434, 435, 436, 724, 725, 726, 727], "config": [1, 9, 146, 152, 158, 164, 184, 187, 190, 197, 200, 739, 743, 748], "cov": [2, 10, 31, 52, 102, 147, 153, 159, 165, 191, 265, 317, 355, 398, 406, 414, 424, 432, 440, 535, 570, 624, 659, 710, 714, 717, 721, 725, 729, 734, 792, 827], "inv_jacobian": [3, 11], "jacobian": [4, 12], "s": [5, 14, 149, 155, 161, 167, 193], "squar": [6, 15, 385, 386, 701, 705, 707], "kernelcovari": [7, 8, 9, 10, 11, 12, 13, 14, 15, 163, 164, 165, 166, 167, 168, 732, 733, 734, 735, 736, 737], "bandwidth": [8, 196, 385, 423, 720, 733, 747], "kernel": [13, 385, 386, 703, 723, 736, 749], "model": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 71, 73, 74, 142, 144, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 388, 389, 391, 393, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 700, 701, 704, 705, 706, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 805, 839], "linearfactormodel": [16, 17, 18, 19], "fit": [17, 21, 25, 92, 204, 215, 226, 238, 249, 479, 487, 495, 504, 514, 522, 707, 755, 766, 781], "formula": [18, 22, 26, 70, 73, 141, 142, 205, 216, 227, 239, 250, 385, 389, 393, 480, 488, 496, 505, 515, 523, 704, 705, 756, 767, 782], "from_formula": [19, 23, 27, 206, 217, 228, 240, 251, 481, 489, 497, 506, 516, 524, 757, 768, 783], "linearfactormodelgmm": [20, 21, 22, 23], "tradedfactormodel": [24, 25, 26, 27], "result": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 140, 142, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 700, 708, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854], "gmmfactormodelresult": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "alpha": [29, 50], "beta": [30, 51], "cov_estim": [32, 53, 104, 267, 301, 319, 357, 606, 794, 829], "full_summari": [33, 54], "iter": [34, 69, 277, 703, 801, 836], "j_statist": [35, 55], "name": [36, 56, 401, 409, 417, 427, 435, 443, 546, 583, 635, 670], "nob": [37, 57, 116, 137, 282, 304, 333, 369, 461, 547, 584, 609, 636, 671, 807, 841], "param": [38, 58, 117, 283, 305, 334, 370, 548, 586, 610, 637, 672, 808, 842], "pvalu": [39, 59, 118, 285, 306, 336, 372, 550, 588, 611, 639, 674, 810, 844], "residual_ss": [40, 60], "risk_premia": [41, 61], "risk_premia_s": [42, 62], "risk_premia_tstat": [43, 63], "rsquar": [44, 64, 121, 288, 307, 339, 375, 553, 591, 612, 642, 677, 813, 847], "std_error": [45, 65, 124, 291, 309, 343, 378, 558, 597, 616, 647, 682, 815, 849], "summari": [46, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 125, 261, 292, 310, 344, 379, 559, 598, 617, 648, 683, 816, 850], "total_ss": [47, 67, 126, 293, 345, 380, 561, 600, 650, 686, 818, 852], "tstat": [48, 68, 127, 294, 311, 346, 381, 562, 601, 618, 651, 687, 819, 853], "linearfactormodelresult": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "exampl": [69, 140, 141, 388, 703], "gener": [69, 385, 386, 700, 707, 708], "setup": 69, "import": [69, 70, 140], "data": [69, 70, 140, 142, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 386, 387, 388, 389, 391, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 695, 700, 701, 703, 705], "transform": [69, 70], "portfolio": [69, 70], "excess": [69, 70], "1": [69, 75], "step": 69, "estim": [69, 73, 74, 140, 141, 142, 143, 144, 385, 386, 388, 391, 393, 700, 701, 703, 704, 705, 707, 708], "us": [69, 70, 73, 142, 388, 389, 703, 704], "seemingli": [69, 707], "unrel": [69, 707], "regress": [69, 139, 140, 388, 706, 707, 708], "sur": [69, 707, 708, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788], "2": [69, 75, 393, 707], "gmm": [69, 73, 140, 144, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 385, 386, 705, 707, 708, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751], "until": 69, "converg": 69, "continu": [69, 140, 385], "updat": [69, 140, 385, 878], "avail": 70, "syntax": 70, "test": [70, 140, 385, 700, 707, 855], "factor": [70, 71, 73], "onli": 70, "return": 70, "first": [70, 140, 385, 388, 389, 393], "second": 70, "compar": [70, 140, 142, 384, 388, 691], "linear": [71, 73, 74, 140, 385], "asset": [71, 74, 701], "price": [71, 74, 701], "introduct": [72, 144, 392], "mathemat": [73, 142, 385, 393], "detail": [73, 385, 393], "trade": 73, "The": [73, 388], "j": [73, 231], "statist": [73, 385, 707], "non": 73, "improv": 73, "specif": [73, 144, 705], "gl": [73, 703], "modul": [74, 386, 700, 701, 708], "refer": [74, 386, 700, 702, 708], "chang": [75, 140], "log": 75, "version": 75, "4": 75, "27": 75, "26": 75, "25": 75, "24": 75, "21": 75, "20": 75, "19": 75, "18": 75, "17": 75, "16": 75, "15": 75, "14": 75, "13": 75, "12": 75, "11": 75, "10": 75, "9": 75, "8": 75, "7": 75, "6": 75, "5": 75, "0": 75, "3": 75, "compat": [76, 77, 78, 79, 80, 81, 82, 83, 84], "statsmodel": [77, 78, 79, 80, 81, 82, 83, 84], "add_extra_txt": 78, "add_table_2col": 79, "add_table_param": 80, "as_csv": 81, "as_html": 82, "as_latex": 83, "as_text": 84, "contribut": 85, "indic": 86, "iv": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386], "absorb": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 386], "absorbingl": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "absorbed_depend": 88, "absorbed_exog": 89, "depend": 90, "exog": 91, "has_const": [93, 112, 207, 218, 229, 241, 252, 275, 328, 364, 482, 490, 498, 507, 517, 525, 758, 769, 784], "instrument": [94, 140, 143, 386, 701], "resid": [95, 120, 211, 222, 234, 245, 256, 287, 338, 374, 552, 590, 641, 676, 812, 846], "weight": [96, 140, 141, 385, 386, 698, 704, 707, 708], "wresid": [97, 129, 212, 223, 235, 246, 257, 299, 351, 383, 564, 604, 653, 690, 823, 854], "absorbinglsresult": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "absorbed_effect": 99, "absorbed_rsquar": 100, "conf_int": [101, 264, 316, 354, 531, 566, 620, 655, 791, 826], "cov_config": [103, 266, 318, 356, 711, 715, 718, 722, 726, 730, 735, 793, 828], "cov_typ": [105, 268, 320, 358], "debias": [106, 148, 154, 160, 166, 192, 269, 321, 359, 795, 830], "df_absorb": 107, "df_model": [108, 270, 322, 360, 536, 571, 625, 660, 796, 831], "df_resid": [109, 271, 323, 361, 537, 572, 626, 661, 797, 832], "f_statist": [110, 272, 303, 325, 362, 540, 576, 608, 629, 664], "fitted_valu": [111, 274, 327, 363, 542, 578, 631, 666, 800, 835], "idiosyncrat": [113, 276, 329, 365, 543, 579, 632, 667], "method": [114, 280, 331, 367, 385, 393, 707, 708, 804, 838], "model_ss": [115, 281, 332, 368, 545, 582, 634, 669, 806, 840], "resid_ss": [119, 286, 337, 373, 551, 589, 640, 675, 811, 845], "rsquared_adj": [122, 289, 308, 340, 376], "s2": [123, 150, 156, 162, 168, 194, 290, 341, 377, 402, 410, 418, 428, 436, 444, 557, 596, 646, 681], "wald_test": [128, 295, 347, 382, 563, 603, 652, 689], "interact": [130, 131, 132, 133, 134, 135, 136, 137, 138], "cat": 131, "cont": 132, "drop": [133, 175, 450], "from_fram": 134, "hash": 135, "isnul": [136, 176, 208, 219, 230, 242, 253, 457], "spars": 138, "includ": [139, 388], "constant": [139, 385, 389], "exclud": 139, "optim": 139, "option": [139, 144, 388, 703, 704], "further": 140, "variabl": [140, 141, 142, 143, 386, 388, 701], "2sl": [140, 144, 385], "ol": [140, 142, 389, 703], "just": 140, "identifi": 140, "multipl": [140, 142], "altern": [140, 703], "matrix": 140, "structur": [140, 386, 700], "endogen": [140, 142], "exogen": 140, "singl": 140, "stage": [140, 385, 705, 707], "diagnost": [140, 141, 259], "liml": [140, 144, 385], "iv2sl": [140, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212], "basic": [141, 142, 385, 388, 703, 707], "wage": 141, "marri": 141, "women": 141, "men": 141, "smoke": 141, "birth": 141, "proxim": 141, "educ": 141, "interfac": 141, "categor": [141, 387], "post": [141, 385], "panel": [141, 387, 388, 389, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701], "specifi": [142, 389, 704], "usag": [142, 703], "standard": [142, 385, 393], "mep": 142, "express": 142, "argument": 144, "cue": [144, 385], "clusteredcovari": [145, 146, 147, 148, 149, 150, 403, 404, 405, 406, 407, 408, 409, 410, 709, 710, 711, 712], "homoskedasticcovari": [157, 158, 159, 160, 161, 162, 437, 438, 439, 440, 441, 442, 443, 444, 728, 729, 730, 731], "kernel_optimal_bandwidth": 169, "todo": [169, 202, 213, 236], "kernel_weight_bartlett": 170, "kernel_weight_parzen": 171, "kernel_weight_quadratic_spectr": 172, "ivdata": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "col": 174, "label": [177, 704], "ndarrai": 178, "ndim": [179, 459], "panda": [180, 394], "row": 181, "shape": [182, 464, 475], "heteroskedasticweightmatrix": [183, 184, 185, 738, 739, 740, 741], "weight_matrix": [185, 188, 198, 201, 297, 741, 745, 751], "homoskedasticweightmatrix": [186, 187, 188, 742, 743, 744, 745], "ivgmmcovari": [189, 190, 191, 192, 193, 194], "kernelweightmatrix": [195, 196, 197, 198, 746, 747, 748, 749, 750, 751], "onewayclusteredweightmatrix": [199, 200, 201], "estimate_paramet": [203, 214, 225, 237, 248], "notnul": [209, 220, 232, 243, 254], "predict": [210, 221, 233, 244, 255, 284, 335, 371, 484, 492, 500, 510, 519, 527, 549, 587, 638, 673, 761, 771, 787, 809, 843], "ivgmm": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "ivgmmcu": [224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "ivliml": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "_ol": [247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "firststageresult": [258, 259, 260, 261], "individu": 260, "ivgmmresult": [262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299], "c_stat": 263, "first_stag": [273, 326], "j_stat": [278, 802], "kappa": [279, 330, 366], "weight_config": [296, 821], "weight_typ": [298, 822], "ivmodelcomparison": [300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311], "estimator_method": [302, 607], "ivresult": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352], "anderson_rubin": 313, "basmann": 314, "basmann_f": 315, "durbin": 324, "sargan": 342, "wooldridge_overid": 348, "wooldridge_regress": 349, "wooldridge_scor": 350, "wu_hausman": 352, "olsresult": [353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383], "notat": [385, 707], "paramet": [385, 388, 707], "two": 385, "least": [385, 386, 701, 705, 707], "limit": 385, "inform": 385, "maximum": 385, "likelihood": 385, "k": 385, "class": 385, "moment": [385, 707, 708], "ls": 385, "error": 385, "t": [385, 777], "p": 385, "valu": [385, 477, 879], "confid": 385, "interv": 385, "hypothesi": [385, 855], "analysi": [385, 387], "select": 385, "detect": 385, "format": 387, "multiindex": 387, "datafram": [387, 448], "numpi": 387, "arrai": 387, "xarrai": 387, "dataarrai": 387, "convers": 387, "string": 387, "dummi": [387, 388, 451], "load": [388, 389], "uncorrel": 388, "effect": [388, 389, 390, 393], "random": [388, 393], "between": [388, 389, 393], "other": [388, 704, 707], "handl": 388, "correl": [388, 393, 707], "fix": [388, 390, 393], "time": [388, 389, 465], "invari": 388, "vs": 388, "differ": [388, 389, 393], "heteroskedast": [388, 393, 703, 707], "robust": [388, 393, 703], "cluster": [388, 390, 393, 693, 703], "entiti": [388, 389, 452], "prepar": 389, "panelol": [389, 393, 394, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512], "pool": [389, 393, 703], "implement": 390, "choic": 390, "r2": 390, "definit": 390, "randomeffect": [393, 521, 522, 523, 524, 525, 526, 527, 528], "betweenol": [393, 478, 479, 480, 481, 482, 483, 484, 485], "firstdifferenceol": [393, 494, 495, 496, 497, 498, 499, 500, 501], "pooledol": [393, 513, 514, 515, 516, 517, 518, 519, 520], "unadjust": 393, "driscol": 393, "kraai": 393, "r": [393, 707, 776], "calcul": [393, 707], "betweenr": 393, "overal": [393, 707], "within": 393, "withinr": 393, "comparison": 394, "famamacbeth": [394, 486, 487, 488, 489, 490, 491, 492, 493], "accovari": [395, 396, 397, 398, 399, 400, 401, 402], "allowed_kwarg": [396, 404, 412, 420, 430, 438], "default_kernel": [397, 405, 413, 421, 431, 439], "deferred_cov": [399, 407, 415, 425, 433, 441], "ep": [400, 408, 416, 426, 434, 442], "driscollkraai": [411, 412, 413, 414, 415, 416, 417, 418], "famamacbethcovari": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "all_param": [422, 530], "paneldata": [445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469], "copi": [446, 871], "count": [447, 694], "demean": 449, "entity_id": 453, "first_differ": 454, "general_demean": 455, "index": [456, 696], "mean": 458, "nentiti": 460, "nvar": 462, "time_id": 466, "values2d": 467, "values3d": 468, "var": 469, "_panel": [470, 471, 472, 473, 474, 475, 476, 477], "from_arrai": 471, "item": [472, 873], "major_axi": 473, "minor_axi": 474, "to_fram": 476, "not_nul": [483, 491, 499, 508, 518, 526], "reformat_clust": [485, 493, 501, 511, 520, 528], "entity_effect": 503, "other_effect": [509, 697], "time_effect": 512, "famamacbethresult": [529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564], "corr_squared_between": [532, 567, 621, 656], "corr_squared_overal": [533, 568, 622, 657], "corr_squared_within": [534, 569, 623, 658], "entity_info": [538, 573, 627, 662], "estimated_effect": [539, 574, 628, 663], "f_statistic_robust": [541, 577, 630, 665], "loglik": [544, 581, 633, 668], "rsquared_between": [554, 592, 613, 643, 678], "rsquared_overal": [555, 594, 614, 644, 679], "rsquared_within": [556, 595, 615, 645, 680], "time_info": [560, 599, 649, 685], "paneleffectsresult": [565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604], "f_pool": 575, "included_effect": 580, "other_info": 585, "rsquared_inclus": 593, "variance_decomposit": [602, 688], "panelmodelcomparison": [605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618], "panelresult": [619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653], "randomeffectsresult": [654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690], "theta": 684, "util": [692, 693, 694, 695, 696, 697, 698, 699, 855, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "panelmodeldata": [692, 693, 694, 695, 696, 697, 698], "generate_panel_data": 699, "plan": 701, "univari": 701, "dynam": 701, "system": [701, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854], "hac": 703, "roger": 703, "prespecifi": [703, 704], "residu": [703, 704], "diagon": 703, "cross": 703, "equat": [703, 705, 799, 834], "restrict": 703, "constraint": [703, 754, 765, 780], "multivari": 703, "common": 703, "regressor": 703, "dictionari": 704, "curli": 704, "brace": 704, "three": [705, 707], "3sl": [705, 707, 708], "direct": 705, "simultan": 705, "sure": 707, "memori": 707, "effici": 707, "homoskedast": 707, "measur": 707, "mcelroi": 707, "berndt": 707, "judg": 707, "dhryme": 707, "sigma": [712, 727, 731, 737, 740, 744, 750, 814, 848], "gmmheteroskedasticcovari": [713, 714, 715], "gmmhomoskedasticcovari": [716, 717, 718], "gmmkernelcovari": [719, 720, 721, 722, 723], "iv3sl": [752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762], "add_constraint": [753, 764, 779], "multivariate_iv": 759, "param_nam": [760, 770, 786], "reset_constraint": [762, 772, 788], "ivsystemgmm": [763, 764, 765, 766, 767, 768, 769, 770, 771, 772], "linearconstraint": [773, 774, 775, 776, 777], "q": 775, "multivariate_l": 785, "gmmsystemresult": [789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823], "breusch_pagan": [790, 825], "equation_label": [798, 833], "likelihood_ratio": [803, 837], "system_rsquar": [817, 851], "w": 820, "systemresult": [824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854], "contain": 855, "share": [856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "cov_clust": 856, "cov_kernel": 857, "group_debias_coeffici": 858, "hypothes": [859, 860, 861, 862, 863, 864, 865, 866, 867, 868], "invalidteststatist": [859, 860, 861, 862, 863], "critical_valu": [860, 865], "null": [861, 866], "pval": [862, 867], "stat": [863, 868], "waldteststatist": [864, 865, 866, 867, 868], "attrdict": [869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879], "clear": 870, "get": 872, "kei": 874, "pop": 875, "popitem": 876, "setdefault": 877}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})