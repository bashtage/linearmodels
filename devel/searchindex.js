Search.setIndex({"docnames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.alphas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.betas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.iterations", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.name", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.nobs", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.params", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "asset-pricing/examples/examples", "asset-pricing/examples/formulas", "asset-pricing/index", "asset-pricing/introduction", "asset-pricing/mathematical-formula", "asset-pricing/reference", "changes", "compatibility", "compatibility/linearmodels.compat.statsmodels.Summary", "compatibility/linearmodels.compat.statsmodels.Summary.add_extra_txt", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_2cols", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_params", "compatibility/linearmodels.compat.statsmodels.Summary.as_csv", "compatibility/linearmodels.compat.statsmodels.Summary.as_html", "compatibility/linearmodels.compat.statsmodels.Summary.as_latex", "compatibility/linearmodels.compat.statsmodels.Summary.as_text", "contributing", "index", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.has_constant", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.hash", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.regressors", "iv/absorbing/linearmodels.iv.absorbing.Interaction", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse", "iv/examples/absorbing-regression", "iv/examples/advanced-examples", "iv/examples/basic-examples", "iv/examples/using-formulas", "iv/index", "iv/introduction", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2", "iv/iv/linearmodels.iv.covariance.KernelCovariance", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2", "iv/iv/linearmodels.iv.covariance.kernel_optimal_bandwidth", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "iv/iv/linearmodels.iv.data.IVData", "iv/iv/linearmodels.iv.data.IVData.cols", "iv/iv/linearmodels.iv.data.IVData.drop", "iv/iv/linearmodels.iv.data.IVData.isnull", "iv/iv/linearmodels.iv.data.IVData.labels", "iv/iv/linearmodels.iv.data.IVData.ndarray", "iv/iv/linearmodels.iv.data.IVData.ndim", "iv/iv/linearmodels.iv.data.IVData.pandas", "iv/iv/linearmodels.iv.data.IVData.rows", "iv/iv/linearmodels.iv.data.IVData.shape", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "iv/iv/linearmodels.iv.model.IV2SLS", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters", "iv/iv/linearmodels.iv.model.IV2SLS.fit", "iv/iv/linearmodels.iv.model.IV2SLS.formula", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant", "iv/iv/linearmodels.iv.model.IV2SLS.isnull", "iv/iv/linearmodels.iv.model.IV2SLS.notnull", "iv/iv/linearmodels.iv.model.IV2SLS.predict", "iv/iv/linearmodels.iv.model.IV2SLS.resids", "iv/iv/linearmodels.iv.model.IV2SLS.wresids", "iv/iv/linearmodels.iv.model.IVGMM", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMM.fit", "iv/iv/linearmodels.iv.model.IVGMM.formula", "iv/iv/linearmodels.iv.model.IVGMM.from_formula", "iv/iv/linearmodels.iv.model.IVGMM.has_constant", "iv/iv/linearmodels.iv.model.IVGMM.isnull", "iv/iv/linearmodels.iv.model.IVGMM.notnull", "iv/iv/linearmodels.iv.model.IVGMM.predict", "iv/iv/linearmodels.iv.model.IVGMM.resids", "iv/iv/linearmodels.iv.model.IVGMM.wresids", "iv/iv/linearmodels.iv.model.IVGMMCUE", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.j", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids", "iv/iv/linearmodels.iv.model.IVLIML", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters", "iv/iv/linearmodels.iv.model.IVLIML.fit", "iv/iv/linearmodels.iv.model.IVLIML.formula", "iv/iv/linearmodels.iv.model.IVLIML.from_formula", "iv/iv/linearmodels.iv.model.IVLIML.has_constant", "iv/iv/linearmodels.iv.model.IVLIML.isnull", "iv/iv/linearmodels.iv.model.IVLIML.notnull", "iv/iv/linearmodels.iv.model.IVLIML.predict", "iv/iv/linearmodels.iv.model.IVLIML.resids", "iv/iv/linearmodels.iv.model.IVLIML.wresids", "iv/iv/linearmodels.iv.model._OLS", "iv/iv/linearmodels.iv.model._OLS.estimate_parameters", "iv/iv/linearmodels.iv.model._OLS.fit", "iv/iv/linearmodels.iv.model._OLS.formula", "iv/iv/linearmodels.iv.model._OLS.from_formula", "iv/iv/linearmodels.iv.model._OLS.has_constant", "iv/iv/linearmodels.iv.model._OLS.isnull", "iv/iv/linearmodels.iv.model._OLS.notnull", "iv/iv/linearmodels.iv.model._OLS.predict", "iv/iv/linearmodels.iv.model._OLS.resids", "iv/iv/linearmodels.iv.model._OLS.wresids", "iv/iv/linearmodels.iv.results.FirstStageResults", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics", "iv/iv/linearmodels.iv.results.FirstStageResults.individual", "iv/iv/linearmodels.iv.results.FirstStageResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int", "iv/iv/linearmodels.iv.results.IVGMMResults.cov", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa", "iv/iv/linearmodels.iv.results.IVGMMResults.method", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs", "iv/iv/linearmodels.iv.results.IVGMMResults.params", "iv/iv/linearmodels.iv.results.IVGMMResults.predict", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.resids", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVGMMResults.s2", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors", "iv/iv/linearmodels.iv.results.IVGMMResults.summary", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids", "iv/iv/linearmodels.iv.results.IVModelComparison", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs", "iv/iv/linearmodels.iv.results.IVModelComparison.params", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors", "iv/iv/linearmodels.iv.results.IVModelComparison.summary", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats", "iv/iv/linearmodels.iv.results.IVResults", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin", "iv/iv/linearmodels.iv.results.IVResults.basmann", "iv/iv/linearmodels.iv.results.IVResults.basmann_f", "iv/iv/linearmodels.iv.results.IVResults.conf_int", "iv/iv/linearmodels.iv.results.IVResults.cov", "iv/iv/linearmodels.iv.results.IVResults.cov_config", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator", "iv/iv/linearmodels.iv.results.IVResults.cov_type", "iv/iv/linearmodels.iv.results.IVResults.debiased", "iv/iv/linearmodels.iv.results.IVResults.df_model", "iv/iv/linearmodels.iv.results.IVResults.df_resid", "iv/iv/linearmodels.iv.results.IVResults.durbin", "iv/iv/linearmodels.iv.results.IVResults.f_statistic", "iv/iv/linearmodels.iv.results.IVResults.first_stage", "iv/iv/linearmodels.iv.results.IVResults.fitted_values", "iv/iv/linearmodels.iv.results.IVResults.has_constant", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic", "iv/iv/linearmodels.iv.results.IVResults.kappa", "iv/iv/linearmodels.iv.results.IVResults.method", "iv/iv/linearmodels.iv.results.IVResults.model_ss", "iv/iv/linearmodels.iv.results.IVResults.nobs", "iv/iv/linearmodels.iv.results.IVResults.params", "iv/iv/linearmodels.iv.results.IVResults.predict", "iv/iv/linearmodels.iv.results.IVResults.pvalues", "iv/iv/linearmodels.iv.results.IVResults.resid_ss", "iv/iv/linearmodels.iv.results.IVResults.resids", "iv/iv/linearmodels.iv.results.IVResults.rsquared", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj", "iv/iv/linearmodels.iv.results.IVResults.s2", "iv/iv/linearmodels.iv.results.IVResults.sargan", "iv/iv/linearmodels.iv.results.IVResults.std_errors", "iv/iv/linearmodels.iv.results.IVResults.summary", "iv/iv/linearmodels.iv.results.IVResults.total_ss", "iv/iv/linearmodels.iv.results.IVResults.tstats", "iv/iv/linearmodels.iv.results.IVResults.wald_test", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score", "iv/iv/linearmodels.iv.results.IVResults.wresids", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman", "iv/iv/linearmodels.iv.results.OLSResults", "iv/iv/linearmodels.iv.results.OLSResults.conf_int", "iv/iv/linearmodels.iv.results.OLSResults.cov", "iv/iv/linearmodels.iv.results.OLSResults.cov_config", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator", "iv/iv/linearmodels.iv.results.OLSResults.cov_type", "iv/iv/linearmodels.iv.results.OLSResults.debiased", "iv/iv/linearmodels.iv.results.OLSResults.df_model", "iv/iv/linearmodels.iv.results.OLSResults.df_resid", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values", "iv/iv/linearmodels.iv.results.OLSResults.has_constant", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic", "iv/iv/linearmodels.iv.results.OLSResults.kappa", "iv/iv/linearmodels.iv.results.OLSResults.method", "iv/iv/linearmodels.iv.results.OLSResults.model_ss", "iv/iv/linearmodels.iv.results.OLSResults.nobs", "iv/iv/linearmodels.iv.results.OLSResults.params", "iv/iv/linearmodels.iv.results.OLSResults.predict", "iv/iv/linearmodels.iv.results.OLSResults.pvalues", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss", "iv/iv/linearmodels.iv.results.OLSResults.resids", "iv/iv/linearmodels.iv.results.OLSResults.rsquared", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj", "iv/iv/linearmodels.iv.results.OLSResults.s2", "iv/iv/linearmodels.iv.results.OLSResults.std_errors", "iv/iv/linearmodels.iv.results.OLSResults.summary", "iv/iv/linearmodels.iv.results.OLSResults.total_ss", "iv/iv/linearmodels.iv.results.OLSResults.tstats", "iv/iv/linearmodels.iv.results.OLSResults.wald_test", "iv/iv/linearmodels.iv.results.OLSResults.wresids", "iv/iv/linearmodels.iv.results.compare", "iv/mathematical-formula", "iv/reference", "panel/examples/data-formats", "panel/examples/examples", "panel/examples/using-formulas", "panel/faq", "panel/index", "panel/introduction", "panel/mathematical-formula", "panel/pandas", "panel/panel/linearmodels.panel.covariance.ACCovariance", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps", "panel/panel/linearmodels.panel.covariance.ACCovariance.name", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2", "panel/panel/linearmodels.panel.covariance.DriscollKraay", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2", "panel/panel/linearmodels.panel.data.PanelData", "panel/panel/linearmodels.panel.data.PanelData.copy", "panel/panel/linearmodels.panel.data.PanelData.count", "panel/panel/linearmodels.panel.data.PanelData.dataframe", "panel/panel/linearmodels.panel.data.PanelData.demean", "panel/panel/linearmodels.panel.data.PanelData.drop", "panel/panel/linearmodels.panel.data.PanelData.dummies", "panel/panel/linearmodels.panel.data.PanelData.entities", "panel/panel/linearmodels.panel.data.PanelData.entity_ids", "panel/panel/linearmodels.panel.data.PanelData.first_difference", "panel/panel/linearmodels.panel.data.PanelData.general_demean", "panel/panel/linearmodels.panel.data.PanelData.index", "panel/panel/linearmodels.panel.data.PanelData.isnull", "panel/panel/linearmodels.panel.data.PanelData.mean", "panel/panel/linearmodels.panel.data.PanelData.ndim", "panel/panel/linearmodels.panel.data.PanelData.nentity", "panel/panel/linearmodels.panel.data.PanelData.nobs", "panel/panel/linearmodels.panel.data.PanelData.nvar", "panel/panel/linearmodels.panel.data.PanelData.panel", "panel/panel/linearmodels.panel.data.PanelData.shape", "panel/panel/linearmodels.panel.data.PanelData.time", "panel/panel/linearmodels.panel.data.PanelData.time_ids", "panel/panel/linearmodels.panel.data.PanelData.values2d", "panel/panel/linearmodels.panel.data.PanelData.values3d", "panel/panel/linearmodels.panel.data.PanelData.vars", "panel/panel/linearmodels.panel.data._Panel", "panel/panel/linearmodels.panel.data._Panel.from_array", "panel/panel/linearmodels.panel.data._Panel.items", "panel/panel/linearmodels.panel.data._Panel.major_axis", "panel/panel/linearmodels.panel.data._Panel.minor_axis", "panel/panel/linearmodels.panel.data._Panel.shape", "panel/panel/linearmodels.panel.data._Panel.to_frame", "panel/panel/linearmodels.panel.data._Panel.values", "panel/panel/linearmodels.panel.model.BetweenOLS", "panel/panel/linearmodels.panel.model.BetweenOLS.fit", "panel/panel/linearmodels.panel.model.BetweenOLS.formula", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null", "panel/panel/linearmodels.panel.model.BetweenOLS.predict", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.FamaMacBeth", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects", "panel/panel/linearmodels.panel.model.PanelOLS.fit", "panel/panel/linearmodels.panel.model.PanelOLS.formula", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant", "panel/panel/linearmodels.panel.model.PanelOLS.not_null", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects", "panel/panel/linearmodels.panel.model.PanelOLS.predict", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects", "panel/panel/linearmodels.panel.model.PooledOLS", "panel/panel/linearmodels.panel.model.PooledOLS.fit", "panel/panel/linearmodels.panel.model.PooledOLS.formula", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant", "panel/panel/linearmodels.panel.model.PooledOLS.not_null", "panel/panel/linearmodels.panel.model.PooledOLS.predict", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters", "panel/panel/linearmodels.panel.model.RandomEffects", "panel/panel/linearmodels.panel.model.RandomEffects.fit", "panel/panel/linearmodels.panel.model.RandomEffects.formula", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant", "panel/panel/linearmodels.panel.model.RandomEffects.not_null", "panel/panel/linearmodels.panel.model.RandomEffects.predict", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters", "panel/panel/linearmodels.panel.results.FamaMacBethResults", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.avg_adj_rsquared", "panel/panel/linearmodels.panel.results.FamaMacBethResults.avg_rsquared", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids", "panel/panel/linearmodels.panel.results.PanelEffectsResults", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids", "panel/panel/linearmodels.panel.results.PanelModelComparison", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs", "panel/panel/linearmodels.panel.results.PanelModelComparison.params", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats", "panel/panel/linearmodels.panel.results.PanelResults", "panel/panel/linearmodels.panel.results.PanelResults.conf_int", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within", "panel/panel/linearmodels.panel.results.PanelResults.cov", "panel/panel/linearmodels.panel.results.PanelResults.df_model", "panel/panel/linearmodels.panel.results.PanelResults.df_resid", "panel/panel/linearmodels.panel.results.PanelResults.entity_info", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic", "panel/panel/linearmodels.panel.results.PanelResults.loglik", "panel/panel/linearmodels.panel.results.PanelResults.model_ss", "panel/panel/linearmodels.panel.results.PanelResults.name", "panel/panel/linearmodels.panel.results.PanelResults.nobs", "panel/panel/linearmodels.panel.results.PanelResults.params", "panel/panel/linearmodels.panel.results.PanelResults.predict", "panel/panel/linearmodels.panel.results.PanelResults.pvalues", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss", "panel/panel/linearmodels.panel.results.PanelResults.resids", "panel/panel/linearmodels.panel.results.PanelResults.rsquared", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within", "panel/panel/linearmodels.panel.results.PanelResults.s2", "panel/panel/linearmodels.panel.results.PanelResults.std_errors", "panel/panel/linearmodels.panel.results.PanelResults.summary", "panel/panel/linearmodels.panel.results.PanelResults.time_info", "panel/panel/linearmodels.panel.results.PanelResults.total_ss", "panel/panel/linearmodels.panel.results.PanelResults.tstats", "panel/panel/linearmodels.panel.results.PanelResults.wald_test", "panel/panel/linearmodels.panel.results.PanelResults.wresids", "panel/panel/linearmodels.panel.results.RandomEffectsResults", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids", "panel/panel/linearmodels.panel.results.compare", "panel/panel/linearmodels.panel.utility.PanelModelData", "panel/panel/linearmodels.panel.utility.PanelModelData.clusters", "panel/panel/linearmodels.panel.utility.PanelModelData.count", "panel/panel/linearmodels.panel.utility.PanelModelData.data", "panel/panel/linearmodels.panel.utility.PanelModelData.index", "panel/panel/linearmodels.panel.utility.PanelModelData.other_effects", "panel/panel/linearmodels.panel.utility.PanelModelData.weights", "panel/panel/linearmodels.panel.utility.generate_panel_data", "panel/reference", "plan", "references", "system/examples/examples", "system/examples/formulas", "system/examples/three-stage-ls", "system/index", "system/mathematical-formula", "system/reference", "system/system/linearmodels.system.covariance.ClusteredCovariance", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.HomoskedasticCovariance", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma", "system/system/linearmodels.system.covariance.KernelCovariance", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth", "system/system/linearmodels.system.covariance.KernelCovariance.cov", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config", "system/system/linearmodels.system.covariance.KernelCovariance.kernel", "system/system/linearmodels.system.covariance.KernelCovariance.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "system/system/linearmodels.system.model.IV3SLS", "system/system/linearmodels.system.model.IV3SLS.add_constraints", "system/system/linearmodels.system.model.IV3SLS.constraints", "system/system/linearmodels.system.model.IV3SLS.fit", "system/system/linearmodels.system.model.IV3SLS.formula", "system/system/linearmodels.system.model.IV3SLS.from_formula", "system/system/linearmodels.system.model.IV3SLS.has_constant", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv", "system/system/linearmodels.system.model.IV3SLS.param_names", "system/system/linearmodels.system.model.IV3SLS.predict", "system/system/linearmodels.system.model.IV3SLS.reset_constraints", "system/system/linearmodels.system.model.IVSystemGMM", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints", "system/system/linearmodels.system.model.IVSystemGMM.constraints", "system/system/linearmodels.system.model.IVSystemGMM.fit", "system/system/linearmodels.system.model.IVSystemGMM.formula", "system/system/linearmodels.system.model.IVSystemGMM.from_formula", "system/system/linearmodels.system.model.IVSystemGMM.has_constant", "system/system/linearmodels.system.model.IVSystemGMM.param_names", "system/system/linearmodels.system.model.IVSystemGMM.predict", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints", "system/system/linearmodels.system.model.LinearConstraint", "system/system/linearmodels.system.model.LinearConstraint.a", "system/system/linearmodels.system.model.LinearConstraint.q", "system/system/linearmodels.system.model.LinearConstraint.r", "system/system/linearmodels.system.model.LinearConstraint.t", "system/system/linearmodels.system.model.SUR", "system/system/linearmodels.system.model.SUR.add_constraints", "system/system/linearmodels.system.model.SUR.constraints", "system/system/linearmodels.system.model.SUR.fit", "system/system/linearmodels.system.model.SUR.formula", "system/system/linearmodels.system.model.SUR.from_formula", "system/system/linearmodels.system.model.SUR.has_constant", "system/system/linearmodels.system.model.SUR.multivariate_ls", "system/system/linearmodels.system.model.SUR.param_names", "system/system/linearmodels.system.model.SUR.predict", "system/system/linearmodels.system.model.SUR.reset_constraints", "system/system/linearmodels.system.results.GMMSystemResults", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan", "system/system/linearmodels.system.results.GMMSystemResults.conf_int", "system/system/linearmodels.system.results.GMMSystemResults.cov", "system/system/linearmodels.system.results.GMMSystemResults.cov_config", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator", "system/system/linearmodels.system.results.GMMSystemResults.debiased", "system/system/linearmodels.system.results.GMMSystemResults.df_model", "system/system/linearmodels.system.results.GMMSystemResults.df_resid", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels", "system/system/linearmodels.system.results.GMMSystemResults.equations", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values", "system/system/linearmodels.system.results.GMMSystemResults.iterations", "system/system/linearmodels.system.results.GMMSystemResults.j_stat", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio", "system/system/linearmodels.system.results.GMMSystemResults.method", "system/system/linearmodels.system.results.GMMSystemResults.model", "system/system/linearmodels.system.results.GMMSystemResults.model_ss", "system/system/linearmodels.system.results.GMMSystemResults.nobs", "system/system/linearmodels.system.results.GMMSystemResults.params", "system/system/linearmodels.system.results.GMMSystemResults.predict", "system/system/linearmodels.system.results.GMMSystemResults.pvalues", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss", "system/system/linearmodels.system.results.GMMSystemResults.resids", "system/system/linearmodels.system.results.GMMSystemResults.rsquared", "system/system/linearmodels.system.results.GMMSystemResults.sigma", "system/system/linearmodels.system.results.GMMSystemResults.std_errors", "system/system/linearmodels.system.results.GMMSystemResults.summary", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared", "system/system/linearmodels.system.results.GMMSystemResults.total_ss", "system/system/linearmodels.system.results.GMMSystemResults.tstats", "system/system/linearmodels.system.results.GMMSystemResults.w", "system/system/linearmodels.system.results.GMMSystemResults.weight_config", "system/system/linearmodels.system.results.GMMSystemResults.weight_type", "system/system/linearmodels.system.results.GMMSystemResults.wresids", "system/system/linearmodels.system.results.SystemResults", "system/system/linearmodels.system.results.SystemResults.breusch_pagan", "system/system/linearmodels.system.results.SystemResults.conf_int", "system/system/linearmodels.system.results.SystemResults.cov", "system/system/linearmodels.system.results.SystemResults.cov_config", "system/system/linearmodels.system.results.SystemResults.cov_estimator", "system/system/linearmodels.system.results.SystemResults.debiased", "system/system/linearmodels.system.results.SystemResults.df_model", "system/system/linearmodels.system.results.SystemResults.df_resid", "system/system/linearmodels.system.results.SystemResults.equation_labels", "system/system/linearmodels.system.results.SystemResults.equations", "system/system/linearmodels.system.results.SystemResults.fitted_values", "system/system/linearmodels.system.results.SystemResults.iterations", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio", "system/system/linearmodels.system.results.SystemResults.method", "system/system/linearmodels.system.results.SystemResults.model", "system/system/linearmodels.system.results.SystemResults.model_ss", "system/system/linearmodels.system.results.SystemResults.nobs", "system/system/linearmodels.system.results.SystemResults.params", "system/system/linearmodels.system.results.SystemResults.predict", "system/system/linearmodels.system.results.SystemResults.pvalues", "system/system/linearmodels.system.results.SystemResults.resid_ss", "system/system/linearmodels.system.results.SystemResults.resids", "system/system/linearmodels.system.results.SystemResults.rsquared", "system/system/linearmodels.system.results.SystemResults.sigma", "system/system/linearmodels.system.results.SystemResults.std_errors", "system/system/linearmodels.system.results.SystemResults.summary", "system/system/linearmodels.system.results.SystemResults.system_rsquared", "system/system/linearmodels.system.results.SystemResults.total_ss", "system/system/linearmodels.system.results.SystemResults.tstats", "system/system/linearmodels.system.results.SystemResults.wresids", "utility", "utility/linearmodels.shared.covariance.cov_cluster", "utility/linearmodels.shared.covariance.cov_kernel", "utility/linearmodels.shared.covariance.group_debias_coefficient", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "utility/linearmodels.shared.hypotheses.WaldTestStatistic", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat", "utility/linearmodels.shared.utility.AttrDict", "utility/linearmodels.shared.utility.AttrDict.clear", "utility/linearmodels.shared.utility.AttrDict.copy", "utility/linearmodels.shared.utility.AttrDict.get", "utility/linearmodels.shared.utility.AttrDict.items", "utility/linearmodels.shared.utility.AttrDict.keys", "utility/linearmodels.shared.utility.AttrDict.pop", "utility/linearmodels.shared.utility.AttrDict.popitem", "utility/linearmodels.shared.utility.AttrDict.setdefault", "utility/linearmodels.shared.utility.AttrDict.update", "utility/linearmodels.shared.utility.AttrDict.values"], "filenames": ["asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.config.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.jacobian.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.kernel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.s.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.covariance.KernelCovariance.square.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.fit.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.model.TradedFactorModel.from_formula.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.alphas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.betas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.iterations.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.name.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.nobs.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.params.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.GMMFactorModelResults.tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.alphas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.betas.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.name.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.nobs.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.params.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.summary.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss.rst", "asset-pricing/asset-pricing/linearmodels.asset_pricing.results.LinearFactorModelResults.tstats.rst", "asset-pricing/examples/examples.ipynb", "asset-pricing/examples/formulas.ipynb", "asset-pricing/index.rst", "asset-pricing/introduction.rst", "asset-pricing/mathematical-formula.rst", "asset-pricing/reference.rst", "changes.rst", "compatibility.rst", "compatibility/linearmodels.compat.statsmodels.Summary.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_extra_txt.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_2cols.rst", "compatibility/linearmodels.compat.statsmodels.Summary.add_table_params.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_csv.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_html.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_latex.rst", "compatibility/linearmodels.compat.statsmodels.Summary.as_text.rst", "contributing.rst", "index.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.dependent.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.exog.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.fit.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.instruments.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.weights.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLS.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.conf_int.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_config.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.cov_type.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.debiased.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_model.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.df_resid.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.method.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.model_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.params.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.pvalues.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.resids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.s2.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.std_errors.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.summary.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.total_ss.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.tstats.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wald_test.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingLSResults.wresids.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.has_constant.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.hash.rst", "iv/absorbing/linearmodels.iv.absorbing.AbsorbingRegressor.regressors.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cat.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.cont.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.drop.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.from_frame.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.hash.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.isnull.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.nobs.rst", "iv/absorbing/linearmodels.iv.absorbing.Interaction.sparse.rst", "iv/examples/absorbing-regression.ipynb", "iv/examples/advanced-examples.ipynb", "iv/examples/basic-examples.ipynb", "iv/examples/using-formulas.ipynb", "iv/index.rst", "iv/introduction.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.ClusteredCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HeteroskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.HomoskedasticCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.config.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.cov.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.debiased.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s.rst", "iv/iv/linearmodels.iv.covariance.KernelCovariance.s2.rst", "iv/iv/linearmodels.iv.covariance.kernel_optimal_bandwidth.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_bartlett.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_parzen.rst", "iv/iv/linearmodels.iv.covariance.kernel_weight_quadratic_spectral.rst", "iv/iv/linearmodels.iv.data.IVData.rst", "iv/iv/linearmodels.iv.data.IVData.cols.rst", "iv/iv/linearmodels.iv.data.IVData.drop.rst", "iv/iv/linearmodels.iv.data.IVData.isnull.rst", "iv/iv/linearmodels.iv.data.IVData.labels.rst", "iv/iv/linearmodels.iv.data.IVData.ndarray.rst", "iv/iv/linearmodels.iv.data.IVData.ndim.rst", "iv/iv/linearmodels.iv.data.IVData.pandas.rst", "iv/iv/linearmodels.iv.data.IVData.rows.rst", "iv/iv/linearmodels.iv.data.IVData.shape.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.config.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.cov.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.debiased.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s.rst", "iv/iv/linearmodels.iv.gmm.IVGMMCovariance.s2.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.bandwidth.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config.rst", "iv/iv/linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix.rst", "iv/iv/linearmodels.iv.model.IV2SLS.rst", "iv/iv/linearmodels.iv.model.IV2SLS.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IV2SLS.fit.rst", "iv/iv/linearmodels.iv.model.IV2SLS.formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.from_formula.rst", "iv/iv/linearmodels.iv.model.IV2SLS.has_constant.rst", "iv/iv/linearmodels.iv.model.IV2SLS.isnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.notnull.rst", "iv/iv/linearmodels.iv.model.IV2SLS.predict.rst", "iv/iv/linearmodels.iv.model.IV2SLS.resids.rst", "iv/iv/linearmodels.iv.model.IV2SLS.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMM.rst", "iv/iv/linearmodels.iv.model.IVGMM.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMM.fit.rst", "iv/iv/linearmodels.iv.model.IVGMM.formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMM.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMM.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMM.predict.rst", "iv/iv/linearmodels.iv.model.IVGMM.resids.rst", "iv/iv/linearmodels.iv.model.IVGMM.wresids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.fit.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.from_formula.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.has_constant.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.isnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.j.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.notnull.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.predict.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.resids.rst", "iv/iv/linearmodels.iv.model.IVGMMCUE.wresids.rst", "iv/iv/linearmodels.iv.model.IVLIML.rst", "iv/iv/linearmodels.iv.model.IVLIML.estimate_parameters.rst", "iv/iv/linearmodels.iv.model.IVLIML.fit.rst", "iv/iv/linearmodels.iv.model.IVLIML.formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.from_formula.rst", "iv/iv/linearmodels.iv.model.IVLIML.has_constant.rst", "iv/iv/linearmodels.iv.model.IVLIML.isnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.notnull.rst", "iv/iv/linearmodels.iv.model.IVLIML.predict.rst", "iv/iv/linearmodels.iv.model.IVLIML.resids.rst", "iv/iv/linearmodels.iv.model.IVLIML.wresids.rst", "iv/iv/linearmodels.iv.model._OLS.rst", "iv/iv/linearmodels.iv.model._OLS.estimate_parameters.rst", "iv/iv/linearmodels.iv.model._OLS.fit.rst", "iv/iv/linearmodels.iv.model._OLS.formula.rst", "iv/iv/linearmodels.iv.model._OLS.from_formula.rst", "iv/iv/linearmodels.iv.model._OLS.has_constant.rst", "iv/iv/linearmodels.iv.model._OLS.isnull.rst", "iv/iv/linearmodels.iv.model._OLS.notnull.rst", "iv/iv/linearmodels.iv.model._OLS.predict.rst", "iv/iv/linearmodels.iv.model._OLS.resids.rst", "iv/iv/linearmodels.iv.model._OLS.wresids.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.diagnostics.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.individual.rst", "iv/iv/linearmodels.iv.results.FirstStageResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.c_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.iterations.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.j_stat.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.method.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.params.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.predict.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.resids.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.s2.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.summary.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_config.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_matrix.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.weight_type.rst", "iv/iv/linearmodels.iv.results.IVGMMResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.estimator_method.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.nobs.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.params.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.pvalues.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.std_errors.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.summary.rst", "iv/iv/linearmodels.iv.results.IVModelComparison.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.rst", "iv/iv/linearmodels.iv.results.IVResults.anderson_rubin.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann.rst", "iv/iv/linearmodels.iv.results.IVResults.basmann_f.rst", "iv/iv/linearmodels.iv.results.IVResults.conf_int.rst", "iv/iv/linearmodels.iv.results.IVResults.cov.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_config.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.IVResults.cov_type.rst", "iv/iv/linearmodels.iv.results.IVResults.debiased.rst", "iv/iv/linearmodels.iv.results.IVResults.df_model.rst", "iv/iv/linearmodels.iv.results.IVResults.df_resid.rst", "iv/iv/linearmodels.iv.results.IVResults.durbin.rst", "iv/iv/linearmodels.iv.results.IVResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.IVResults.first_stage.rst", "iv/iv/linearmodels.iv.results.IVResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.IVResults.has_constant.rst", "iv/iv/linearmodels.iv.results.IVResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.IVResults.kappa.rst", "iv/iv/linearmodels.iv.results.IVResults.method.rst", "iv/iv/linearmodels.iv.results.IVResults.model_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.nobs.rst", "iv/iv/linearmodels.iv.results.IVResults.params.rst", "iv/iv/linearmodels.iv.results.IVResults.predict.rst", "iv/iv/linearmodels.iv.results.IVResults.pvalues.rst", "iv/iv/linearmodels.iv.results.IVResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.resids.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared.rst", "iv/iv/linearmodels.iv.results.IVResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.IVResults.s2.rst", "iv/iv/linearmodels.iv.results.IVResults.sargan.rst", "iv/iv/linearmodels.iv.results.IVResults.std_errors.rst", "iv/iv/linearmodels.iv.results.IVResults.summary.rst", "iv/iv/linearmodels.iv.results.IVResults.total_ss.rst", "iv/iv/linearmodels.iv.results.IVResults.tstats.rst", "iv/iv/linearmodels.iv.results.IVResults.wald_test.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_overid.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_regression.rst", "iv/iv/linearmodels.iv.results.IVResults.wooldridge_score.rst", "iv/iv/linearmodels.iv.results.IVResults.wresids.rst", "iv/iv/linearmodels.iv.results.IVResults.wu_hausman.rst", "iv/iv/linearmodels.iv.results.OLSResults.rst", "iv/iv/linearmodels.iv.results.OLSResults.conf_int.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_config.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_estimator.rst", "iv/iv/linearmodels.iv.results.OLSResults.cov_type.rst", "iv/iv/linearmodels.iv.results.OLSResults.debiased.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_model.rst", "iv/iv/linearmodels.iv.results.OLSResults.df_resid.rst", "iv/iv/linearmodels.iv.results.OLSResults.f_statistic.rst", "iv/iv/linearmodels.iv.results.OLSResults.fitted_values.rst", "iv/iv/linearmodels.iv.results.OLSResults.has_constant.rst", "iv/iv/linearmodels.iv.results.OLSResults.idiosyncratic.rst", "iv/iv/linearmodels.iv.results.OLSResults.kappa.rst", "iv/iv/linearmodels.iv.results.OLSResults.method.rst", "iv/iv/linearmodels.iv.results.OLSResults.model_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.nobs.rst", "iv/iv/linearmodels.iv.results.OLSResults.params.rst", "iv/iv/linearmodels.iv.results.OLSResults.predict.rst", "iv/iv/linearmodels.iv.results.OLSResults.pvalues.rst", "iv/iv/linearmodels.iv.results.OLSResults.resid_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.resids.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared.rst", "iv/iv/linearmodels.iv.results.OLSResults.rsquared_adj.rst", "iv/iv/linearmodels.iv.results.OLSResults.s2.rst", "iv/iv/linearmodels.iv.results.OLSResults.std_errors.rst", "iv/iv/linearmodels.iv.results.OLSResults.summary.rst", "iv/iv/linearmodels.iv.results.OLSResults.total_ss.rst", "iv/iv/linearmodels.iv.results.OLSResults.tstats.rst", "iv/iv/linearmodels.iv.results.OLSResults.wald_test.rst", "iv/iv/linearmodels.iv.results.OLSResults.wresids.rst", "iv/iv/linearmodels.iv.results.compare.rst", "iv/mathematical-formula.rst", "iv/reference.rst", "panel/examples/data-formats.ipynb", "panel/examples/examples.ipynb", "panel/examples/using-formulas.ipynb", "panel/faq.rst", "panel/index.rst", "panel/introduction.rst", "panel/mathematical-formula.rst", "panel/pandas.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ACCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.ClusteredCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.eps.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.name.rst", "panel/panel/linearmodels.panel.covariance.DriscollKraay.s2.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.all_params.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.FamaMacBethCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HeteroskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.eps.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.name.rst", "panel/panel/linearmodels.panel.covariance.HomoskedasticCovariance.s2.rst", "panel/panel/linearmodels.panel.data.PanelData.rst", "panel/panel/linearmodels.panel.data.PanelData.copy.rst", "panel/panel/linearmodels.panel.data.PanelData.count.rst", "panel/panel/linearmodels.panel.data.PanelData.dataframe.rst", "panel/panel/linearmodels.panel.data.PanelData.demean.rst", "panel/panel/linearmodels.panel.data.PanelData.drop.rst", "panel/panel/linearmodels.panel.data.PanelData.dummies.rst", "panel/panel/linearmodels.panel.data.PanelData.entities.rst", "panel/panel/linearmodels.panel.data.PanelData.entity_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.first_difference.rst", "panel/panel/linearmodels.panel.data.PanelData.general_demean.rst", "panel/panel/linearmodels.panel.data.PanelData.index.rst", "panel/panel/linearmodels.panel.data.PanelData.isnull.rst", "panel/panel/linearmodels.panel.data.PanelData.mean.rst", "panel/panel/linearmodels.panel.data.PanelData.ndim.rst", "panel/panel/linearmodels.panel.data.PanelData.nentity.rst", "panel/panel/linearmodels.panel.data.PanelData.nobs.rst", "panel/panel/linearmodels.panel.data.PanelData.nvar.rst", "panel/panel/linearmodels.panel.data.PanelData.panel.rst", "panel/panel/linearmodels.panel.data.PanelData.shape.rst", "panel/panel/linearmodels.panel.data.PanelData.time.rst", "panel/panel/linearmodels.panel.data.PanelData.time_ids.rst", "panel/panel/linearmodels.panel.data.PanelData.values2d.rst", "panel/panel/linearmodels.panel.data.PanelData.values3d.rst", "panel/panel/linearmodels.panel.data.PanelData.vars.rst", "panel/panel/linearmodels.panel.data._Panel.rst", "panel/panel/linearmodels.panel.data._Panel.from_array.rst", "panel/panel/linearmodels.panel.data._Panel.items.rst", "panel/panel/linearmodels.panel.data._Panel.major_axis.rst", "panel/panel/linearmodels.panel.data._Panel.minor_axis.rst", "panel/panel/linearmodels.panel.data._Panel.shape.rst", "panel/panel/linearmodels.panel.data._Panel.to_frame.rst", "panel/panel/linearmodels.panel.data._Panel.values.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.fit.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.not_null.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.predict.rst", "panel/panel/linearmodels.panel.model.BetweenOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.fit.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.from_formula.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.has_constant.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.not_null.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.predict.rst", "panel/panel/linearmodels.panel.model.FamaMacBeth.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.fit.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.not_null.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.predict.rst", "panel/panel/linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.rst", "panel/panel/linearmodels.panel.model.PanelOLS.entity_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.fit.rst", "panel/panel/linearmodels.panel.model.PanelOLS.formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PanelOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PanelOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PanelOLS.other_effects.rst", "panel/panel/linearmodels.panel.model.PanelOLS.predict.rst", "panel/panel/linearmodels.panel.model.PanelOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.PanelOLS.time_effects.rst", "panel/panel/linearmodels.panel.model.PooledOLS.rst", "panel/panel/linearmodels.panel.model.PooledOLS.fit.rst", "panel/panel/linearmodels.panel.model.PooledOLS.formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.from_formula.rst", "panel/panel/linearmodels.panel.model.PooledOLS.has_constant.rst", "panel/panel/linearmodels.panel.model.PooledOLS.not_null.rst", "panel/panel/linearmodels.panel.model.PooledOLS.predict.rst", "panel/panel/linearmodels.panel.model.PooledOLS.reformat_clusters.rst", "panel/panel/linearmodels.panel.model.RandomEffects.rst", "panel/panel/linearmodels.panel.model.RandomEffects.fit.rst", "panel/panel/linearmodels.panel.model.RandomEffects.formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.from_formula.rst", "panel/panel/linearmodels.panel.model.RandomEffects.has_constant.rst", "panel/panel/linearmodels.panel.model.RandomEffects.not_null.rst", "panel/panel/linearmodels.panel.model.RandomEffects.predict.rst", "panel/panel/linearmodels.panel.model.RandomEffects.reformat_clusters.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.all_params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.avg_adj_rsquared.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.avg_rsquared.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.conf_int.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.cov.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_model.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.df_resid.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.entity_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.loglik.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.model_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.name.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.nobs.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.params.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.predict.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.pvalues.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.resids.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.s2.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.std_errors.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.summary.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.time_info.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.total_ss.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.tstats.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wald_test.rst", "panel/panel/linearmodels.panel.results.FamaMacBethResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_pooled.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.included_effects.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.other_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.cov_estimator.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.estimator_method.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.nobs.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.params.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.summary.rst", "panel/panel/linearmodels.panel.results.PanelModelComparison.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.rst", "panel/panel/linearmodels.panel.results.PanelResults.conf_int.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.cov.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_model.rst", "panel/panel/linearmodels.panel.results.PanelResults.df_resid.rst", "panel/panel/linearmodels.panel.results.PanelResults.entity_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.PanelResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.PanelResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.PanelResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.PanelResults.loglik.rst", "panel/panel/linearmodels.panel.results.PanelResults.model_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.name.rst", "panel/panel/linearmodels.panel.results.PanelResults.nobs.rst", "panel/panel/linearmodels.panel.results.PanelResults.params.rst", "panel/panel/linearmodels.panel.results.PanelResults.predict.rst", "panel/panel/linearmodels.panel.results.PanelResults.pvalues.rst", "panel/panel/linearmodels.panel.results.PanelResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.resids.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.PanelResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.PanelResults.s2.rst", "panel/panel/linearmodels.panel.results.PanelResults.std_errors.rst", "panel/panel/linearmodels.panel.results.PanelResults.summary.rst", "panel/panel/linearmodels.panel.results.PanelResults.time_info.rst", "panel/panel/linearmodels.panel.results.PanelResults.total_ss.rst", "panel/panel/linearmodels.panel.results.PanelResults.tstats.rst", "panel/panel/linearmodels.panel.results.PanelResults.wald_test.rst", "panel/panel/linearmodels.panel.results.PanelResults.wresids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.conf_int.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.corr_squared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.cov.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_model.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.df_resid.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.entity_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.estimated_effects.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.f_statistic_robust.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.fitted_values.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.idiosyncratic.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.loglik.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.model_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.name.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.nobs.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.params.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.predict.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.pvalues.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resid_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.resids.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_between.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_overall.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.rsquared_within.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.s2.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.std_errors.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.summary.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.theta.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.time_info.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.total_ss.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.tstats.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.variance_decomposition.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wald_test.rst", "panel/panel/linearmodels.panel.results.RandomEffectsResults.wresids.rst", "panel/panel/linearmodels.panel.results.compare.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.clusters.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.count.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.data.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.index.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.other_effects.rst", "panel/panel/linearmodels.panel.utility.PanelModelData.weights.rst", "panel/panel/linearmodels.panel.utility.generate_panel_data.rst", "panel/reference.rst", "plan.rst", "references.rst", "system/examples/examples.ipynb", "system/examples/formulas.ipynb", "system/examples/three-stage-ls.ipynb", "system/index.rst", "system/mathematical-formula.rst", "system/reference.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.ClusteredCovariance.sigma.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.GMMKernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HeteroskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.HomoskedasticCovariance.sigma.rst", "system/system/linearmodels.system.covariance.KernelCovariance.rst", "system/system/linearmodels.system.covariance.KernelCovariance.bandwidth.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov.rst", "system/system/linearmodels.system.covariance.KernelCovariance.cov_config.rst", "system/system/linearmodels.system.covariance.KernelCovariance.kernel.rst", "system/system/linearmodels.system.covariance.KernelCovariance.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.bandwidth.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.config.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.kernel.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.sigma.rst", "system/system/linearmodels.system.gmm.KernelWeightMatrix.weight_matrix.rst", "system/system/linearmodels.system.model.IV3SLS.rst", "system/system/linearmodels.system.model.IV3SLS.add_constraints.rst", "system/system/linearmodels.system.model.IV3SLS.constraints.rst", "system/system/linearmodels.system.model.IV3SLS.fit.rst", "system/system/linearmodels.system.model.IV3SLS.formula.rst", "system/system/linearmodels.system.model.IV3SLS.from_formula.rst", "system/system/linearmodels.system.model.IV3SLS.has_constant.rst", "system/system/linearmodels.system.model.IV3SLS.multivariate_iv.rst", "system/system/linearmodels.system.model.IV3SLS.param_names.rst", "system/system/linearmodels.system.model.IV3SLS.predict.rst", "system/system/linearmodels.system.model.IV3SLS.reset_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.rst", "system/system/linearmodels.system.model.IVSystemGMM.add_constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.constraints.rst", "system/system/linearmodels.system.model.IVSystemGMM.fit.rst", "system/system/linearmodels.system.model.IVSystemGMM.formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.from_formula.rst", "system/system/linearmodels.system.model.IVSystemGMM.has_constant.rst", "system/system/linearmodels.system.model.IVSystemGMM.param_names.rst", "system/system/linearmodels.system.model.IVSystemGMM.predict.rst", "system/system/linearmodels.system.model.IVSystemGMM.reset_constraints.rst", "system/system/linearmodels.system.model.LinearConstraint.rst", "system/system/linearmodels.system.model.LinearConstraint.a.rst", "system/system/linearmodels.system.model.LinearConstraint.q.rst", "system/system/linearmodels.system.model.LinearConstraint.r.rst", "system/system/linearmodels.system.model.LinearConstraint.t.rst", "system/system/linearmodels.system.model.SUR.rst", "system/system/linearmodels.system.model.SUR.add_constraints.rst", "system/system/linearmodels.system.model.SUR.constraints.rst", "system/system/linearmodels.system.model.SUR.fit.rst", "system/system/linearmodels.system.model.SUR.formula.rst", "system/system/linearmodels.system.model.SUR.from_formula.rst", "system/system/linearmodels.system.model.SUR.has_constant.rst", "system/system/linearmodels.system.model.SUR.multivariate_ls.rst", "system/system/linearmodels.system.model.SUR.param_names.rst", "system/system/linearmodels.system.model.SUR.predict.rst", "system/system/linearmodels.system.model.SUR.reset_constraints.rst", "system/system/linearmodels.system.results.GMMSystemResults.rst", "system/system/linearmodels.system.results.GMMSystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.GMMSystemResults.conf_int.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.GMMSystemResults.debiased.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_model.rst", "system/system/linearmodels.system.results.GMMSystemResults.df_resid.rst", "system/system/linearmodels.system.results.GMMSystemResults.equation_labels.rst", "system/system/linearmodels.system.results.GMMSystemResults.equations.rst", "system/system/linearmodels.system.results.GMMSystemResults.fitted_values.rst", "system/system/linearmodels.system.results.GMMSystemResults.iterations.rst", "system/system/linearmodels.system.results.GMMSystemResults.j_stat.rst", "system/system/linearmodels.system.results.GMMSystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.GMMSystemResults.method.rst", "system/system/linearmodels.system.results.GMMSystemResults.model.rst", "system/system/linearmodels.system.results.GMMSystemResults.model_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.nobs.rst", "system/system/linearmodels.system.results.GMMSystemResults.params.rst", "system/system/linearmodels.system.results.GMMSystemResults.predict.rst", "system/system/linearmodels.system.results.GMMSystemResults.pvalues.rst", "system/system/linearmodels.system.results.GMMSystemResults.resid_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.resids.rst", "system/system/linearmodels.system.results.GMMSystemResults.rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.sigma.rst", "system/system/linearmodels.system.results.GMMSystemResults.std_errors.rst", "system/system/linearmodels.system.results.GMMSystemResults.summary.rst", "system/system/linearmodels.system.results.GMMSystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.GMMSystemResults.total_ss.rst", "system/system/linearmodels.system.results.GMMSystemResults.tstats.rst", "system/system/linearmodels.system.results.GMMSystemResults.w.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_config.rst", "system/system/linearmodels.system.results.GMMSystemResults.weight_type.rst", "system/system/linearmodels.system.results.GMMSystemResults.wresids.rst", "system/system/linearmodels.system.results.SystemResults.rst", "system/system/linearmodels.system.results.SystemResults.breusch_pagan.rst", "system/system/linearmodels.system.results.SystemResults.conf_int.rst", "system/system/linearmodels.system.results.SystemResults.cov.rst", "system/system/linearmodels.system.results.SystemResults.cov_config.rst", "system/system/linearmodels.system.results.SystemResults.cov_estimator.rst", "system/system/linearmodels.system.results.SystemResults.debiased.rst", "system/system/linearmodels.system.results.SystemResults.df_model.rst", "system/system/linearmodels.system.results.SystemResults.df_resid.rst", "system/system/linearmodels.system.results.SystemResults.equation_labels.rst", "system/system/linearmodels.system.results.SystemResults.equations.rst", "system/system/linearmodels.system.results.SystemResults.fitted_values.rst", "system/system/linearmodels.system.results.SystemResults.iterations.rst", "system/system/linearmodels.system.results.SystemResults.likelihood_ratio.rst", "system/system/linearmodels.system.results.SystemResults.method.rst", "system/system/linearmodels.system.results.SystemResults.model.rst", "system/system/linearmodels.system.results.SystemResults.model_ss.rst", "system/system/linearmodels.system.results.SystemResults.nobs.rst", "system/system/linearmodels.system.results.SystemResults.params.rst", "system/system/linearmodels.system.results.SystemResults.predict.rst", "system/system/linearmodels.system.results.SystemResults.pvalues.rst", "system/system/linearmodels.system.results.SystemResults.resid_ss.rst", "system/system/linearmodels.system.results.SystemResults.resids.rst", "system/system/linearmodels.system.results.SystemResults.rsquared.rst", "system/system/linearmodels.system.results.SystemResults.sigma.rst", "system/system/linearmodels.system.results.SystemResults.std_errors.rst", "system/system/linearmodels.system.results.SystemResults.summary.rst", "system/system/linearmodels.system.results.SystemResults.system_rsquared.rst", "system/system/linearmodels.system.results.SystemResults.total_ss.rst", "system/system/linearmodels.system.results.SystemResults.tstats.rst", "system/system/linearmodels.system.results.SystemResults.wresids.rst", "utility.rst", "utility/linearmodels.shared.covariance.cov_cluster.rst", "utility/linearmodels.shared.covariance.cov_kernel.rst", "utility/linearmodels.shared.covariance.group_debias_coefficient.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.InvalidTestStatistic.stat.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.critical_values.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.null.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.pval.rst", "utility/linearmodels.shared.hypotheses.WaldTestStatistic.stat.rst", "utility/linearmodels.shared.utility.AttrDict.rst", "utility/linearmodels.shared.utility.AttrDict.clear.rst", "utility/linearmodels.shared.utility.AttrDict.copy.rst", "utility/linearmodels.shared.utility.AttrDict.get.rst", "utility/linearmodels.shared.utility.AttrDict.items.rst", "utility/linearmodels.shared.utility.AttrDict.keys.rst", "utility/linearmodels.shared.utility.AttrDict.pop.rst", "utility/linearmodels.shared.utility.AttrDict.popitem.rst", "utility/linearmodels.shared.utility.AttrDict.setdefault.rst", "utility/linearmodels.shared.utility.AttrDict.update.rst", "utility/linearmodels.shared.utility.AttrDict.values.rst"], "titles": ["linearmodels.asset_pricing.covariance.HeteroskedasticCovariance", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s", "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square", "linearmodels.asset_pricing.covariance.KernelCovariance", "linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth", "linearmodels.asset_pricing.covariance.KernelCovariance.config", "linearmodels.asset_pricing.covariance.KernelCovariance.cov", "linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.jacobian", "linearmodels.asset_pricing.covariance.KernelCovariance.kernel", "linearmodels.asset_pricing.covariance.KernelCovariance.s", "linearmodels.asset_pricing.covariance.KernelCovariance.square", "linearmodels.asset_pricing.model.LinearFactorModel", "linearmodels.asset_pricing.model.LinearFactorModel.fit", "linearmodels.asset_pricing.model.LinearFactorModel.formula", "linearmodels.asset_pricing.model.LinearFactorModel.from_formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM", "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit", "linearmodels.asset_pricing.model.LinearFactorModelGMM.formula", "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula", "linearmodels.asset_pricing.model.TradedFactorModel", "linearmodels.asset_pricing.model.TradedFactorModel.fit", "linearmodels.asset_pricing.model.TradedFactorModel.formula", "linearmodels.asset_pricing.model.TradedFactorModel.from_formula", "linearmodels.asset_pricing.results.GMMFactorModelResults", "linearmodels.asset_pricing.results.GMMFactorModelResults.alphas", "linearmodels.asset_pricing.results.GMMFactorModelResults.betas", "linearmodels.asset_pricing.results.GMMFactorModelResults.cov", "linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator", "linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary", "linearmodels.asset_pricing.results.GMMFactorModelResults.iterations", "linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic", "linearmodels.asset_pricing.results.GMMFactorModelResults.name", "linearmodels.asset_pricing.results.GMMFactorModelResults.nobs", "linearmodels.asset_pricing.results.GMMFactorModelResults.params", "linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues", "linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se", "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats", "linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared", "linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors", "linearmodels.asset_pricing.results.GMMFactorModelResults.summary", "linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss", "linearmodels.asset_pricing.results.GMMFactorModelResults.tstats", "linearmodels.asset_pricing.results.LinearFactorModelResults", "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas", "linearmodels.asset_pricing.results.LinearFactorModelResults.betas", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov", "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator", "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic", "linearmodels.asset_pricing.results.LinearFactorModelResults.name", "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs", "linearmodels.asset_pricing.results.LinearFactorModelResults.params", "linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues", "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se", "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats", "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared", "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors", "linearmodels.asset_pricing.results.LinearFactorModelResults.summary", "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss", "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats", "Examples", "Using Formulas", "Linear Factor Models for Asset Pricing", "Introduction", "Formulas and Mathematical Detail", "Module Reference", "Change Log", "Compatibility", "linearmodels.compat.statsmodels.Summary", "linearmodels.compat.statsmodels.Summary.add_extra_txt", "linearmodels.compat.statsmodels.Summary.add_table_2cols", "linearmodels.compat.statsmodels.Summary.add_table_params", "linearmodels.compat.statsmodels.Summary.as_csv", "linearmodels.compat.statsmodels.Summary.as_html", "linearmodels.compat.statsmodels.Summary.as_latex", "linearmodels.compat.statsmodels.Summary.as_text", "Contributing", "linearmodels", "linearmodels.iv.absorbing.AbsorbingLS", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent", "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog", "linearmodels.iv.absorbing.AbsorbingLS.dependent", "linearmodels.iv.absorbing.AbsorbingLS.exog", "linearmodels.iv.absorbing.AbsorbingLS.fit", "linearmodels.iv.absorbing.AbsorbingLS.has_constant", "linearmodels.iv.absorbing.AbsorbingLS.instruments", "linearmodels.iv.absorbing.AbsorbingLS.resids", "linearmodels.iv.absorbing.AbsorbingLS.weights", "linearmodels.iv.absorbing.AbsorbingLS.wresids", "linearmodels.iv.absorbing.AbsorbingLSResults", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects", "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.conf_int", "linearmodels.iv.absorbing.AbsorbingLSResults.cov", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_config", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator", "linearmodels.iv.absorbing.AbsorbingLSResults.cov_type", "linearmodels.iv.absorbing.AbsorbingLSResults.debiased", "linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed", "linearmodels.iv.absorbing.AbsorbingLSResults.df_model", "linearmodels.iv.absorbing.AbsorbingLSResults.df_resid", "linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic", "linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values", "linearmodels.iv.absorbing.AbsorbingLSResults.has_constant", "linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic", "linearmodels.iv.absorbing.AbsorbingLSResults.method", "linearmodels.iv.absorbing.AbsorbingLSResults.model_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.nobs", "linearmodels.iv.absorbing.AbsorbingLSResults.params", "linearmodels.iv.absorbing.AbsorbingLSResults.pvalues", "linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.resids", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared", "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj", "linearmodels.iv.absorbing.AbsorbingLSResults.s2", "linearmodels.iv.absorbing.AbsorbingLSResults.std_errors", "linearmodels.iv.absorbing.AbsorbingLSResults.summary", "linearmodels.iv.absorbing.AbsorbingLSResults.total_ss", "linearmodels.iv.absorbing.AbsorbingLSResults.tstats", "linearmodels.iv.absorbing.AbsorbingLSResults.wald_test", "linearmodels.iv.absorbing.AbsorbingLSResults.wresids", "linearmodels.iv.absorbing.AbsorbingRegressor", "linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank", "linearmodels.iv.absorbing.AbsorbingRegressor.has_constant", "linearmodels.iv.absorbing.AbsorbingRegressor.hash", "linearmodels.iv.absorbing.AbsorbingRegressor.regressors", "linearmodels.iv.absorbing.Interaction", "linearmodels.iv.absorbing.Interaction.cat", "linearmodels.iv.absorbing.Interaction.cont", "linearmodels.iv.absorbing.Interaction.drop", "linearmodels.iv.absorbing.Interaction.from_frame", "linearmodels.iv.absorbing.Interaction.hash", "linearmodels.iv.absorbing.Interaction.isnull", "linearmodels.iv.absorbing.Interaction.nobs", "linearmodels.iv.absorbing.Interaction.sparse", "Absorbing Regression", "Further Examples", "Basic Examples", "Using formulas to specify models", "Instrumental Variable Estimation", "Introduction", "linearmodels.iv.covariance.ClusteredCovariance", "linearmodels.iv.covariance.ClusteredCovariance.config", "linearmodels.iv.covariance.ClusteredCovariance.cov", "linearmodels.iv.covariance.ClusteredCovariance.debiased", "linearmodels.iv.covariance.ClusteredCovariance.s", "linearmodels.iv.covariance.ClusteredCovariance.s2", "linearmodels.iv.covariance.HeteroskedasticCovariance", "linearmodels.iv.covariance.HeteroskedasticCovariance.config", "linearmodels.iv.covariance.HeteroskedasticCovariance.cov", "linearmodels.iv.covariance.HeteroskedasticCovariance.debiased", "linearmodels.iv.covariance.HeteroskedasticCovariance.s", "linearmodels.iv.covariance.HeteroskedasticCovariance.s2", "linearmodels.iv.covariance.HomoskedasticCovariance", "linearmodels.iv.covariance.HomoskedasticCovariance.config", "linearmodels.iv.covariance.HomoskedasticCovariance.cov", "linearmodels.iv.covariance.HomoskedasticCovariance.debiased", "linearmodels.iv.covariance.HomoskedasticCovariance.s", "linearmodels.iv.covariance.HomoskedasticCovariance.s2", "linearmodels.iv.covariance.KernelCovariance", "linearmodels.iv.covariance.KernelCovariance.config", "linearmodels.iv.covariance.KernelCovariance.cov", "linearmodels.iv.covariance.KernelCovariance.debiased", "linearmodels.iv.covariance.KernelCovariance.s", "linearmodels.iv.covariance.KernelCovariance.s2", "linearmodels.iv.covariance.kernel_optimal_bandwidth", "linearmodels.iv.covariance.kernel_weight_bartlett", "linearmodels.iv.covariance.kernel_weight_parzen", "linearmodels.iv.covariance.kernel_weight_quadratic_spectral", "linearmodels.iv.data.IVData", "linearmodels.iv.data.IVData.cols", "linearmodels.iv.data.IVData.drop", "linearmodels.iv.data.IVData.isnull", "linearmodels.iv.data.IVData.labels", "linearmodels.iv.data.IVData.ndarray", "linearmodels.iv.data.IVData.ndim", "linearmodels.iv.data.IVData.pandas", "linearmodels.iv.data.IVData.rows", "linearmodels.iv.data.IVData.shape", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config", "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.iv.gmm.IVGMMCovariance", "linearmodels.iv.gmm.IVGMMCovariance.config", "linearmodels.iv.gmm.IVGMMCovariance.cov", "linearmodels.iv.gmm.IVGMMCovariance.debiased", "linearmodels.iv.gmm.IVGMMCovariance.s", "linearmodels.iv.gmm.IVGMMCovariance.s2", "linearmodels.iv.gmm.KernelWeightMatrix", "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth", "linearmodels.iv.gmm.KernelWeightMatrix.config", "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config", "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix", "linearmodels.iv.model.IV2SLS", "linearmodels.iv.model.IV2SLS.estimate_parameters", "linearmodels.iv.model.IV2SLS.fit", "linearmodels.iv.model.IV2SLS.formula", "linearmodels.iv.model.IV2SLS.from_formula", "linearmodels.iv.model.IV2SLS.has_constant", "linearmodels.iv.model.IV2SLS.isnull", "linearmodels.iv.model.IV2SLS.notnull", "linearmodels.iv.model.IV2SLS.predict", "linearmodels.iv.model.IV2SLS.resids", "linearmodels.iv.model.IV2SLS.wresids", "linearmodels.iv.model.IVGMM", "linearmodels.iv.model.IVGMM.estimate_parameters", "linearmodels.iv.model.IVGMM.fit", "linearmodels.iv.model.IVGMM.formula", "linearmodels.iv.model.IVGMM.from_formula", "linearmodels.iv.model.IVGMM.has_constant", "linearmodels.iv.model.IVGMM.isnull", "linearmodels.iv.model.IVGMM.notnull", "linearmodels.iv.model.IVGMM.predict", "linearmodels.iv.model.IVGMM.resids", "linearmodels.iv.model.IVGMM.wresids", "linearmodels.iv.model.IVGMMCUE", "linearmodels.iv.model.IVGMMCUE.estimate_parameters", "linearmodels.iv.model.IVGMMCUE.fit", "linearmodels.iv.model.IVGMMCUE.formula", "linearmodels.iv.model.IVGMMCUE.from_formula", "linearmodels.iv.model.IVGMMCUE.has_constant", "linearmodels.iv.model.IVGMMCUE.isnull", "linearmodels.iv.model.IVGMMCUE.j", "linearmodels.iv.model.IVGMMCUE.notnull", "linearmodels.iv.model.IVGMMCUE.predict", "linearmodels.iv.model.IVGMMCUE.resids", "linearmodels.iv.model.IVGMMCUE.wresids", "linearmodels.iv.model.IVLIML", "linearmodels.iv.model.IVLIML.estimate_parameters", "linearmodels.iv.model.IVLIML.fit", "linearmodels.iv.model.IVLIML.formula", "linearmodels.iv.model.IVLIML.from_formula", "linearmodels.iv.model.IVLIML.has_constant", "linearmodels.iv.model.IVLIML.isnull", "linearmodels.iv.model.IVLIML.notnull", "linearmodels.iv.model.IVLIML.predict", "linearmodels.iv.model.IVLIML.resids", "linearmodels.iv.model.IVLIML.wresids", "linearmodels.iv.model._OLS", "linearmodels.iv.model._OLS.estimate_parameters", "linearmodels.iv.model._OLS.fit", "linearmodels.iv.model._OLS.formula", "linearmodels.iv.model._OLS.from_formula", "linearmodels.iv.model._OLS.has_constant", "linearmodels.iv.model._OLS.isnull", "linearmodels.iv.model._OLS.notnull", "linearmodels.iv.model._OLS.predict", "linearmodels.iv.model._OLS.resids", "linearmodels.iv.model._OLS.wresids", "linearmodels.iv.results.FirstStageResults", "linearmodels.iv.results.FirstStageResults.diagnostics", "linearmodels.iv.results.FirstStageResults.individual", "linearmodels.iv.results.FirstStageResults.summary", "linearmodels.iv.results.IVGMMResults", "linearmodels.iv.results.IVGMMResults.c_stat", "linearmodels.iv.results.IVGMMResults.conf_int", "linearmodels.iv.results.IVGMMResults.cov", "linearmodels.iv.results.IVGMMResults.cov_config", "linearmodels.iv.results.IVGMMResults.cov_estimator", "linearmodels.iv.results.IVGMMResults.cov_type", "linearmodels.iv.results.IVGMMResults.debiased", "linearmodels.iv.results.IVGMMResults.df_model", "linearmodels.iv.results.IVGMMResults.df_resid", "linearmodels.iv.results.IVGMMResults.f_statistic", "linearmodels.iv.results.IVGMMResults.first_stage", "linearmodels.iv.results.IVGMMResults.fitted_values", "linearmodels.iv.results.IVGMMResults.has_constant", "linearmodels.iv.results.IVGMMResults.idiosyncratic", "linearmodels.iv.results.IVGMMResults.iterations", "linearmodels.iv.results.IVGMMResults.j_stat", "linearmodels.iv.results.IVGMMResults.kappa", "linearmodels.iv.results.IVGMMResults.method", "linearmodels.iv.results.IVGMMResults.model_ss", "linearmodels.iv.results.IVGMMResults.nobs", "linearmodels.iv.results.IVGMMResults.params", "linearmodels.iv.results.IVGMMResults.predict", "linearmodels.iv.results.IVGMMResults.pvalues", "linearmodels.iv.results.IVGMMResults.resid_ss", "linearmodels.iv.results.IVGMMResults.resids", "linearmodels.iv.results.IVGMMResults.rsquared", "linearmodels.iv.results.IVGMMResults.rsquared_adj", "linearmodels.iv.results.IVGMMResults.s2", "linearmodels.iv.results.IVGMMResults.std_errors", "linearmodels.iv.results.IVGMMResults.summary", "linearmodels.iv.results.IVGMMResults.total_ss", "linearmodels.iv.results.IVGMMResults.tstats", "linearmodels.iv.results.IVGMMResults.wald_test", "linearmodels.iv.results.IVGMMResults.weight_config", "linearmodels.iv.results.IVGMMResults.weight_matrix", "linearmodels.iv.results.IVGMMResults.weight_type", "linearmodels.iv.results.IVGMMResults.wresids", "linearmodels.iv.results.IVModelComparison", "linearmodels.iv.results.IVModelComparison.cov_estimator", "linearmodels.iv.results.IVModelComparison.estimator_method", "linearmodels.iv.results.IVModelComparison.f_statistic", "linearmodels.iv.results.IVModelComparison.nobs", "linearmodels.iv.results.IVModelComparison.params", "linearmodels.iv.results.IVModelComparison.pvalues", "linearmodels.iv.results.IVModelComparison.rsquared", "linearmodels.iv.results.IVModelComparison.rsquared_adj", "linearmodels.iv.results.IVModelComparison.std_errors", "linearmodels.iv.results.IVModelComparison.summary", "linearmodels.iv.results.IVModelComparison.tstats", "linearmodels.iv.results.IVResults", "linearmodels.iv.results.IVResults.anderson_rubin", "linearmodels.iv.results.IVResults.basmann", "linearmodels.iv.results.IVResults.basmann_f", "linearmodels.iv.results.IVResults.conf_int", "linearmodels.iv.results.IVResults.cov", "linearmodels.iv.results.IVResults.cov_config", "linearmodels.iv.results.IVResults.cov_estimator", "linearmodels.iv.results.IVResults.cov_type", "linearmodels.iv.results.IVResults.debiased", "linearmodels.iv.results.IVResults.df_model", "linearmodels.iv.results.IVResults.df_resid", "linearmodels.iv.results.IVResults.durbin", "linearmodels.iv.results.IVResults.f_statistic", "linearmodels.iv.results.IVResults.first_stage", "linearmodels.iv.results.IVResults.fitted_values", "linearmodels.iv.results.IVResults.has_constant", "linearmodels.iv.results.IVResults.idiosyncratic", "linearmodels.iv.results.IVResults.kappa", "linearmodels.iv.results.IVResults.method", "linearmodels.iv.results.IVResults.model_ss", "linearmodels.iv.results.IVResults.nobs", "linearmodels.iv.results.IVResults.params", "linearmodels.iv.results.IVResults.predict", "linearmodels.iv.results.IVResults.pvalues", "linearmodels.iv.results.IVResults.resid_ss", "linearmodels.iv.results.IVResults.resids", "linearmodels.iv.results.IVResults.rsquared", "linearmodels.iv.results.IVResults.rsquared_adj", "linearmodels.iv.results.IVResults.s2", "linearmodels.iv.results.IVResults.sargan", "linearmodels.iv.results.IVResults.std_errors", "linearmodels.iv.results.IVResults.summary", "linearmodels.iv.results.IVResults.total_ss", "linearmodels.iv.results.IVResults.tstats", "linearmodels.iv.results.IVResults.wald_test", "linearmodels.iv.results.IVResults.wooldridge_overid", "linearmodels.iv.results.IVResults.wooldridge_regression", "linearmodels.iv.results.IVResults.wooldridge_score", "linearmodels.iv.results.IVResults.wresids", "linearmodels.iv.results.IVResults.wu_hausman", "linearmodels.iv.results.OLSResults", "linearmodels.iv.results.OLSResults.conf_int", "linearmodels.iv.results.OLSResults.cov", "linearmodels.iv.results.OLSResults.cov_config", "linearmodels.iv.results.OLSResults.cov_estimator", "linearmodels.iv.results.OLSResults.cov_type", "linearmodels.iv.results.OLSResults.debiased", "linearmodels.iv.results.OLSResults.df_model", "linearmodels.iv.results.OLSResults.df_resid", "linearmodels.iv.results.OLSResults.f_statistic", "linearmodels.iv.results.OLSResults.fitted_values", "linearmodels.iv.results.OLSResults.has_constant", "linearmodels.iv.results.OLSResults.idiosyncratic", "linearmodels.iv.results.OLSResults.kappa", "linearmodels.iv.results.OLSResults.method", "linearmodels.iv.results.OLSResults.model_ss", "linearmodels.iv.results.OLSResults.nobs", "linearmodels.iv.results.OLSResults.params", "linearmodels.iv.results.OLSResults.predict", "linearmodels.iv.results.OLSResults.pvalues", "linearmodels.iv.results.OLSResults.resid_ss", "linearmodels.iv.results.OLSResults.resids", "linearmodels.iv.results.OLSResults.rsquared", "linearmodels.iv.results.OLSResults.rsquared_adj", "linearmodels.iv.results.OLSResults.s2", "linearmodels.iv.results.OLSResults.std_errors", "linearmodels.iv.results.OLSResults.summary", "linearmodels.iv.results.OLSResults.total_ss", "linearmodels.iv.results.OLSResults.tstats", "linearmodels.iv.results.OLSResults.wald_test", "linearmodels.iv.results.OLSResults.wresids", "linearmodels.iv.results.compare", "Formulas and Mathematical Detail", "Module Reference", "Data Formats for Panel Data Analysis", "Examples", "Using formulas to specify models", "Implementation Choices", "Panel Data Model Estimation", "Introduction", "Formulas and Mathematical Detail", "Comparison with pandas PanelOLS and FamaMacBeth", "linearmodels.panel.covariance.ACCovariance", "linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ACCovariance.cov", "linearmodels.panel.covariance.ACCovariance.deferred_cov", "linearmodels.panel.covariance.ACCovariance.eps", "linearmodels.panel.covariance.ACCovariance.name", "linearmodels.panel.covariance.ACCovariance.s2", "linearmodels.panel.covariance.ClusteredCovariance", "linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.ClusteredCovariance.cov", "linearmodels.panel.covariance.ClusteredCovariance.deferred_cov", "linearmodels.panel.covariance.ClusteredCovariance.eps", "linearmodels.panel.covariance.ClusteredCovariance.name", "linearmodels.panel.covariance.ClusteredCovariance.s2", "linearmodels.panel.covariance.DriscollKraay", "linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS", "linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL", "linearmodels.panel.covariance.DriscollKraay.cov", "linearmodels.panel.covariance.DriscollKraay.deferred_cov", "linearmodels.panel.covariance.DriscollKraay.eps", "linearmodels.panel.covariance.DriscollKraay.name", "linearmodels.panel.covariance.DriscollKraay.s2", "linearmodels.panel.covariance.FamaMacBethCovariance", "linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.FamaMacBethCovariance.all_params", "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth", "linearmodels.panel.covariance.FamaMacBethCovariance.cov", "linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov", "linearmodels.panel.covariance.FamaMacBethCovariance.eps", "linearmodels.panel.covariance.FamaMacBethCovariance.name", "linearmodels.panel.covariance.FamaMacBethCovariance.s2", "linearmodels.panel.covariance.HeteroskedasticCovariance", "linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HeteroskedasticCovariance.cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HeteroskedasticCovariance.eps", "linearmodels.panel.covariance.HeteroskedasticCovariance.name", "linearmodels.panel.covariance.HeteroskedasticCovariance.s2", "linearmodels.panel.covariance.HomoskedasticCovariance", "linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS", "linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL", "linearmodels.panel.covariance.HomoskedasticCovariance.cov", "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov", "linearmodels.panel.covariance.HomoskedasticCovariance.eps", "linearmodels.panel.covariance.HomoskedasticCovariance.name", "linearmodels.panel.covariance.HomoskedasticCovariance.s2", "linearmodels.panel.data.PanelData", "linearmodels.panel.data.PanelData.copy", "linearmodels.panel.data.PanelData.count", "linearmodels.panel.data.PanelData.dataframe", "linearmodels.panel.data.PanelData.demean", "linearmodels.panel.data.PanelData.drop", "linearmodels.panel.data.PanelData.dummies", "linearmodels.panel.data.PanelData.entities", "linearmodels.panel.data.PanelData.entity_ids", "linearmodels.panel.data.PanelData.first_difference", "linearmodels.panel.data.PanelData.general_demean", "linearmodels.panel.data.PanelData.index", "linearmodels.panel.data.PanelData.isnull", "linearmodels.panel.data.PanelData.mean", "linearmodels.panel.data.PanelData.ndim", "linearmodels.panel.data.PanelData.nentity", "linearmodels.panel.data.PanelData.nobs", "linearmodels.panel.data.PanelData.nvar", "linearmodels.panel.data.PanelData.panel", "linearmodels.panel.data.PanelData.shape", "linearmodels.panel.data.PanelData.time", "linearmodels.panel.data.PanelData.time_ids", "linearmodels.panel.data.PanelData.values2d", "linearmodels.panel.data.PanelData.values3d", "linearmodels.panel.data.PanelData.vars", "linearmodels.panel.data._Panel", "linearmodels.panel.data._Panel.from_array", "linearmodels.panel.data._Panel.items", "linearmodels.panel.data._Panel.major_axis", "linearmodels.panel.data._Panel.minor_axis", "linearmodels.panel.data._Panel.shape", "linearmodels.panel.data._Panel.to_frame", "linearmodels.panel.data._Panel.values", "linearmodels.panel.model.BetweenOLS", "linearmodels.panel.model.BetweenOLS.fit", "linearmodels.panel.model.BetweenOLS.formula", "linearmodels.panel.model.BetweenOLS.from_formula", "linearmodels.panel.model.BetweenOLS.has_constant", "linearmodels.panel.model.BetweenOLS.not_null", "linearmodels.panel.model.BetweenOLS.predict", "linearmodels.panel.model.BetweenOLS.reformat_clusters", "linearmodels.panel.model.FamaMacBeth", "linearmodels.panel.model.FamaMacBeth.fit", "linearmodels.panel.model.FamaMacBeth.formula", "linearmodels.panel.model.FamaMacBeth.from_formula", "linearmodels.panel.model.FamaMacBeth.has_constant", "linearmodels.panel.model.FamaMacBeth.not_null", "linearmodels.panel.model.FamaMacBeth.predict", "linearmodels.panel.model.FamaMacBeth.reformat_clusters", "linearmodels.panel.model.FirstDifferenceOLS", "linearmodels.panel.model.FirstDifferenceOLS.fit", "linearmodels.panel.model.FirstDifferenceOLS.formula", "linearmodels.panel.model.FirstDifferenceOLS.from_formula", "linearmodels.panel.model.FirstDifferenceOLS.has_constant", "linearmodels.panel.model.FirstDifferenceOLS.not_null", "linearmodels.panel.model.FirstDifferenceOLS.predict", "linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS", "linearmodels.panel.model.PanelOLS.entity_effects", "linearmodels.panel.model.PanelOLS.fit", "linearmodels.panel.model.PanelOLS.formula", "linearmodels.panel.model.PanelOLS.from_formula", "linearmodels.panel.model.PanelOLS.has_constant", "linearmodels.panel.model.PanelOLS.not_null", "linearmodels.panel.model.PanelOLS.other_effects", "linearmodels.panel.model.PanelOLS.predict", "linearmodels.panel.model.PanelOLS.reformat_clusters", "linearmodels.panel.model.PanelOLS.time_effects", "linearmodels.panel.model.PooledOLS", "linearmodels.panel.model.PooledOLS.fit", "linearmodels.panel.model.PooledOLS.formula", "linearmodels.panel.model.PooledOLS.from_formula", "linearmodels.panel.model.PooledOLS.has_constant", "linearmodels.panel.model.PooledOLS.not_null", "linearmodels.panel.model.PooledOLS.predict", "linearmodels.panel.model.PooledOLS.reformat_clusters", "linearmodels.panel.model.RandomEffects", "linearmodels.panel.model.RandomEffects.fit", "linearmodels.panel.model.RandomEffects.formula", "linearmodels.panel.model.RandomEffects.from_formula", "linearmodels.panel.model.RandomEffects.has_constant", "linearmodels.panel.model.RandomEffects.not_null", "linearmodels.panel.model.RandomEffects.predict", "linearmodels.panel.model.RandomEffects.reformat_clusters", "linearmodels.panel.results.FamaMacBethResults", "linearmodels.panel.results.FamaMacBethResults.all_params", "linearmodels.panel.results.FamaMacBethResults.avg_adj_rsquared", "linearmodels.panel.results.FamaMacBethResults.avg_rsquared", "linearmodels.panel.results.FamaMacBethResults.conf_int", "linearmodels.panel.results.FamaMacBethResults.corr_squared_between", "linearmodels.panel.results.FamaMacBethResults.corr_squared_overall", "linearmodels.panel.results.FamaMacBethResults.corr_squared_within", "linearmodels.panel.results.FamaMacBethResults.cov", "linearmodels.panel.results.FamaMacBethResults.df_model", "linearmodels.panel.results.FamaMacBethResults.df_resid", "linearmodels.panel.results.FamaMacBethResults.entity_info", "linearmodels.panel.results.FamaMacBethResults.estimated_effects", "linearmodels.panel.results.FamaMacBethResults.f_statistic", "linearmodels.panel.results.FamaMacBethResults.f_statistic_robust", "linearmodels.panel.results.FamaMacBethResults.fitted_values", "linearmodels.panel.results.FamaMacBethResults.idiosyncratic", "linearmodels.panel.results.FamaMacBethResults.loglik", "linearmodels.panel.results.FamaMacBethResults.model_ss", "linearmodels.panel.results.FamaMacBethResults.name", "linearmodels.panel.results.FamaMacBethResults.nobs", "linearmodels.panel.results.FamaMacBethResults.params", "linearmodels.panel.results.FamaMacBethResults.predict", "linearmodels.panel.results.FamaMacBethResults.pvalues", "linearmodels.panel.results.FamaMacBethResults.resid_ss", "linearmodels.panel.results.FamaMacBethResults.resids", "linearmodels.panel.results.FamaMacBethResults.rsquared", "linearmodels.panel.results.FamaMacBethResults.rsquared_between", "linearmodels.panel.results.FamaMacBethResults.rsquared_overall", "linearmodels.panel.results.FamaMacBethResults.rsquared_within", "linearmodels.panel.results.FamaMacBethResults.s2", "linearmodels.panel.results.FamaMacBethResults.std_errors", "linearmodels.panel.results.FamaMacBethResults.summary", "linearmodels.panel.results.FamaMacBethResults.time_info", "linearmodels.panel.results.FamaMacBethResults.total_ss", "linearmodels.panel.results.FamaMacBethResults.tstats", "linearmodels.panel.results.FamaMacBethResults.wald_test", "linearmodels.panel.results.FamaMacBethResults.wresids", "linearmodels.panel.results.PanelEffectsResults", "linearmodels.panel.results.PanelEffectsResults.conf_int", "linearmodels.panel.results.PanelEffectsResults.corr_squared_between", "linearmodels.panel.results.PanelEffectsResults.corr_squared_overall", "linearmodels.panel.results.PanelEffectsResults.corr_squared_within", "linearmodels.panel.results.PanelEffectsResults.cov", "linearmodels.panel.results.PanelEffectsResults.df_model", "linearmodels.panel.results.PanelEffectsResults.df_resid", "linearmodels.panel.results.PanelEffectsResults.entity_info", "linearmodels.panel.results.PanelEffectsResults.estimated_effects", "linearmodels.panel.results.PanelEffectsResults.f_pooled", "linearmodels.panel.results.PanelEffectsResults.f_statistic", "linearmodels.panel.results.PanelEffectsResults.f_statistic_robust", "linearmodels.panel.results.PanelEffectsResults.fitted_values", "linearmodels.panel.results.PanelEffectsResults.idiosyncratic", "linearmodels.panel.results.PanelEffectsResults.included_effects", "linearmodels.panel.results.PanelEffectsResults.loglik", "linearmodels.panel.results.PanelEffectsResults.model_ss", "linearmodels.panel.results.PanelEffectsResults.name", "linearmodels.panel.results.PanelEffectsResults.nobs", "linearmodels.panel.results.PanelEffectsResults.other_info", "linearmodels.panel.results.PanelEffectsResults.params", "linearmodels.panel.results.PanelEffectsResults.predict", "linearmodels.panel.results.PanelEffectsResults.pvalues", "linearmodels.panel.results.PanelEffectsResults.resid_ss", "linearmodels.panel.results.PanelEffectsResults.resids", "linearmodels.panel.results.PanelEffectsResults.rsquared", "linearmodels.panel.results.PanelEffectsResults.rsquared_between", "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive", "linearmodels.panel.results.PanelEffectsResults.rsquared_overall", "linearmodels.panel.results.PanelEffectsResults.rsquared_within", "linearmodels.panel.results.PanelEffectsResults.s2", "linearmodels.panel.results.PanelEffectsResults.std_errors", "linearmodels.panel.results.PanelEffectsResults.summary", "linearmodels.panel.results.PanelEffectsResults.time_info", "linearmodels.panel.results.PanelEffectsResults.total_ss", "linearmodels.panel.results.PanelEffectsResults.tstats", "linearmodels.panel.results.PanelEffectsResults.variance_decomposition", "linearmodels.panel.results.PanelEffectsResults.wald_test", "linearmodels.panel.results.PanelEffectsResults.wresids", "linearmodels.panel.results.PanelModelComparison", "linearmodels.panel.results.PanelModelComparison.cov_estimator", "linearmodels.panel.results.PanelModelComparison.estimator_method", "linearmodels.panel.results.PanelModelComparison.f_statistic", "linearmodels.panel.results.PanelModelComparison.nobs", "linearmodels.panel.results.PanelModelComparison.params", "linearmodels.panel.results.PanelModelComparison.pvalues", "linearmodels.panel.results.PanelModelComparison.rsquared", "linearmodels.panel.results.PanelModelComparison.rsquared_between", "linearmodels.panel.results.PanelModelComparison.rsquared_overall", "linearmodels.panel.results.PanelModelComparison.rsquared_within", "linearmodels.panel.results.PanelModelComparison.std_errors", "linearmodels.panel.results.PanelModelComparison.summary", "linearmodels.panel.results.PanelModelComparison.tstats", "linearmodels.panel.results.PanelResults", "linearmodels.panel.results.PanelResults.conf_int", "linearmodels.panel.results.PanelResults.corr_squared_between", "linearmodels.panel.results.PanelResults.corr_squared_overall", "linearmodels.panel.results.PanelResults.corr_squared_within", "linearmodels.panel.results.PanelResults.cov", "linearmodels.panel.results.PanelResults.df_model", "linearmodels.panel.results.PanelResults.df_resid", "linearmodels.panel.results.PanelResults.entity_info", "linearmodels.panel.results.PanelResults.estimated_effects", "linearmodels.panel.results.PanelResults.f_statistic", "linearmodels.panel.results.PanelResults.f_statistic_robust", "linearmodels.panel.results.PanelResults.fitted_values", "linearmodels.panel.results.PanelResults.idiosyncratic", "linearmodels.panel.results.PanelResults.loglik", "linearmodels.panel.results.PanelResults.model_ss", "linearmodels.panel.results.PanelResults.name", "linearmodels.panel.results.PanelResults.nobs", "linearmodels.panel.results.PanelResults.params", "linearmodels.panel.results.PanelResults.predict", "linearmodels.panel.results.PanelResults.pvalues", "linearmodels.panel.results.PanelResults.resid_ss", "linearmodels.panel.results.PanelResults.resids", "linearmodels.panel.results.PanelResults.rsquared", "linearmodels.panel.results.PanelResults.rsquared_between", "linearmodels.panel.results.PanelResults.rsquared_overall", "linearmodels.panel.results.PanelResults.rsquared_within", "linearmodels.panel.results.PanelResults.s2", "linearmodels.panel.results.PanelResults.std_errors", "linearmodels.panel.results.PanelResults.summary", "linearmodels.panel.results.PanelResults.time_info", "linearmodels.panel.results.PanelResults.total_ss", "linearmodels.panel.results.PanelResults.tstats", "linearmodels.panel.results.PanelResults.wald_test", "linearmodels.panel.results.PanelResults.wresids", "linearmodels.panel.results.RandomEffectsResults", "linearmodels.panel.results.RandomEffectsResults.conf_int", "linearmodels.panel.results.RandomEffectsResults.corr_squared_between", "linearmodels.panel.results.RandomEffectsResults.corr_squared_overall", "linearmodels.panel.results.RandomEffectsResults.corr_squared_within", "linearmodels.panel.results.RandomEffectsResults.cov", "linearmodels.panel.results.RandomEffectsResults.df_model", "linearmodels.panel.results.RandomEffectsResults.df_resid", "linearmodels.panel.results.RandomEffectsResults.entity_info", "linearmodels.panel.results.RandomEffectsResults.estimated_effects", "linearmodels.panel.results.RandomEffectsResults.f_statistic", "linearmodels.panel.results.RandomEffectsResults.f_statistic_robust", "linearmodels.panel.results.RandomEffectsResults.fitted_values", "linearmodels.panel.results.RandomEffectsResults.idiosyncratic", "linearmodels.panel.results.RandomEffectsResults.loglik", "linearmodels.panel.results.RandomEffectsResults.model_ss", "linearmodels.panel.results.RandomEffectsResults.name", "linearmodels.panel.results.RandomEffectsResults.nobs", "linearmodels.panel.results.RandomEffectsResults.params", "linearmodels.panel.results.RandomEffectsResults.predict", "linearmodels.panel.results.RandomEffectsResults.pvalues", "linearmodels.panel.results.RandomEffectsResults.resid_ss", "linearmodels.panel.results.RandomEffectsResults.resids", "linearmodels.panel.results.RandomEffectsResults.rsquared", "linearmodels.panel.results.RandomEffectsResults.rsquared_between", "linearmodels.panel.results.RandomEffectsResults.rsquared_overall", "linearmodels.panel.results.RandomEffectsResults.rsquared_within", "linearmodels.panel.results.RandomEffectsResults.s2", "linearmodels.panel.results.RandomEffectsResults.std_errors", "linearmodels.panel.results.RandomEffectsResults.summary", "linearmodels.panel.results.RandomEffectsResults.theta", "linearmodels.panel.results.RandomEffectsResults.time_info", "linearmodels.panel.results.RandomEffectsResults.total_ss", "linearmodels.panel.results.RandomEffectsResults.tstats", "linearmodels.panel.results.RandomEffectsResults.variance_decomposition", "linearmodels.panel.results.RandomEffectsResults.wald_test", "linearmodels.panel.results.RandomEffectsResults.wresids", "linearmodels.panel.results.compare", "linearmodels.panel.utility.PanelModelData", "linearmodels.panel.utility.PanelModelData.clusters", "linearmodels.panel.utility.PanelModelData.count", "linearmodels.panel.utility.PanelModelData.data", "linearmodels.panel.utility.PanelModelData.index", "linearmodels.panel.utility.PanelModelData.other_effects", "linearmodels.panel.utility.PanelModelData.weights", "linearmodels.panel.utility.generate_panel_data", "Module Reference", "Module Plans", "References", "Examples", "Using formulas to specify models", "Three-stage Least Squares (3SLS)", "System Regression Models", "Seemingly Unrelated Regression (SUR/SURE)", "Module Reference", "linearmodels.system.covariance.ClusteredCovariance", "linearmodels.system.covariance.ClusteredCovariance.cov", "linearmodels.system.covariance.ClusteredCovariance.cov_config", "linearmodels.system.covariance.ClusteredCovariance.sigma", "linearmodels.system.covariance.GMMHeteroskedasticCovariance", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov", "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMHomoskedasticCovariance", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov", "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance", "linearmodels.system.covariance.GMMKernelCovariance.bandwidth", "linearmodels.system.covariance.GMMKernelCovariance.cov", "linearmodels.system.covariance.GMMKernelCovariance.cov_config", "linearmodels.system.covariance.GMMKernelCovariance.kernel", "linearmodels.system.covariance.HeteroskedasticCovariance", "linearmodels.system.covariance.HeteroskedasticCovariance.cov", "linearmodels.system.covariance.HeteroskedasticCovariance.cov_config", "linearmodels.system.covariance.HeteroskedasticCovariance.sigma", "linearmodels.system.covariance.HomoskedasticCovariance", "linearmodels.system.covariance.HomoskedasticCovariance.cov", "linearmodels.system.covariance.HomoskedasticCovariance.cov_config", "linearmodels.system.covariance.HomoskedasticCovariance.sigma", "linearmodels.system.covariance.KernelCovariance", "linearmodels.system.covariance.KernelCovariance.bandwidth", "linearmodels.system.covariance.KernelCovariance.cov", "linearmodels.system.covariance.KernelCovariance.cov_config", "linearmodels.system.covariance.KernelCovariance.kernel", "linearmodels.system.covariance.KernelCovariance.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.config", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix", "linearmodels.system.gmm.HomoskedasticWeightMatrix.config", "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma", "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix", "linearmodels.system.gmm.KernelWeightMatrix", "linearmodels.system.gmm.KernelWeightMatrix.bandwidth", "linearmodels.system.gmm.KernelWeightMatrix.config", "linearmodels.system.gmm.KernelWeightMatrix.kernel", "linearmodels.system.gmm.KernelWeightMatrix.sigma", "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix", "linearmodels.system.model.IV3SLS", "linearmodels.system.model.IV3SLS.add_constraints", "linearmodels.system.model.IV3SLS.constraints", "linearmodels.system.model.IV3SLS.fit", "linearmodels.system.model.IV3SLS.formula", "linearmodels.system.model.IV3SLS.from_formula", "linearmodels.system.model.IV3SLS.has_constant", "linearmodels.system.model.IV3SLS.multivariate_iv", "linearmodels.system.model.IV3SLS.param_names", "linearmodels.system.model.IV3SLS.predict", "linearmodels.system.model.IV3SLS.reset_constraints", "linearmodels.system.model.IVSystemGMM", "linearmodels.system.model.IVSystemGMM.add_constraints", "linearmodels.system.model.IVSystemGMM.constraints", "linearmodels.system.model.IVSystemGMM.fit", "linearmodels.system.model.IVSystemGMM.formula", "linearmodels.system.model.IVSystemGMM.from_formula", "linearmodels.system.model.IVSystemGMM.has_constant", "linearmodels.system.model.IVSystemGMM.param_names", "linearmodels.system.model.IVSystemGMM.predict", "linearmodels.system.model.IVSystemGMM.reset_constraints", "linearmodels.system.model.LinearConstraint", "linearmodels.system.model.LinearConstraint.a", "linearmodels.system.model.LinearConstraint.q", "linearmodels.system.model.LinearConstraint.r", "linearmodels.system.model.LinearConstraint.t", "linearmodels.system.model.SUR", "linearmodels.system.model.SUR.add_constraints", "linearmodels.system.model.SUR.constraints", "linearmodels.system.model.SUR.fit", "linearmodels.system.model.SUR.formula", "linearmodels.system.model.SUR.from_formula", "linearmodels.system.model.SUR.has_constant", "linearmodels.system.model.SUR.multivariate_ls", "linearmodels.system.model.SUR.param_names", "linearmodels.system.model.SUR.predict", "linearmodels.system.model.SUR.reset_constraints", "linearmodels.system.results.GMMSystemResults", "linearmodels.system.results.GMMSystemResults.breusch_pagan", "linearmodels.system.results.GMMSystemResults.conf_int", "linearmodels.system.results.GMMSystemResults.cov", "linearmodels.system.results.GMMSystemResults.cov_config", "linearmodels.system.results.GMMSystemResults.cov_estimator", "linearmodels.system.results.GMMSystemResults.debiased", "linearmodels.system.results.GMMSystemResults.df_model", "linearmodels.system.results.GMMSystemResults.df_resid", "linearmodels.system.results.GMMSystemResults.equation_labels", "linearmodels.system.results.GMMSystemResults.equations", "linearmodels.system.results.GMMSystemResults.fitted_values", "linearmodels.system.results.GMMSystemResults.iterations", "linearmodels.system.results.GMMSystemResults.j_stat", "linearmodels.system.results.GMMSystemResults.likelihood_ratio", "linearmodels.system.results.GMMSystemResults.method", "linearmodels.system.results.GMMSystemResults.model", "linearmodels.system.results.GMMSystemResults.model_ss", "linearmodels.system.results.GMMSystemResults.nobs", "linearmodels.system.results.GMMSystemResults.params", "linearmodels.system.results.GMMSystemResults.predict", "linearmodels.system.results.GMMSystemResults.pvalues", "linearmodels.system.results.GMMSystemResults.resid_ss", "linearmodels.system.results.GMMSystemResults.resids", "linearmodels.system.results.GMMSystemResults.rsquared", "linearmodels.system.results.GMMSystemResults.sigma", "linearmodels.system.results.GMMSystemResults.std_errors", "linearmodels.system.results.GMMSystemResults.summary", "linearmodels.system.results.GMMSystemResults.system_rsquared", "linearmodels.system.results.GMMSystemResults.total_ss", "linearmodels.system.results.GMMSystemResults.tstats", "linearmodels.system.results.GMMSystemResults.w", "linearmodels.system.results.GMMSystemResults.weight_config", "linearmodels.system.results.GMMSystemResults.weight_type", "linearmodels.system.results.GMMSystemResults.wresids", "linearmodels.system.results.SystemResults", "linearmodels.system.results.SystemResults.breusch_pagan", "linearmodels.system.results.SystemResults.conf_int", "linearmodels.system.results.SystemResults.cov", "linearmodels.system.results.SystemResults.cov_config", "linearmodels.system.results.SystemResults.cov_estimator", "linearmodels.system.results.SystemResults.debiased", "linearmodels.system.results.SystemResults.df_model", "linearmodels.system.results.SystemResults.df_resid", "linearmodels.system.results.SystemResults.equation_labels", "linearmodels.system.results.SystemResults.equations", "linearmodels.system.results.SystemResults.fitted_values", "linearmodels.system.results.SystemResults.iterations", "linearmodels.system.results.SystemResults.likelihood_ratio", "linearmodels.system.results.SystemResults.method", "linearmodels.system.results.SystemResults.model", "linearmodels.system.results.SystemResults.model_ss", "linearmodels.system.results.SystemResults.nobs", "linearmodels.system.results.SystemResults.params", "linearmodels.system.results.SystemResults.predict", "linearmodels.system.results.SystemResults.pvalues", "linearmodels.system.results.SystemResults.resid_ss", "linearmodels.system.results.SystemResults.resids", "linearmodels.system.results.SystemResults.rsquared", "linearmodels.system.results.SystemResults.sigma", "linearmodels.system.results.SystemResults.std_errors", "linearmodels.system.results.SystemResults.summary", "linearmodels.system.results.SystemResults.system_rsquared", "linearmodels.system.results.SystemResults.total_ss", "linearmodels.system.results.SystemResults.tstats", "linearmodels.system.results.SystemResults.wresids", "Utilities", "linearmodels.shared.covariance.cov_cluster", "linearmodels.shared.covariance.cov_kernel", "linearmodels.shared.covariance.group_debias_coefficient", "linearmodels.shared.hypotheses.InvalidTestStatistic", "linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values", "linearmodels.shared.hypotheses.InvalidTestStatistic.null", "linearmodels.shared.hypotheses.InvalidTestStatistic.pval", "linearmodels.shared.hypotheses.InvalidTestStatistic.stat", "linearmodels.shared.hypotheses.WaldTestStatistic", "linearmodels.shared.hypotheses.WaldTestStatistic.critical_values", "linearmodels.shared.hypotheses.WaldTestStatistic.null", "linearmodels.shared.hypotheses.WaldTestStatistic.pval", "linearmodels.shared.hypotheses.WaldTestStatistic.stat", "linearmodels.shared.utility.AttrDict", "linearmodels.shared.utility.AttrDict.clear", "linearmodels.shared.utility.AttrDict.copy", "linearmodels.shared.utility.AttrDict.get", "linearmodels.shared.utility.AttrDict.items", "linearmodels.shared.utility.AttrDict.keys", "linearmodels.shared.utility.AttrDict.pop", "linearmodels.shared.utility.AttrDict.popitem", "linearmodels.shared.utility.AttrDict.setdefault", "linearmodels.shared.utility.AttrDict.update", "linearmodels.shared.utility.AttrDict.values"], "terms": {"class": [0, 7, 16, 17, 20, 21, 24, 25, 28, 49, 75, 77, 85, 87, 98, 130, 135, 145, 148, 149, 150, 156, 162, 168, 178, 188, 191, 194, 200, 204, 207, 208, 218, 229, 241, 242, 245, 252, 253, 256, 263, 267, 284, 305, 317, 335, 358, 371, 396, 400, 408, 416, 424, 434, 442, 450, 475, 483, 491, 499, 507, 518, 526, 534, 572, 612, 626, 661, 699, 706, 708, 713, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 770, 780, 785, 796, 831, 866, 871, 876], "xe": [0, 7], "jacobian": [0, 3, 6, 7, 11, 15, 73], "none": [0, 7, 16, 18, 19, 21, 22, 23, 26, 27, 79, 80, 87, 92, 128, 130, 135, 138, 145, 146, 147, 149, 150, 168, 178, 180, 189, 192, 195, 200, 201, 202, 205, 207, 211, 215, 218, 220, 222, 226, 229, 230, 231, 233, 238, 241, 245, 249, 252, 256, 260, 268, 289, 300, 329, 340, 352, 357, 376, 387, 400, 408, 416, 424, 454, 455, 460, 463, 483, 485, 486, 489, 491, 492, 493, 494, 497, 499, 501, 502, 505, 507, 509, 510, 511, 515, 518, 520, 521, 524, 526, 528, 529, 532, 556, 570, 592, 594, 610, 645, 659, 680, 696, 706, 710, 711, 712, 713, 716, 720, 723, 726, 731, 735, 739, 748, 752, 753, 758, 759, 760, 761, 762, 763, 764, 766, 768, 769, 770, 771, 772, 773, 774, 775, 778, 779, 780, 785, 786, 787, 788, 789, 790, 794, 795, 816, 850, 866, 867, 871, 872, 877, 879, 882, 885], "inv_jacobian": [0, 7], "center": [0, 7, 21, 188, 191, 200, 204, 229, 390, 395, 712, 714, 745, 749, 753], "true": [0, 7, 17, 21, 25, 39, 59, 69, 70, 72, 75, 80, 92, 101, 110, 118, 144, 145, 150, 156, 162, 168, 178, 229, 268, 269, 277, 289, 290, 321, 330, 340, 341, 359, 367, 376, 377, 390, 392, 393, 397, 399, 400, 408, 416, 434, 442, 450, 454, 483, 484, 486, 491, 492, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 526, 527, 529, 538, 548, 556, 557, 570, 573, 584, 594, 595, 610, 627, 637, 645, 646, 659, 662, 672, 680, 681, 696, 706, 710, 711, 712, 762, 780, 788, 798, 816, 817, 833, 850, 851], "debias": [0, 7, 17, 21, 25, 39, 59, 92, 98, 101, 110, 118, 145, 146, 147, 149, 150, 155, 156, 161, 162, 167, 168, 173, 188, 191, 194, 199, 200, 204, 209, 220, 231, 243, 254, 267, 269, 277, 290, 317, 321, 330, 341, 358, 359, 367, 377, 390, 398, 399, 400, 408, 416, 424, 434, 442, 484, 492, 500, 509, 519, 527, 538, 548, 557, 573, 584, 595, 627, 637, 646, 662, 672, 681, 710, 711, 712, 714, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 762, 773, 788, 796, 798, 817, 831, 833, 851, 865], "fals": [0, 7, 16, 19, 20, 21, 23, 75, 80, 87, 92, 144, 145, 146, 147, 149, 150, 156, 162, 168, 188, 191, 194, 200, 204, 209, 220, 230, 231, 243, 254, 289, 305, 340, 376, 389, 393, 395, 400, 408, 416, 424, 434, 442, 454, 456, 484, 507, 509, 511, 527, 556, 594, 612, 645, 680, 698, 706, 710, 711, 712, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 762, 788, 816, 850], "df": [0, 7, 73, 400, 416, 434, 442, 475, 548, 584, 637, 672, 712, 871], "0": [0, 7, 21, 69, 70, 72, 73, 80, 101, 128, 135, 139, 144, 145, 146, 147, 149, 168, 176, 178, 220, 241, 245, 252, 256, 269, 300, 321, 352, 354, 359, 387, 390, 392, 393, 394, 396, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 486, 494, 502, 511, 521, 529, 538, 570, 573, 610, 627, 659, 662, 696, 699, 702, 703, 706, 710, 711, 712, 713, 714, 759, 760, 770, 771, 785, 786, 797, 798, 810, 832, 833, 844], "sourc": [0, 7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 49, 59, 68, 73, 77, 78, 79, 80, 81, 82, 83, 84, 87, 92, 95, 97, 98, 99, 130, 135, 138, 139, 145, 150, 156, 162, 168, 174, 175, 176, 177, 178, 180, 188, 190, 191, 193, 194, 200, 203, 204, 206, 207, 211, 218, 219, 220, 222, 229, 230, 231, 233, 236, 241, 245, 252, 263, 264, 265, 267, 268, 305, 317, 318, 319, 320, 329, 347, 353, 354, 355, 357, 358, 376, 389, 390, 398, 400, 403, 408, 411, 416, 419, 424, 428, 429, 434, 437, 442, 445, 446, 450, 451, 452, 454, 455, 456, 459, 460, 463, 475, 476, 481, 483, 484, 486, 491, 492, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 524, 526, 527, 529, 534, 572, 612, 626, 627, 631, 645, 646, 659, 661, 698, 699, 706, 714, 716, 720, 723, 726, 731, 735, 739, 745, 748, 749, 751, 752, 753, 758, 759, 764, 766, 770, 773, 775, 780, 785, 790, 792, 796, 831, 832, 844, 850, 863, 864, 865, 866, 871, 876, 877, 878, 880, 881, 882, 885, 886], "heteroskedast": [0, 7, 25, 69, 71, 72, 73, 75, 92, 145, 146, 147, 149, 156, 160, 188, 194, 200, 209, 218, 220, 229, 243, 254, 390, 416, 484, 492, 500, 509, 519, 527, 711, 712, 716, 731, 745, 753, 762, 773, 775, 788], "robust": [0, 7, 17, 21, 25, 69, 70, 71, 72, 73, 75, 92, 110, 144, 145, 146, 147, 149, 156, 160, 188, 194, 200, 209, 218, 220, 222, 229, 231, 233, 243, 254, 277, 330, 367, 390, 392, 394, 397, 399, 400, 416, 424, 484, 492, 500, 509, 519, 527, 548, 584, 637, 672, 709, 711, 712, 714, 745, 753, 762, 770, 773, 775, 788], "estim": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 35, 38, 41, 42, 45, 46, 49, 50, 51, 52, 53, 55, 58, 61, 62, 65, 66, 70, 71, 72, 75, 80, 86, 87, 92, 98, 102, 103, 104, 105, 110, 113, 114, 117, 120, 123, 124, 125, 129, 144, 150, 152, 154, 155, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 172, 173, 188, 189, 191, 192, 194, 196, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 211, 214, 215, 218, 219, 220, 222, 225, 226, 229, 230, 231, 233, 236, 237, 238, 241, 242, 243, 245, 248, 249, 252, 253, 254, 256, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 277, 281, 282, 283, 284, 285, 288, 289, 292, 295, 296, 297, 301, 302, 303, 304, 305, 306, 307, 315, 317, 318, 320, 322, 323, 324, 325, 330, 334, 335, 336, 339, 340, 343, 346, 347, 348, 349, 354, 356, 358, 360, 361, 362, 363, 367, 370, 371, 372, 375, 376, 379, 382, 383, 384, 388, 389, 392, 394, 395, 397, 399, 400, 403, 406, 408, 411, 414, 416, 419, 422, 424, 427, 428, 429, 432, 434, 437, 440, 442, 445, 448, 454, 483, 484, 486, 490, 491, 492, 494, 498, 499, 500, 502, 506, 507, 509, 511, 516, 518, 519, 521, 525, 526, 527, 529, 533, 534, 535, 542, 546, 548, 550, 554, 555, 556, 559, 561, 562, 563, 564, 565, 566, 572, 577, 581, 584, 586, 591, 593, 594, 597, 599, 601, 602, 603, 604, 605, 612, 613, 614, 624, 626, 631, 635, 637, 639, 643, 644, 645, 648, 650, 651, 652, 653, 654, 655, 661, 666, 670, 672, 674, 678, 679, 680, 683, 685, 686, 687, 688, 689, 690, 698, 706, 709, 713, 716, 720, 723, 726, 727, 730, 731, 735, 739, 740, 743, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 762, 764, 768, 770, 773, 775, 778, 780, 781, 785, 788, 790, 792, 794, 796, 797, 799, 800, 801, 809, 810, 811, 812, 815, 816, 819, 821, 822, 823, 824, 827, 828, 829, 830, 831, 832, 834, 835, 836, 844, 845, 846, 849, 850, 853, 855, 856, 857, 858, 861, 863, 864], "paramet": [0, 2, 7, 10, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 31, 35, 38, 39, 45, 48, 49, 52, 55, 58, 59, 65, 68, 69, 70, 71, 72, 73, 75, 78, 79, 80, 87, 92, 95, 97, 98, 101, 102, 103, 110, 113, 114, 117, 118, 124, 127, 128, 130, 135, 139, 144, 145, 146, 147, 148, 149, 150, 152, 156, 158, 162, 164, 168, 170, 174, 175, 176, 177, 178, 188, 190, 191, 193, 194, 196, 200, 203, 204, 206, 207, 208, 209, 211, 215, 216, 217, 218, 219, 220, 222, 226, 227, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 252, 253, 254, 256, 260, 261, 262, 267, 268, 269, 270, 271, 277, 281, 285, 288, 289, 290, 296, 299, 300, 305, 309, 310, 311, 314, 316, 317, 321, 322, 323, 329, 330, 334, 336, 339, 340, 341, 348, 351, 352, 357, 358, 359, 360, 361, 367, 370, 372, 375, 376, 377, 383, 386, 387, 389, 392, 394, 395, 396, 397, 398, 399, 400, 408, 416, 424, 427, 434, 442, 450, 452, 454, 455, 456, 460, 463, 475, 483, 484, 486, 489, 490, 491, 492, 494, 497, 498, 499, 500, 502, 505, 506, 507, 509, 511, 515, 516, 518, 519, 521, 524, 525, 526, 527, 529, 532, 533, 534, 535, 538, 542, 548, 550, 555, 556, 557, 565, 569, 570, 572, 573, 577, 584, 586, 593, 594, 595, 604, 608, 610, 612, 616, 617, 618, 623, 625, 626, 627, 631, 637, 639, 644, 645, 646, 654, 658, 659, 661, 662, 666, 672, 674, 679, 680, 681, 689, 694, 696, 698, 699, 706, 710, 711, 712, 713, 716, 717, 720, 721, 723, 724, 726, 728, 731, 732, 735, 736, 739, 741, 745, 747, 748, 749, 751, 752, 753, 757, 758, 759, 760, 762, 764, 766, 767, 768, 770, 771, 773, 775, 777, 778, 780, 781, 785, 786, 788, 790, 792, 793, 794, 796, 798, 799, 815, 816, 817, 822, 826, 831, 833, 834, 849, 850, 851, 856, 860, 863, 864, 865, 866, 871], "ndarrai": [0, 2, 3, 4, 5, 7, 10, 11, 12, 14, 95, 97, 128, 130, 135, 150, 152, 154, 155, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 189, 190, 192, 193, 194, 195, 196, 198, 199, 202, 203, 204, 205, 206, 208, 213, 214, 216, 217, 219, 220, 224, 225, 227, 228, 230, 231, 235, 236, 237, 239, 240, 242, 247, 248, 250, 251, 253, 258, 259, 261, 262, 300, 302, 352, 387, 400, 403, 404, 405, 408, 411, 412, 413, 416, 419, 420, 421, 424, 429, 430, 431, 434, 437, 438, 439, 442, 445, 446, 447, 450, 454, 455, 458, 471, 472, 473, 482, 488, 496, 504, 513, 523, 531, 570, 610, 659, 696, 716, 717, 719, 720, 721, 723, 724, 726, 728, 731, 732, 734, 735, 736, 738, 739, 741, 744, 747, 748, 751, 752, 757, 758, 773, 780, 781, 782, 784, 827, 863, 864, 865], "score": [0, 5, 7, 14, 73, 145, 146, 149, 150, 154, 156, 160, 162, 166, 168, 172, 194, 198, 317, 353, 355, 390, 408, 714, 716, 731, 739, 745, 753], "moment": [0, 5, 7, 14, 20, 21, 69, 73, 86, 145, 149, 188, 190, 191, 193, 194, 200, 203, 204, 206, 218, 220, 222, 229, 233, 236, 268, 283, 708, 709, 712, 713, 720, 723, 726, 745, 748, 749, 752, 753, 754, 758, 770, 775, 809], "condit": [0, 5, 7, 14, 21, 69, 73, 75, 144, 145, 149, 188, 190, 191, 193, 194, 200, 203, 204, 206, 218, 220, 222, 229, 233, 236, 268, 283, 390, 398, 712, 714, 720, 726, 745, 748, 749, 752, 753, 754, 758, 759, 770, 775, 785, 809], "One": [0, 7, 73, 92, 149, 209, 243, 254, 408, 484, 500, 507, 509, 519, 526, 527, 710, 865], "onli": [0, 7, 16, 19, 23, 27, 69, 73, 75, 86, 98, 99, 113, 145, 146, 147, 241, 281, 329, 334, 357, 370, 390, 392, 393, 398, 399, 450, 454, 460, 475, 509, 536, 537, 547, 550, 556, 582, 583, 586, 594, 636, 639, 645, 671, 674, 680, 710, 712, 714, 762, 770, 788, 820, 824, 854, 858], "one": [0, 7, 17, 19, 21, 23, 25, 27, 69, 75, 79, 84, 128, 144, 145, 146, 149, 194, 204, 218, 220, 229, 268, 300, 318, 320, 352, 387, 390, 392, 393, 398, 399, 400, 408, 416, 424, 450, 491, 547, 570, 583, 610, 636, 659, 671, 696, 706, 710, 711, 712, 714, 759, 764, 766, 768, 775, 778, 790, 794, 816, 820, 850, 854], "must": [0, 7, 19, 21, 23, 24, 69, 71, 79, 87, 145, 147, 178, 211, 215, 222, 226, 233, 238, 245, 249, 256, 260, 289, 340, 376, 393, 394, 399, 484, 489, 497, 500, 505, 515, 524, 532, 556, 594, 645, 680, 706, 710, 711, 716, 759, 764, 766, 768, 770, 775, 778, 780, 785, 790, 794, 816, 850], "provid": [0, 7, 16, 19, 21, 23, 27, 92, 147, 148, 149, 150, 178, 194, 209, 220, 231, 241, 243, 245, 254, 256, 392, 394, 396, 399, 400, 408, 416, 424, 454, 484, 500, 509, 519, 527, 548, 584, 637, 672, 706, 710, 714, 726, 739, 753, 759, 764, 766, 770, 785, 790, 871, 880, 881, 886], "invers": [0, 3, 7, 11, 483, 486, 491, 494, 499, 502, 507, 511, 518, 521, 526, 529, 711], "default": [0, 7, 69, 72, 75, 79, 80, 92, 110, 145, 146, 149, 209, 220, 231, 241, 243, 245, 254, 256, 277, 305, 330, 367, 389, 393, 394, 399, 492, 500, 509, 519, 527, 612, 698, 710, 712, 762, 788, 879, 882], "i": [0, 6, 7, 15, 16, 20, 24, 39, 59, 69, 70, 71, 72, 73, 75, 79, 80, 83, 86, 87, 92, 101, 110, 113, 118, 128, 135, 139, 143, 144, 145, 146, 147, 149, 150, 153, 156, 159, 162, 165, 168, 171, 174, 175, 176, 177, 178, 188, 191, 194, 197, 200, 207, 209, 211, 215, 218, 220, 222, 226, 229, 231, 233, 236, 238, 241, 243, 245, 249, 254, 256, 260, 264, 268, 269, 277, 281, 283, 289, 290, 300, 305, 318, 319, 320, 321, 329, 330, 334, 340, 341, 347, 352, 353, 354, 355, 357, 359, 367, 370, 376, 377, 387, 389, 390, 392, 393, 394, 395, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 454, 475, 483, 484, 486, 489, 490, 491, 492, 494, 497, 498, 499, 500, 502, 505, 506, 507, 509, 511, 515, 516, 518, 519, 521, 524, 525, 526, 527, 529, 532, 533, 536, 537, 538, 539, 540, 541, 547, 548, 550, 557, 559, 570, 573, 574, 575, 576, 582, 583, 584, 586, 595, 597, 610, 612, 627, 628, 629, 630, 636, 637, 639, 646, 648, 659, 662, 663, 664, 665, 671, 672, 674, 681, 683, 696, 698, 703, 706, 708, 710, 711, 712, 713, 714, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 764, 768, 770, 775, 778, 781, 785, 790, 794, 797, 798, 809, 810, 816, 817, 820, 824, 832, 833, 844, 850, 851, 854, 858, 865, 866, 882, 883, 885], "bool": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 80, 87, 92, 93, 106, 112, 132, 150, 153, 156, 159, 162, 165, 168, 171, 178, 188, 189, 191, 192, 194, 195, 197, 200, 202, 204, 205, 209, 212, 220, 223, 230, 231, 234, 243, 246, 254, 257, 274, 280, 289, 305, 326, 333, 340, 364, 369, 376, 389, 400, 408, 416, 424, 434, 442, 450, 454, 456, 484, 486, 487, 492, 494, 495, 500, 502, 503, 507, 508, 509, 511, 512, 514, 517, 518, 519, 521, 522, 527, 529, 530, 556, 594, 612, 645, 680, 698, 706, 716, 731, 735, 739, 745, 749, 753, 762, 780, 788, 800, 802, 816, 835, 837, 850], "flag": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 69, 87, 92, 98, 106, 112, 130, 132, 150, 153, 156, 159, 162, 165, 168, 171, 178, 188, 191, 194, 197, 200, 204, 207, 209, 212, 218, 220, 223, 229, 230, 231, 234, 241, 243, 246, 252, 254, 257, 267, 274, 280, 289, 317, 326, 333, 340, 358, 364, 369, 376, 390, 400, 408, 416, 424, 434, 442, 450, 454, 456, 483, 484, 486, 487, 491, 492, 494, 495, 499, 500, 502, 503, 507, 508, 509, 511, 512, 514, 517, 518, 519, 521, 522, 526, 527, 529, 530, 556, 594, 645, 680, 706, 714, 716, 731, 735, 739, 745, 749, 753, 762, 780, 788, 796, 802, 816, 831, 837, 850], "indic": [0, 6, 7, 15, 16, 17, 19, 20, 21, 23, 25, 69, 75, 80, 87, 92, 98, 106, 112, 130, 132, 145, 146, 147, 149, 150, 153, 156, 159, 162, 165, 168, 171, 178, 188, 191, 194, 197, 200, 204, 207, 209, 211, 212, 218, 220, 222, 223, 229, 230, 231, 233, 234, 241, 243, 245, 246, 252, 254, 256, 257, 267, 268, 274, 280, 283, 289, 317, 318, 320, 326, 333, 340, 358, 364, 369, 376, 390, 397, 398, 400, 408, 416, 424, 434, 442, 450, 454, 455, 456, 483, 484, 486, 487, 491, 492, 494, 495, 499, 500, 502, 503, 507, 508, 509, 511, 512, 514, 517, 518, 519, 521, 522, 526, 527, 529, 530, 556, 594, 645, 680, 706, 716, 731, 735, 739, 745, 749, 753, 759, 762, 765, 770, 776, 780, 785, 788, 791, 796, 802, 809, 816, 831, 837, 850], "when": [0, 7, 21, 69, 70, 71, 72, 73, 75, 87, 92, 128, 140, 144, 145, 146, 147, 149, 174, 178, 194, 200, 215, 226, 231, 238, 241, 249, 252, 260, 264, 289, 300, 340, 352, 355, 376, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 450, 454, 484, 489, 492, 497, 500, 505, 509, 515, 519, 524, 527, 532, 546, 556, 570, 581, 594, 610, 635, 645, 659, 670, 680, 696, 710, 711, 712, 713, 714, 716, 731, 735, 739, 753, 759, 762, 764, 768, 773, 775, 778, 785, 788, 790, 794, 797, 810, 816, 832, 844, 850], "comput": [0, 2, 7, 10, 21, 28, 32, 49, 53, 73, 95, 97, 98, 104, 110, 135, 174, 177, 188, 191, 194, 200, 204, 215, 216, 217, 226, 227, 228, 231, 236, 238, 239, 240, 241, 245, 249, 250, 251, 252, 256, 260, 261, 262, 267, 268, 272, 277, 289, 317, 318, 320, 324, 330, 340, 353, 358, 362, 367, 376, 390, 393, 398, 408, 459, 463, 489, 491, 492, 497, 500, 505, 509, 515, 519, 524, 527, 532, 710, 714, 716, 731, 735, 739, 745, 749, 753, 768, 778, 794, 796, 800, 801, 816, 831, 835, 836, 850, 865], "us": [0, 7, 8, 13, 16, 17, 19, 20, 21, 23, 24, 25, 27, 28, 32, 35, 39, 46, 49, 53, 55, 59, 66, 71, 72, 75, 79, 83, 87, 88, 89, 92, 97, 98, 101, 104, 105, 106, 110, 114, 118, 125, 128, 139, 140, 144, 145, 146, 148, 149, 150, 156, 162, 168, 174, 175, 176, 177, 178, 188, 191, 194, 200, 201, 204, 207, 209, 210, 211, 215, 217, 218, 220, 221, 222, 226, 228, 229, 231, 232, 233, 238, 240, 241, 243, 244, 245, 249, 251, 252, 254, 255, 256, 260, 262, 264, 266, 267, 268, 269, 272, 273, 274, 277, 282, 285, 289, 290, 297, 300, 301, 302, 303, 305, 315, 317, 321, 324, 325, 326, 330, 336, 340, 341, 349, 352, 354, 355, 358, 359, 362, 363, 364, 367, 372, 376, 377, 384, 387, 389, 390, 392, 395, 396, 397, 398, 399, 400, 408, 416, 424, 434, 450, 454, 460, 463, 475, 483, 484, 485, 486, 489, 490, 491, 492, 493, 494, 497, 498, 499, 500, 501, 502, 505, 506, 507, 509, 510, 511, 515, 516, 518, 519, 520, 521, 524, 525, 526, 527, 528, 529, 532, 533, 534, 538, 539, 540, 541, 548, 554, 556, 557, 561, 562, 563, 566, 570, 572, 573, 574, 575, 576, 584, 591, 594, 595, 599, 601, 602, 605, 610, 612, 624, 626, 627, 628, 629, 630, 637, 643, 645, 646, 650, 651, 652, 655, 659, 661, 662, 663, 664, 665, 672, 678, 680, 681, 685, 686, 687, 690, 691, 696, 698, 706, 709, 712, 713, 714, 716, 718, 720, 722, 723, 725, 726, 727, 729, 730, 731, 733, 735, 737, 739, 740, 742, 743, 745, 749, 753, 754, 756, 759, 760, 762, 763, 764, 766, 768, 770, 771, 773, 774, 775, 778, 780, 781, 785, 786, 788, 789, 790, 792, 794, 796, 797, 798, 800, 801, 802, 810, 812, 816, 817, 820, 823, 827, 828, 829, 831, 832, 833, 835, 836, 837, 844, 846, 850, 851, 854, 857, 871], "int": [0, 7, 21, 34, 37, 57, 107, 108, 109, 116, 131, 142, 168, 174, 175, 176, 177, 178, 182, 184, 187, 189, 192, 195, 200, 201, 202, 205, 215, 220, 226, 230, 238, 249, 260, 275, 276, 282, 287, 327, 328, 338, 365, 366, 374, 400, 408, 416, 424, 434, 442, 464, 465, 466, 467, 469, 480, 489, 497, 505, 515, 524, 532, 543, 544, 554, 578, 579, 591, 632, 633, 643, 667, 668, 678, 706, 762, 768, 773, 778, 780, 788, 794, 803, 804, 808, 814, 838, 839, 843, 848, 871], "degre": [0, 7, 17, 21, 25, 73, 92, 98, 108, 109, 209, 220, 231, 243, 254, 267, 275, 276, 283, 317, 319, 327, 328, 347, 358, 365, 366, 390, 393, 395, 398, 399, 400, 408, 416, 434, 442, 484, 492, 500, 509, 519, 527, 534, 543, 544, 547, 548, 572, 578, 579, 582, 583, 584, 626, 632, 633, 636, 637, 661, 667, 668, 671, 672, 796, 803, 804, 809, 831, 838, 839, 871], "freedom": [0, 7, 17, 21, 25, 73, 92, 98, 108, 109, 209, 220, 231, 243, 254, 267, 275, 276, 283, 317, 319, 327, 328, 347, 358, 365, 366, 390, 393, 395, 398, 399, 400, 408, 416, 434, 442, 484, 492, 500, 509, 519, 527, 534, 543, 544, 547, 548, 572, 578, 579, 582, 583, 584, 626, 632, 633, 636, 637, 661, 667, 668, 671, 672, 796, 803, 804, 809, 831, 838, 839, 871], "valu": [0, 7, 16, 20, 21, 24, 69, 70, 71, 72, 73, 75, 79, 80, 92, 98, 99, 103, 110, 111, 128, 144, 145, 146, 147, 149, 150, 156, 162, 168, 207, 208, 213, 215, 218, 220, 224, 226, 229, 230, 231, 235, 238, 241, 242, 245, 247, 249, 252, 253, 256, 258, 260, 264, 267, 268, 271, 277, 279, 284, 289, 300, 305, 308, 317, 318, 319, 320, 323, 329, 330, 332, 335, 340, 347, 352, 353, 354, 355, 357, 358, 361, 367, 368, 371, 376, 387, 389, 392, 393, 394, 395, 397, 398, 399, 400, 416, 424, 454, 459, 475, 476, 484, 489, 490, 497, 498, 500, 505, 506, 509, 515, 516, 519, 524, 525, 527, 532, 533, 534, 536, 537, 547, 548, 549, 556, 570, 572, 582, 583, 584, 585, 594, 610, 612, 615, 626, 636, 637, 638, 645, 659, 661, 671, 672, 673, 680, 691, 696, 698, 701, 703, 706, 710, 711, 712, 713, 714, 716, 759, 760, 764, 768, 770, 771, 775, 778, 780, 782, 785, 786, 790, 794, 796, 807, 816, 831, 842, 850, 871, 872, 874, 882, 883], "ot": [0, 7, 450], "attribut": [0, 7, 16, 20, 24, 28, 49, 87, 98, 130, 135, 146, 150, 156, 162, 168, 178, 188, 191, 194, 200, 204, 207, 218, 229, 241, 252, 263, 267, 305, 317, 358, 400, 408, 416, 424, 434, 442, 450, 475, 483, 491, 499, 507, 518, 526, 534, 572, 612, 626, 661, 699, 710, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 770, 780, 785, 796, 831, 866, 871, 876], "config": [0, 7, 150, 156, 162, 168, 188, 191, 194, 200, 204, 745, 749, 753], "cov": [0, 7, 28, 49, 69, 70, 72, 98, 144, 145, 146, 147, 149, 150, 156, 162, 168, 194, 267, 317, 358, 392, 393, 394, 397, 399, 400, 408, 416, 424, 434, 442, 534, 572, 626, 661, 710, 711, 712, 713, 716, 720, 723, 726, 731, 735, 739, 796, 831], "The": [0, 4, 7, 12, 16, 17, 19, 20, 21, 23, 24, 25, 27, 69, 70, 71, 72, 87, 92, 98, 113, 128, 143, 144, 145, 146, 147, 149, 188, 191, 200, 207, 209, 211, 215, 218, 222, 226, 233, 236, 238, 241, 243, 245, 249, 254, 256, 260, 264, 267, 268, 281, 283, 300, 317, 318, 319, 320, 329, 334, 347, 352, 353, 354, 355, 357, 358, 370, 387, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 408, 416, 424, 427, 434, 442, 450, 483, 491, 492, 499, 507, 509, 518, 526, 534, 535, 536, 537, 539, 540, 541, 547, 548, 550, 561, 562, 563, 570, 574, 575, 576, 582, 583, 584, 586, 599, 601, 602, 610, 628, 629, 630, 636, 637, 639, 650, 651, 652, 659, 663, 664, 665, 671, 672, 674, 685, 686, 687, 696, 698, 706, 708, 709, 710, 711, 712, 713, 714, 720, 723, 726, 745, 747, 749, 751, 753, 757, 759, 760, 762, 764, 770, 771, 775, 781, 785, 786, 788, 790, 797, 809, 810, 820, 824, 832, 844, 854, 858, 865, 871], "": [0, 7, 69, 70, 71, 72, 73, 75, 145, 146, 148, 149, 150, 156, 162, 168, 174, 191, 194, 200, 241, 245, 256, 264, 268, 317, 319, 320, 329, 353, 354, 355, 390, 392, 393, 396, 398, 400, 408, 416, 434, 442, 484, 500, 509, 519, 527, 699, 710, 711, 712, 714, 716, 726, 731, 739, 753, 820, 824, 854, 858, 871, 880, 881, 886], "squar": [0, 7, 28, 40, 47, 49, 60, 67, 69, 70, 72, 75, 86, 98, 115, 119, 126, 144, 145, 146, 147, 149, 207, 264, 267, 286, 291, 298, 317, 329, 337, 342, 350, 357, 358, 373, 378, 385, 392, 393, 394, 397, 398, 399, 454, 509, 534, 539, 540, 541, 547, 552, 558, 568, 572, 574, 575, 576, 582, 583, 589, 596, 607, 626, 628, 629, 630, 636, 641, 647, 657, 661, 663, 664, 665, 671, 676, 682, 693, 710, 711, 713, 759, 796, 813, 818, 825, 831, 847, 852, 859], "method": [0, 7, 16, 20, 24, 28, 46, 49, 66, 69, 70, 75, 77, 86, 87, 92, 98, 125, 130, 135, 144, 145, 147, 148, 149, 150, 156, 162, 168, 178, 188, 191, 194, 200, 204, 207, 208, 218, 219, 229, 241, 242, 252, 253, 263, 266, 267, 297, 303, 305, 307, 315, 317, 349, 358, 384, 392, 393, 396, 399, 400, 408, 416, 424, 434, 442, 450, 475, 483, 491, 499, 507, 518, 526, 534, 566, 572, 605, 612, 614, 624, 626, 655, 661, 690, 699, 708, 709, 710, 711, 712, 713, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 762, 770, 780, 785, 788, 796, 823, 831, 857, 866, 871, 876, 885], "properti": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 22, 24, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 75, 87, 88, 89, 90, 91, 93, 94, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 210, 212, 213, 214, 218, 221, 223, 224, 225, 229, 232, 234, 235, 237, 241, 244, 246, 247, 248, 252, 255, 257, 258, 259, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 397, 399, 400, 403, 405, 406, 407, 408, 411, 413, 414, 415, 416, 419, 421, 422, 423, 424, 427, 428, 429, 431, 432, 433, 434, 437, 439, 440, 441, 442, 445, 447, 448, 449, 450, 453, 457, 458, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 485, 487, 488, 491, 493, 495, 496, 499, 501, 503, 504, 507, 508, 510, 512, 513, 514, 517, 518, 520, 522, 523, 526, 528, 530, 531, 534, 535, 536, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 749, 750, 753, 754, 755, 756, 759, 760, 761, 763, 765, 767, 770, 771, 772, 774, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 789, 791, 793, 796, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875], "dict": [1, 9, 21, 25, 49, 92, 98, 103, 151, 157, 163, 169, 182, 189, 192, 195, 202, 205, 230, 231, 265, 267, 271, 301, 305, 317, 323, 358, 361, 389, 393, 612, 698, 712, 713, 759, 763, 764, 768, 770, 774, 775, 778, 785, 789, 790, 794, 800, 816, 828, 835, 850, 872], "str": [1, 7, 9, 13, 17, 18, 19, 21, 22, 23, 25, 26, 27, 32, 36, 49, 53, 56, 78, 79, 80, 81, 82, 83, 84, 92, 98, 103, 104, 105, 114, 128, 133, 140, 146, 151, 157, 163, 168, 169, 174, 178, 189, 192, 194, 195, 200, 202, 205, 209, 210, 211, 218, 220, 221, 222, 229, 231, 232, 233, 243, 244, 245, 254, 255, 256, 265, 267, 268, 271, 272, 273, 285, 300, 301, 303, 317, 323, 324, 325, 329, 336, 352, 357, 358, 361, 362, 363, 372, 387, 392, 400, 401, 406, 409, 414, 416, 417, 422, 424, 425, 432, 435, 440, 443, 448, 450, 484, 485, 486, 492, 493, 494, 500, 501, 502, 509, 510, 511, 519, 520, 521, 527, 528, 529, 553, 570, 587, 590, 610, 642, 659, 677, 696, 712, 726, 730, 739, 743, 753, 756, 762, 763, 764, 767, 770, 773, 774, 775, 777, 788, 789, 790, 793, 800, 801, 805, 811, 828, 829, 835, 836, 840, 845, 866, 868, 871, 872, 873], "float": [1, 8, 9, 40, 44, 47, 60, 64, 67, 80, 100, 101, 115, 119, 121, 122, 123, 126, 150, 156, 162, 168, 177, 220, 236, 241, 245, 256, 269, 284, 286, 291, 293, 294, 295, 298, 321, 335, 337, 342, 344, 345, 346, 350, 359, 371, 373, 378, 380, 381, 382, 385, 407, 415, 423, 428, 433, 441, 449, 475, 492, 536, 537, 538, 539, 540, 541, 551, 552, 558, 560, 561, 562, 563, 564, 568, 573, 574, 575, 576, 588, 589, 596, 598, 599, 600, 601, 602, 603, 607, 627, 628, 629, 630, 640, 641, 647, 649, 650, 651, 652, 653, 657, 662, 663, 664, 665, 675, 676, 682, 684, 685, 686, 687, 688, 693, 706, 726, 727, 739, 740, 753, 754, 762, 773, 788, 798, 813, 818, 820, 825, 833, 847, 852, 854, 859, 865, 869, 870, 871, 872, 874, 875], "return": [2, 5, 10, 14, 16, 17, 19, 20, 21, 23, 24, 25, 27, 35, 46, 55, 66, 69, 71, 72, 73, 75, 80, 81, 82, 83, 84, 88, 89, 92, 95, 97, 101, 110, 125, 128, 138, 139, 143, 146, 148, 174, 175, 176, 177, 180, 189, 190, 192, 193, 202, 203, 205, 206, 208, 209, 211, 215, 216, 217, 219, 220, 222, 226, 227, 228, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 245, 249, 250, 251, 253, 254, 256, 260, 261, 262, 264, 265, 266, 268, 269, 277, 278, 283, 289, 297, 300, 315, 318, 319, 320, 321, 329, 330, 331, 340, 347, 349, 352, 353, 354, 355, 357, 359, 367, 376, 384, 387, 389, 390, 393, 395, 396, 404, 412, 420, 427, 430, 438, 446, 450, 451, 452, 454, 455, 456, 458, 459, 460, 461, 463, 471, 476, 481, 484, 486, 489, 490, 492, 494, 497, 498, 500, 502, 505, 506, 509, 511, 515, 516, 519, 521, 524, 525, 527, 529, 532, 533, 535, 538, 539, 540, 541, 547, 548, 556, 561, 562, 563, 566, 570, 573, 574, 575, 576, 582, 583, 584, 594, 599, 601, 602, 605, 610, 624, 627, 628, 629, 630, 636, 637, 645, 650, 651, 652, 655, 659, 662, 663, 664, 665, 671, 672, 680, 685, 686, 687, 690, 696, 698, 701, 703, 706, 710, 746, 747, 748, 750, 751, 752, 755, 757, 758, 760, 761, 762, 764, 766, 767, 768, 769, 771, 772, 773, 775, 777, 778, 779, 781, 784, 786, 787, 788, 790, 792, 793, 794, 795, 797, 798, 809, 810, 816, 820, 823, 824, 832, 833, 844, 850, 854, 857, 858, 863, 864, 865, 866, 867, 869, 877, 878, 880, 881, 882, 883, 885, 886], "kernel": [7, 17, 21, 25, 69, 70, 71, 72, 73, 75, 92, 145, 149, 168, 174, 175, 176, 177, 194, 200, 209, 218, 220, 229, 243, 254, 398, 400, 401, 416, 417, 424, 491, 492, 500, 509, 519, 527, 726, 739, 753, 762, 788, 864], "bandwidth": [7, 17, 21, 25, 69, 70, 72, 73, 75, 149, 168, 174, 177, 194, 200, 400, 401, 416, 417, 424, 492, 500, 509, 519, 527, 710, 726, 739, 753], "autocorrel": [7, 25, 69, 92, 145, 149, 194, 200, 209, 218, 220, 229, 243, 254, 390, 400, 416, 424, 753, 762, 788], "hac": [7, 25, 69, 71, 72, 73, 75, 168, 172, 398, 424, 492, 500, 509, 519, 527, 739], "name": [7, 17, 21, 25, 28, 49, 69, 75, 79, 80, 92, 110, 145, 146, 168, 174, 178, 194, 200, 209, 218, 220, 222, 229, 231, 233, 243, 254, 265, 277, 305, 330, 367, 389, 392, 393, 400, 408, 416, 424, 434, 442, 450, 457, 470, 474, 484, 492, 500, 509, 511, 519, 527, 534, 572, 612, 626, 661, 698, 706, 710, 711, 726, 739, 753, 759, 762, 764, 767, 770, 773, 775, 777, 785, 788, 790, 793, 866, 871], "see": [7, 17, 21, 25, 69, 70, 72, 75, 92, 144, 145, 147, 149, 194, 209, 220, 231, 243, 254, 398, 484, 492, 500, 509, 511, 519, 527, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687, 710, 764, 775, 790, 797, 810, 832, 844], "note": [7, 16, 17, 19, 20, 21, 23, 24, 25, 27, 35, 46, 55, 66, 69, 73, 83, 87, 92, 97, 101, 110, 113, 125, 128, 135, 143, 145, 146, 149, 150, 156, 162, 168, 174, 175, 176, 177, 188, 191, 194, 200, 207, 208, 209, 211, 215, 217, 218, 219, 222, 226, 228, 229, 230, 231, 233, 236, 238, 240, 241, 242, 243, 245, 249, 251, 252, 253, 254, 256, 260, 262, 266, 268, 269, 277, 281, 283, 289, 297, 300, 315, 318, 319, 320, 321, 329, 330, 334, 340, 347, 349, 352, 353, 354, 355, 357, 359, 367, 370, 376, 384, 387, 390, 393, 395, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 454, 460, 475, 483, 484, 486, 489, 490, 491, 492, 494, 497, 498, 499, 500, 502, 505, 506, 507, 509, 515, 516, 518, 519, 521, 524, 525, 526, 527, 529, 532, 533, 538, 539, 540, 541, 543, 544, 546, 547, 548, 550, 556, 559, 561, 562, 563, 566, 570, 573, 574, 575, 576, 578, 579, 581, 582, 583, 584, 586, 594, 597, 599, 601, 602, 605, 610, 624, 627, 628, 629, 630, 632, 633, 635, 636, 637, 639, 645, 648, 650, 651, 652, 655, 659, 662, 663, 664, 665, 667, 668, 670, 671, 672, 674, 680, 683, 685, 686, 687, 690, 696, 710, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 760, 764, 766, 768, 770, 771, 775, 778, 780, 781, 784, 785, 786, 790, 792, 794, 797, 798, 809, 810, 816, 820, 823, 824, 832, 833, 844, 850, 854, 857, 858, 865], "avail": [7, 69, 72, 75, 92, 145, 148, 149, 177, 194, 209, 218, 220, 229, 231, 243, 254, 390, 393, 396, 399, 408, 491, 556, 594, 645, 680, 708, 710, 711, 714], "bartlett": [7, 17, 21, 25, 69, 71, 72, 149, 168, 174, 175, 177, 200, 390, 398, 400, 416, 500, 509, 519, 527, 710, 726, 739, 753], "non": [7, 16, 20, 69, 70, 72, 86, 87, 145, 149, 168, 390, 400, 416, 424, 483, 488, 491, 496, 499, 504, 507, 513, 518, 523, 526, 531, 534, 547, 548, 572, 583, 584, 626, 636, 637, 661, 671, 672, 706, 710], "neg": [7, 21, 145, 146, 168, 400, 416, 424, 706, 714], "integ": [7, 17, 21, 25, 393, 400, 416, 424, 484, 500, 509, 519, 527, 716], "If": [7, 16, 19, 20, 21, 23, 73, 79, 88, 89, 92, 110, 144, 145, 149, 150, 156, 162, 168, 178, 194, 200, 215, 220, 226, 231, 238, 241, 245, 249, 256, 260, 268, 277, 289, 305, 329, 330, 340, 357, 367, 376, 389, 390, 392, 398, 399, 400, 416, 424, 450, 454, 484, 489, 492, 497, 500, 505, 507, 509, 515, 519, 524, 527, 532, 548, 584, 612, 637, 672, 698, 706, 710, 714, 716, 726, 731, 735, 739, 748, 752, 753, 758, 759, 760, 764, 768, 770, 771, 773, 775, 778, 785, 786, 790, 794, 816, 850, 871, 882, 885], "optim": [7, 20, 21, 69, 75, 145, 149, 174, 200, 220, 230, 231, 236, 390, 726, 739, 753], "iv": [7, 75, 86, 144, 145, 147, 148, 149, 390, 708, 712, 713, 714, 720, 723, 726, 739, 759, 766, 770], "kernel_weight_bartlett": [7, 168, 174, 200, 739], "kernel_weight_parzen": [7, 168, 174, 200, 739], "kernel_weight_quadratic_spectr": [7, 168, 174, 200, 739], "portfolio": [16, 19, 20, 23, 24, 27, 35, 55, 71, 72, 73, 792], "factor": [16, 19, 20, 23, 24, 27, 28, 30, 33, 41, 42, 49, 51, 54, 61, 62, 69, 72, 75, 86, 87, 130, 146, 392, 708, 709, 710, 792], "risk_fre": [16, 19, 20, 23, 69, 70], "sigma": [16, 19, 71, 73, 146, 390, 398, 400, 408, 416, 434, 442, 548, 584, 637, 672, 710, 711, 714, 716, 720, 723, 726, 731, 735, 739, 748, 749, 752, 758, 759, 764, 770, 785, 790, 796, 810, 824, 831, 844, 858], "linear": [16, 20, 24, 49, 69, 72, 75, 85, 86, 87, 128, 149, 300, 352, 387, 393, 570, 610, 659, 696, 708, 709, 710, 770, 780], "array_lik": [16, 19, 20, 21, 23, 24, 27, 87, 178, 207, 211, 215, 218, 222, 226, 229, 233, 238, 241, 245, 249, 252, 256, 260, 289, 340, 376, 483, 486, 489, 490, 491, 494, 497, 498, 499, 502, 505, 506, 507, 511, 515, 516, 518, 521, 524, 525, 526, 529, 532, 533, 556, 594, 645, 680, 759, 764, 766, 768, 770, 778, 785, 790, 792, 794], "test": [16, 17, 19, 20, 21, 23, 24, 25, 27, 35, 55, 69, 71, 72, 73, 75, 86, 110, 128, 146, 148, 264, 267, 268, 277, 283, 300, 317, 318, 319, 320, 329, 330, 347, 352, 353, 354, 355, 357, 367, 387, 392, 393, 394, 396, 397, 399, 490, 498, 506, 516, 525, 533, 534, 547, 548, 570, 572, 582, 583, 584, 610, 626, 636, 637, 659, 661, 671, 672, 696, 706, 709, 710, 713, 780, 796, 797, 809, 810, 832, 844, 866, 870, 871, 872, 874, 875], "nob": [16, 20, 24, 28, 49, 75, 87, 98, 135, 144, 146, 150, 156, 162, 168, 174, 178, 190, 193, 194, 200, 203, 206, 207, 208, 215, 218, 219, 226, 229, 230, 236, 238, 241, 242, 249, 252, 253, 260, 267, 289, 305, 317, 340, 358, 376, 408, 424, 427, 450, 489, 497, 505, 515, 524, 532, 534, 535, 536, 537, 544, 556, 572, 579, 594, 612, 626, 633, 645, 661, 668, 680, 710, 716, 720, 723, 726, 731, 735, 739, 748, 752, 753, 758, 766, 792, 796, 831], "nportfolio": [16, 19, 20, 24], "price": [16, 20, 24, 35, 55, 69, 70, 72, 73, 75, 86, 146, 709], "nfactor": [16, 20, 24], "whether": [16, 17, 19, 20, 21, 23, 25, 69, 71, 75, 80, 87, 92, 98, 106, 128, 130, 132, 145, 146, 149, 150, 156, 162, 168, 178, 188, 191, 194, 200, 204, 209, 220, 230, 231, 243, 254, 267, 274, 283, 289, 300, 317, 318, 320, 326, 340, 352, 353, 354, 355, 358, 364, 376, 387, 390, 394, 398, 400, 408, 416, 424, 434, 442, 450, 454, 484, 486, 492, 494, 500, 502, 507, 508, 509, 511, 514, 517, 518, 519, 521, 527, 529, 556, 570, 594, 610, 645, 659, 680, 696, 714, 716, 745, 749, 753, 762, 780, 788, 796, 802, 809, 816, 831, 837, 850], "risk": [16, 19, 20, 23, 24, 28, 41, 42, 43, 49, 61, 62, 63, 69, 70, 71, 72, 73], "free": [16, 19, 20, 23, 69, 70, 71, 73], "rate": [16, 19, 20, 23, 69, 70, 71, 73, 146, 393, 710], "should": [16, 19, 20, 23, 72, 87, 92, 145, 146, 147, 178, 229, 241, 252, 390, 392, 393, 394, 450, 456, 483, 484, 486, 491, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 526, 527, 529, 706, 708, 714, 797, 810, 832, 844], "from": [16, 19, 20, 23, 27, 49, 69, 70, 72, 73, 75, 79, 80, 86, 87, 92, 98, 99, 103, 113, 128, 130, 135, 139, 143, 144, 145, 146, 147, 148, 149, 175, 176, 177, 211, 215, 222, 226, 233, 238, 245, 249, 256, 260, 263, 264, 265, 267, 271, 281, 289, 300, 317, 323, 329, 334, 340, 347, 352, 354, 355, 357, 358, 361, 370, 376, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 408, 455, 484, 486, 489, 492, 494, 497, 500, 502, 505, 509, 511, 515, 519, 521, 524, 527, 529, 532, 547, 548, 550, 559, 570, 582, 583, 584, 586, 597, 610, 636, 637, 639, 648, 659, 671, 672, 674, 683, 696, 710, 711, 712, 713, 714, 747, 748, 751, 752, 757, 758, 764, 766, 768, 775, 778, 790, 792, 794, 796, 816, 820, 824, 831, 850, 854, 858, 877, 885], "along": [16, 19, 20, 23, 69, 268, 710, 712], "other": [16, 19, 20, 23, 69, 70, 85, 87, 135, 139, 144, 145, 146, 147, 148, 208, 219, 230, 242, 253, 264, 390, 394, 395, 396, 397, 398, 399, 484, 500, 507, 509, 514, 519, 527, 572, 592, 706, 710, 712, 762, 788], "premia": [16, 19, 20, 23, 24, 28, 41, 42, 43, 49, 61, 62, 63, 69, 70, 71, 72, 73], "ar": [16, 19, 20, 21, 23, 24, 25, 35, 55, 69, 70, 71, 72, 73, 75, 78, 79, 80, 85, 86, 87, 92, 97, 110, 128, 135, 139, 144, 145, 146, 147, 148, 149, 168, 177, 194, 209, 211, 215, 217, 218, 220, 222, 226, 228, 229, 231, 233, 238, 240, 243, 245, 249, 251, 254, 256, 260, 262, 264, 265, 268, 277, 283, 289, 300, 329, 330, 340, 347, 352, 354, 355, 357, 367, 376, 387, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 408, 416, 434, 442, 450, 454, 475, 484, 489, 491, 492, 497, 500, 505, 507, 508, 509, 511, 514, 515, 517, 519, 524, 527, 532, 556, 559, 570, 572, 582, 594, 597, 610, 645, 648, 659, 680, 683, 696, 706, 710, 711, 712, 713, 714, 753, 759, 760, 762, 768, 770, 771, 773, 775, 778, 784, 785, 786, 788, 794, 797, 809, 810, 816, 824, 832, 844, 850, 858], "assum": [16, 19, 20, 23, 69, 73, 145, 146, 149, 194, 218, 220, 229, 231, 268, 390, 450, 483, 484, 486, 491, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 526, 527, 529, 710, 711, 712, 714, 716, 731, 735, 739, 775], "excess": [16, 19, 20, 23, 24, 72, 73], "correct": [16, 19, 20, 23, 73, 75, 146, 149, 390, 509, 527, 547, 582, 583, 636, 671, 710, 780], "posit": [16, 17, 19, 21, 25, 73, 175, 176, 177, 218, 268, 390, 770], "definit": [16, 19, 218, 390, 399, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687, 770], "residu": [16, 19, 28, 40, 49, 60, 73, 95, 97, 98, 109, 115, 119, 120, 123, 129, 144, 145, 146, 150, 155, 156, 161, 162, 167, 168, 173, 194, 199, 216, 217, 227, 228, 239, 240, 250, 251, 261, 262, 267, 276, 283, 286, 291, 292, 295, 304, 317, 328, 329, 337, 342, 343, 346, 347, 353, 354, 355, 356, 357, 358, 366, 373, 378, 379, 382, 388, 390, 393, 398, 400, 405, 408, 413, 416, 421, 424, 431, 434, 439, 442, 447, 483, 484, 486, 491, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 526, 527, 529, 534, 544, 547, 548, 552, 558, 559, 564, 571, 572, 579, 582, 583, 584, 589, 596, 597, 603, 609, 611, 626, 633, 636, 637, 641, 647, 648, 653, 660, 661, 668, 671, 672, 676, 682, 683, 688, 695, 697, 712, 714, 716, 720, 723, 726, 731, 735, 739, 747, 749, 751, 757, 759, 764, 770, 785, 790, 796, 797, 804, 810, 813, 818, 819, 820, 821, 824, 830, 831, 832, 839, 844, 847, 852, 853, 854, 855, 858, 861], "covari": [16, 17, 19, 21, 25, 28, 31, 32, 35, 49, 52, 53, 55, 69, 70, 71, 72, 73, 75, 92, 98, 102, 103, 104, 105, 106, 110, 146, 147, 148, 190, 193, 194, 196, 197, 198, 200, 203, 206, 209, 220, 231, 243, 254, 264, 267, 270, 271, 272, 273, 274, 277, 305, 306, 317, 322, 323, 324, 325, 326, 330, 354, 358, 360, 361, 362, 363, 364, 367, 396, 397, 399, 484, 491, 492, 500, 509, 519, 527, 534, 542, 548, 572, 577, 584, 612, 613, 626, 631, 637, 661, 666, 672, 706, 709, 712, 713, 747, 748, 749, 751, 752, 753, 754, 757, 758, 759, 762, 764, 770, 773, 785, 788, 790, 796, 799, 800, 801, 802, 810, 821, 824, 831, 834, 835, 836, 837, 844, 855, 858], "suitabl": [16, 20], "trade": [16, 20, 24, 69, 71, 72, 75, 86, 708], "implement": [16, 20, 24, 35, 55, 69, 71, 72, 73, 110, 146, 268, 277, 330, 354, 355, 367, 390, 393, 394, 396, 397, 399, 408, 454, 463, 491, 548, 584, 637, 672, 708, 710, 714, 759, 764, 770, 785, 790], "2": [16, 21, 28, 44, 49, 64, 70, 71, 72, 73, 79, 86, 87, 98, 100, 121, 122, 128, 135, 139, 144, 145, 146, 147, 149, 150, 156, 162, 176, 177, 191, 194, 200, 211, 220, 222, 233, 245, 256, 267, 293, 294, 300, 305, 312, 313, 317, 344, 345, 347, 352, 353, 355, 358, 380, 381, 387, 389, 390, 392, 393, 394, 397, 399, 408, 434, 442, 450, 454, 475, 484, 500, 507, 509, 519, 527, 570, 610, 612, 619, 620, 621, 622, 659, 696, 698, 699, 704, 706, 708, 709, 710, 711, 712, 713, 716, 731, 739, 753, 762, 773, 788, 797, 810, 820, 824, 832, 844, 854, 858, 883], "step": [16, 21, 28, 34, 71, 72, 73, 75, 86, 145, 146, 149, 220, 267, 302, 708, 710, 711, 712, 714, 773], "load": [16, 19, 20, 23, 24, 27, 28, 30, 33, 49, 51, 54, 69, 70, 71, 72, 73, 128, 145, 146, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 392, 397, 570, 610, 659, 696, 710, 711, 712, 713, 780, 783, 792], "first": [16, 19, 23, 27, 69, 71, 72, 73, 75, 86, 146, 147, 149, 178, 220, 263, 264, 265, 267, 268, 278, 317, 331, 353, 392, 397, 399, 450, 456, 459, 499, 500, 703, 708, 710, 712, 714, 764, 773, 775, 781, 790], "stage": [16, 69, 73, 75, 86, 146, 147, 149, 207, 263, 264, 265, 267, 278, 317, 331, 353, 708, 710, 713, 759], "r_": [16, 20, 24, 71, 73, 390, 398, 714], "c_i": [16, 143], "f_t": [16, 20, 24], "beta_i": [16, 24, 71, 354, 710, 759, 770, 785], "epsilon_": [16, 20, 24, 73, 390, 393, 397, 398, 400, 491, 499, 507, 518, 526, 714, 745, 753, 759, 770, 785], "where": [16, 20, 24, 69, 71, 72, 73, 75, 87, 128, 143, 144, 145, 146, 147, 149, 150, 156, 162, 168, 177, 188, 191, 200, 218, 220, 229, 236, 241, 264, 268, 283, 300, 305, 318, 319, 320, 329, 347, 352, 353, 354, 355, 357, 387, 389, 390, 392, 393, 394, 397, 398, 400, 408, 416, 434, 442, 475, 483, 486, 490, 494, 498, 502, 506, 507, 511, 516, 521, 525, 526, 529, 533, 547, 548, 570, 582, 583, 584, 610, 612, 636, 637, 659, 671, 672, 696, 698, 710, 711, 712, 713, 714, 716, 720, 723, 726, 731, 735, 739, 745, 749, 753, 759, 764, 768, 770, 775, 778, 785, 790, 794, 797, 809, 810, 816, 820, 824, 832, 844, 850, 854, 858, 865], "requir": [16, 69, 71, 72, 75, 79, 80, 85, 145, 149, 211, 222, 233, 245, 252, 256, 268, 319, 347, 390, 392, 393, 394, 397, 486, 494, 500, 502, 507, 509, 511, 518, 521, 529, 710, 712, 714, 768, 778, 794, 810, 816, 844, 850], "allow": [16, 69, 70, 71, 75, 92, 145, 146, 147, 149, 194, 218, 220, 229, 393, 394, 395, 398, 710, 712, 713, 714, 745, 753, 762, 775, 788], "econom": [16, 71, 146, 709, 710], "interest": [16, 70, 87, 144, 146, 390, 397, 710], "These": [16, 69, 75, 85, 113, 145, 146, 149, 281, 334, 370, 390, 392, 393, 399, 507, 550, 559, 586, 597, 639, 648, 674, 683, 710, 711, 712, 714, 768, 778, 794, 816, 820, 850, 854], "report": [16, 73, 75, 145, 146, 147, 390, 393, 395, 399, 491, 710, 714], "second": [16, 19, 23, 27, 69, 71, 72, 73, 144, 145, 146, 268, 390, 398, 710, 764, 775, 790], "bar": [16, 73, 191, 229, 236, 283, 390, 398, 483, 539, 541, 574, 576, 628, 630, 663, 665, 714, 809], "r": [16, 28, 44, 49, 64, 69, 70, 72, 73, 75, 98, 100, 121, 122, 135, 139, 144, 145, 146, 147, 149, 264, 267, 293, 294, 305, 312, 313, 317, 344, 345, 353, 355, 358, 380, 381, 390, 392, 393, 394, 396, 397, 399, 612, 619, 620, 621, 622, 709, 710, 711, 712, 713, 760, 771, 780, 786, 824, 858], "_i": [16, 24, 35, 55, 150, 156, 162, 168, 200, 236, 283, 353, 354, 400, 434, 539, 541, 574, 576, 628, 630, 663, 665, 753, 810, 844], "lambda_0": [16, 71], "hat": [16, 24, 35, 55, 71, 73, 150, 156, 162, 168, 207, 218, 229, 236, 241, 283, 318, 320, 329, 347, 353, 354, 355, 357, 390, 398, 400, 408, 416, 434, 442, 491, 539, 540, 541, 548, 574, 575, 576, 584, 628, 629, 630, 637, 663, 664, 665, 672, 710, 714, 716, 731, 739, 753, 759, 770, 785, 797, 810, 820, 824, 832, 844, 854, 858], "beta": [16, 20, 28, 49, 69, 73, 87, 144, 207, 218, 229, 236, 241, 390, 393, 397, 398, 483, 491, 499, 507, 518, 526, 539, 540, 541, 548, 574, 575, 576, 584, 628, 629, 630, 637, 663, 664, 665, 672, 710, 714, 759, 760, 770, 771, 780, 781, 785, 786], "prime": [16, 71, 73, 150, 156, 168, 347, 390, 398, 483, 491, 499, 507, 518, 526, 710, 714, 753, 781, 824, 858], "lambda": [16, 20, 28, 41, 49, 61, 71, 73], "eta_i": [16, 355], "averag": [16, 24, 71, 73, 75, 144, 146, 149, 220, 236, 390, 393, 397, 398, 454, 463, 483, 534, 536, 537, 539, 561, 574, 599, 628, 650, 663, 685, 710, 714, 773, 809, 824, 858], "includ": [16, 28, 33, 49, 54, 69, 70, 73, 98, 112, 130, 145, 146, 147, 150, 156, 162, 168, 174, 207, 211, 212, 214, 218, 222, 223, 225, 229, 233, 234, 237, 241, 245, 246, 248, 252, 256, 257, 259, 264, 267, 280, 283, 289, 305, 317, 333, 340, 358, 369, 376, 389, 390, 392, 394, 395, 397, 398, 399, 486, 491, 494, 502, 507, 508, 514, 517, 521, 529, 536, 537, 540, 543, 544, 546, 547, 548, 556, 562, 572, 575, 578, 579, 581, 582, 583, 584, 587, 594, 600, 601, 612, 626, 629, 632, 633, 635, 636, 637, 645, 651, 664, 667, 668, 670, 671, 672, 680, 686, 698, 706, 710, 714, 726, 739, 753, 759, 764, 775, 790, 816, 820, 850, 854], "gl": [16, 75, 146, 252, 393, 708, 711, 712, 713, 714, 716, 731, 735, 739, 759, 762, 764, 770, 773, 785, 788, 790, 796, 797, 808, 810, 831, 832, 843, 844], "alpha": [16, 24, 28, 35, 49, 55, 69, 71, 73, 80, 149, 241, 245, 256, 390, 398, 792], "eta": [16, 73, 390, 714, 820, 824, 854, 858], "formula": [16, 19, 20, 23, 24, 27, 71, 75, 128, 148, 207, 211, 215, 218, 222, 226, 229, 233, 238, 241, 245, 249, 252, 256, 260, 289, 300, 340, 352, 376, 387, 396, 397, 399, 483, 486, 489, 491, 494, 497, 499, 502, 505, 507, 511, 515, 518, 521, 524, 526, 529, 532, 556, 570, 594, 610, 645, 659, 680, 696, 713, 714, 759, 764, 768, 770, 775, 778, 785, 790, 794, 816, 850], "cov_typ": [17, 21, 25, 69, 70, 71, 72, 92, 98, 145, 146, 147, 149, 194, 209, 220, 231, 243, 254, 263, 267, 317, 358, 393, 397, 484, 491, 492, 500, 509, 511, 519, 527, 710, 711, 712, 713, 762, 773, 788], "cov_config": [17, 21, 25, 92, 98, 194, 209, 220, 231, 243, 254, 263, 267, 317, 358, 484, 500, 509, 519, 527, 716, 720, 723, 726, 731, 735, 739, 762, 773, 788, 796, 831], "debia": [17, 21, 25, 194, 398, 400, 408, 416, 424, 434, 442, 710, 716, 865], "adjust": [17, 21, 25, 75, 92, 98, 106, 122, 150, 155, 156, 161, 162, 167, 168, 173, 188, 191, 199, 200, 204, 209, 220, 231, 241, 243, 254, 267, 274, 289, 294, 305, 313, 317, 326, 340, 345, 358, 364, 376, 381, 390, 393, 395, 398, 400, 408, 416, 434, 442, 484, 492, 500, 509, 519, 527, 534, 536, 537, 556, 594, 645, 680, 710, 714, 716, 731, 735, 739, 745, 749, 753, 762, 773, 788, 796, 802, 816, 831, 837, 850], "addit": [17, 21, 25, 75, 78, 92, 145, 146, 149, 209, 215, 218, 220, 222, 226, 229, 230, 231, 233, 238, 243, 249, 254, 260, 393, 394, 400, 408, 416, 434, 442, 484, 489, 497, 500, 505, 509, 515, 519, 524, 527, 532, 710, 713, 762, 768, 770, 773, 775, 778, 788, 794], "specif": [17, 21, 25, 69, 71, 92, 110, 146, 147, 148, 177, 194, 209, 215, 220, 226, 231, 238, 243, 249, 254, 260, 277, 289, 330, 340, 367, 376, 393, 396, 397, 398, 484, 486, 489, 494, 497, 500, 502, 505, 507, 509, 511, 515, 518, 519, 521, 524, 527, 529, 532, 710, 711, 714, 766, 768, 778, 792, 794, 816, 850], "option": [17, 21, 25, 69, 70, 72, 73, 75, 79, 80, 92, 145, 194, 209, 220, 229, 231, 243, 254, 390, 394, 395, 398, 399, 457, 470, 474, 484, 492, 500, 509, 519, 527, 712, 716, 718, 720, 722, 723, 725, 726, 729, 731, 733, 735, 737, 739, 742, 759, 762, 770, 773, 775, 785, 788, 796, 828], "linearfactormodelresult": [17, 25], "result": [17, 21, 25, 69, 72, 75, 79, 80, 92, 98, 125, 146, 148, 209, 220, 231, 241, 243, 254, 392, 393, 395, 396, 397, 398, 484, 486, 492, 494, 500, 502, 507, 509, 511, 518, 519, 521, 527, 529, 710, 711, 713, 762, 773, 788], "statist": [17, 20, 21, 25, 28, 35, 43, 48, 49, 55, 63, 68, 69, 70, 71, 72, 75, 98, 110, 127, 128, 144, 145, 146, 147, 149, 236, 264, 267, 268, 277, 283, 299, 300, 305, 308, 317, 318, 319, 320, 329, 330, 347, 351, 352, 353, 354, 355, 357, 358, 367, 386, 387, 392, 393, 394, 397, 398, 399, 534, 545, 547, 548, 567, 569, 570, 572, 580, 582, 583, 584, 592, 606, 608, 610, 612, 615, 626, 634, 636, 637, 656, 658, 659, 661, 669, 671, 672, 692, 694, 696, 709, 710, 712, 796, 797, 809, 810, 826, 831, 832, 844, 860, 866, 870, 871, 874, 875], "type": [17, 19, 21, 23, 25, 27, 28, 32, 36, 49, 53, 56, 69, 75, 82, 85, 87, 92, 95, 97, 98, 101, 104, 128, 138, 139, 144, 145, 146, 149, 174, 175, 176, 177, 178, 180, 190, 193, 203, 206, 208, 209, 211, 215, 216, 217, 219, 220, 222, 226, 227, 228, 230, 231, 233, 236, 238, 239, 240, 242, 243, 245, 249, 250, 251, 253, 254, 256, 260, 261, 262, 267, 268, 269, 272, 289, 300, 317, 321, 324, 329, 340, 352, 357, 358, 359, 362, 376, 387, 389, 390, 392, 393, 404, 412, 420, 430, 438, 446, 450, 451, 452, 454, 455, 456, 459, 460, 463, 476, 481, 484, 486, 489, 490, 492, 494, 497, 498, 500, 502, 505, 506, 509, 511, 515, 516, 519, 521, 524, 525, 527, 529, 532, 533, 538, 556, 570, 573, 594, 610, 627, 645, 659, 662, 680, 696, 698, 699, 706, 747, 748, 751, 752, 757, 758, 760, 762, 764, 766, 768, 769, 771, 773, 775, 778, 779, 786, 788, 790, 792, 794, 795, 796, 797, 798, 801, 810, 816, 829, 831, 832, 833, 836, 844, 850, 863, 864, 865, 871, 877, 878, 880, 881, 882, 885, 886], "take": [17, 21, 25, 147, 390, 393, 397, 710], "argument": [17, 21, 25, 69, 70, 75, 87, 194, 218, 222, 229, 230, 233, 393, 398, 710, 711, 762, 770, 775, 788], "parzen": [17, 21, 25, 70, 71, 72, 75, 149, 168, 174, 176, 177, 200, 390, 398, 400, 416, 492, 500, 509, 519, 527, 710, 726, 739, 753], "q": [17, 21, 25, 71, 128, 149, 168, 174, 177, 200, 268, 283, 300, 318, 320, 329, 352, 353, 357, 387, 390, 400, 416, 500, 509, 519, 527, 570, 610, 659, 696, 710, 726, 739, 753, 760, 771, 780, 786, 809], "quadrat": [17, 21, 25, 71, 72, 75, 110, 149, 168, 174, 177, 200, 277, 330, 367, 390, 398, 400, 416, 710, 726, 739, 753], "spectral": [17, 21, 25, 71, 72, 75, 149, 168, 174, 177, 200, 390, 398, 400, 416, 710, 726, 739, 753], "classmethod": [19, 23, 27, 476, 486, 494, 502, 511, 521, 529, 764, 766, 775, 790, 792], "data": [19, 23, 27, 72, 75, 86, 97, 113, 128, 144, 146, 149, 150, 156, 162, 174, 208, 211, 215, 217, 219, 222, 226, 228, 230, 233, 238, 240, 242, 245, 249, 251, 253, 256, 260, 262, 281, 289, 300, 334, 340, 352, 370, 376, 387, 390, 395, 397, 398, 399, 483, 484, 486, 489, 490, 491, 494, 497, 498, 499, 502, 505, 506, 507, 511, 515, 516, 518, 521, 524, 525, 526, 529, 532, 533, 534, 550, 556, 559, 570, 572, 586, 594, 597, 610, 626, 639, 645, 648, 659, 661, 674, 680, 683, 696, 699, 706, 709, 711, 713, 714, 720, 723, 726, 764, 768, 775, 778, 790, 792, 794, 816, 850, 863, 864], "modifi": [19, 23, 27, 70, 75, 211, 222, 233, 241, 245, 256, 390, 711, 713], "syntax": [19, 23, 27, 87, 147, 211, 222, 233, 245, 256, 394, 486, 494, 502, 521, 529, 710, 711, 712, 713, 764, 775, 790], "describ": [19, 23, 27, 73, 135, 145, 146, 149, 211, 222, 233, 245, 256, 393, 396, 397, 507], "datafram": [19, 23, 27, 30, 31, 38, 39, 45, 48, 51, 52, 58, 59, 65, 68, 70, 75, 87, 88, 89, 99, 101, 102, 128, 130, 135, 136, 137, 139, 144, 146, 147, 178, 185, 211, 215, 222, 226, 233, 238, 245, 249, 256, 260, 264, 269, 270, 289, 300, 308, 310, 311, 314, 316, 321, 322, 340, 352, 359, 360, 376, 387, 393, 394, 399, 427, 450, 452, 455, 456, 458, 461, 463, 471, 472, 475, 481, 486, 489, 494, 497, 502, 505, 511, 515, 521, 524, 529, 532, 535, 538, 542, 556, 570, 573, 577, 592, 594, 610, 615, 617, 618, 623, 625, 627, 631, 645, 659, 662, 666, 680, 691, 696, 699, 700, 702, 704, 705, 706, 710, 711, 712, 760, 764, 768, 771, 775, 778, 780, 783, 786, 790, 794, 798, 799, 807, 816, 819, 821, 830, 833, 834, 842, 850, 853, 855, 861], "contain": [19, 23, 27, 70, 71, 75, 87, 92, 128, 135, 139, 146, 147, 148, 149, 150, 178, 182, 187, 188, 189, 191, 192, 194, 200, 202, 205, 209, 211, 218, 220, 222, 230, 231, 233, 241, 243, 245, 254, 256, 264, 265, 268, 278, 289, 300, 318, 319, 320, 329, 331, 340, 347, 352, 353, 354, 355, 357, 376, 387, 390, 392, 394, 396, 397, 398, 450, 458, 460, 471, 475, 484, 486, 494, 500, 502, 509, 511, 519, 521, 527, 529, 534, 536, 537, 556, 570, 572, 594, 610, 626, 645, 659, 661, 680, 696, 699, 706, 710, 712, 713, 714, 720, 723, 726, 746, 749, 750, 752, 755, 759, 764, 765, 768, 770, 773, 775, 776, 778, 785, 790, 791, 794, 816, 850, 865], "variabl": [19, 23, 27, 70, 75, 79, 80, 86, 87, 88, 89, 92, 98, 100, 107, 130, 135, 136, 137, 139, 143, 144, 149, 150, 156, 162, 168, 178, 207, 211, 218, 220, 222, 229, 233, 241, 245, 252, 256, 264, 265, 268, 283, 319, 329, 347, 353, 354, 355, 357, 390, 392, 394, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 454, 456, 459, 467, 474, 483, 484, 486, 490, 491, 494, 498, 499, 500, 502, 506, 507, 509, 511, 516, 518, 519, 521, 525, 526, 527, 529, 533, 536, 539, 540, 541, 547, 556, 561, 562, 574, 575, 576, 583, 594, 599, 601, 628, 629, 630, 636, 645, 650, 651, 663, 664, 665, 671, 680, 685, 686, 706, 709, 710, 711, 712, 713, 714, 716, 731, 735, 739, 759, 764, 766, 768, 770, 773, 775, 778, 781, 785, 790, 792, 794, 816, 824, 850, 858], "instanc": [19, 23, 27, 79, 80, 139, 178, 211, 222, 233, 245, 256, 706, 764, 766, 775, 790, 792], "can": [19, 21, 23, 27, 69, 70, 71, 72, 73, 75, 85, 87, 92, 144, 145, 146, 147, 149, 215, 220, 226, 231, 238, 241, 249, 260, 289, 340, 355, 376, 390, 392, 393, 394, 395, 396, 397, 398, 399, 450, 454, 486, 489, 494, 497, 502, 505, 507, 511, 515, 518, 521, 524, 529, 532, 556, 594, 645, 680, 710, 711, 712, 714, 759, 760, 764, 768, 770, 771, 775, 778, 785, 786, 790, 792, 794, 816, 850], "two": [19, 23, 27, 69, 70, 71, 72, 73, 75, 86, 145, 146, 149, 207, 220, 268, 392, 393, 397, 398, 408, 484, 492, 507, 509, 511, 519, 527, 710, 711, 712, 714, 762, 764, 775, 781, 788, 790, 820, 854], "wai": [19, 23, 27, 69, 70, 75, 92, 145, 149, 194, 204, 209, 218, 220, 229, 243, 254, 390, 398, 408, 460, 484, 507, 509, 519, 526, 527, 710, 762, 764, 775, 788, 790], "specifi": [19, 23, 27, 70, 75, 87, 135, 145, 146, 148, 149, 220, 393, 396, 397, 398, 399, 486, 494, 502, 507, 511, 521, 529, 556, 594, 645, 680, 710, 712, 713, 714, 764, 773, 775, 790, 882], "separ": [19, 23, 27, 70, 87, 128, 300, 352, 387, 390, 570, 610, 659, 696, 711, 712, 714, 759, 785], "exampl": [19, 23, 27, 70, 71, 72, 75, 85, 87, 128, 135, 139, 147, 148, 211, 222, 233, 245, 256, 300, 352, 387, 392, 396, 397, 398, 484, 486, 492, 494, 500, 502, 509, 511, 519, 521, 527, 529, 570, 610, 659, 696, 711, 712, 713, 714, 764, 775, 790, 792], "dataset": [19, 23, 27, 69, 70, 72, 75, 128, 145, 146, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 392, 393, 394, 397, 399, 570, 610, 659, 696, 706, 708, 710, 711, 712, 713, 792], "import": [19, 23, 27, 72, 85, 87, 128, 135, 139, 144, 146, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 392, 393, 394, 396, 397, 398, 399, 484, 486, 492, 494, 500, 502, 509, 511, 519, 521, 527, 529, 570, 610, 659, 696, 710, 711, 712, 713, 764, 775, 790, 792], "french": [19, 23, 27, 69, 70, 71, 72, 710, 792], "s1m1": [19, 23, 27, 69, 70], "s1m5": [19, 23, 27, 69, 70], "s3m3": [19, 23, 27, 69, 70], "s5m1": [19, 23, 27, 69, 70], "s5m5": [19, 23, 27, 69, 70], "mktrf": [19, 23, 27, 69, 70, 72, 710, 792], "smb": [19, 23, 27, 69, 70, 72], "hml": [19, 23, 27, 69, 70, 72], "mod": [19, 23, 27, 69, 70, 72, 87, 144, 146, 147, 149, 211, 222, 233, 245, 256, 392, 393, 394, 397, 484, 486, 492, 494, 500, 502, 509, 511, 519, 521, 527, 529, 570, 610, 659, 696, 710, 711, 712, 713, 764, 775, 790, 792], "s3m1": [19, 23, 27, 69, 70], "s3m5": [19, 23, 27, 69, 70], "gmm": [20, 21, 28, 34, 71, 72, 75, 86, 148, 218, 219, 220, 222, 229, 231, 233, 236, 267, 268, 282, 302, 708, 709, 713, 770, 775, 796, 827, 828, 829], "left": [20, 70, 73, 79, 268, 390, 398, 483, 491, 499, 507, 518, 526, 710, 712, 714, 759, 770, 785, 810, 844], "begin": [20, 73, 390, 398, 712, 714, 759, 770, 785], "arrai": [20, 70, 72, 73, 75, 128, 145, 149, 174, 175, 176, 177, 178, 194, 204, 215, 226, 238, 249, 260, 289, 300, 340, 352, 376, 387, 393, 400, 408, 416, 424, 434, 442, 450, 455, 458, 460, 471, 489, 497, 505, 509, 515, 524, 532, 556, 570, 594, 610, 645, 659, 680, 696, 710, 714, 716, 720, 723, 726, 735, 759, 766, 768, 770, 778, 785, 792, 794, 816, 850, 863, 864, 865], "c": [20, 73, 128, 268, 300, 352, 387, 390, 398, 570, 610, 659, 696, 714], "t": [20, 28, 39, 43, 48, 49, 59, 63, 68, 69, 70, 72, 73, 75, 80, 98, 101, 118, 127, 144, 145, 146, 147, 149, 267, 269, 290, 299, 305, 316, 317, 321, 341, 351, 358, 359, 377, 386, 392, 393, 394, 397, 398, 399, 400, 416, 491, 492, 534, 538, 557, 569, 572, 573, 595, 608, 612, 625, 626, 627, 646, 658, 661, 662, 681, 694, 710, 711, 712, 713, 714, 780, 781, 796, 798, 817, 826, 831, 833, 851, 860], "otim": [20, 73, 710, 714, 723, 749, 759, 785], "f_": [20, 73, 320, 357, 390, 547, 548, 582, 583, 584, 636, 637, 671, 672], "mu": [20, 73, 714], "end": [20, 73, 78, 390, 393, 398, 399, 712, 714, 759, 770, 785], "right": [20, 70, 73, 79, 390, 398, 483, 491, 499, 507, 518, 526, 710, 712, 714, 759, 770, 785, 810, 844], "1_": [20, 73, 390], "n": [20, 73, 135, 139, 146, 150, 156, 162, 168, 177, 188, 191, 200, 229, 241, 283, 318, 319, 320, 329, 347, 353, 355, 357, 390, 392, 393, 397, 398, 399, 400, 408, 416, 434, 442, 710, 714, 745, 753, 797, 809, 810, 832, 844, 863, 864, 865], "object": [20, 21, 69, 145, 149, 231, 236, 268, 278, 318, 319, 320, 329, 331, 347, 353, 354, 355, 357, 389, 392, 454, 475, 698, 710, 761, 764, 772, 775, 787, 790, 876, 880, 881, 886], "function": [20, 21, 69, 73, 75, 139, 145, 146, 147, 200, 218, 220, 222, 229, 231, 233, 236, 390, 397, 398, 399, 400, 416, 766, 770, 775, 792], "usual": [20, 70, 73, 144, 145, 146, 149, 390, 392, 393, 397, 399, 710, 712], "j": [20, 28, 35, 49, 55, 69, 70, 71, 72, 145, 146, 168, 200, 267, 268, 283, 355, 390, 400, 416, 709, 710, 714, 745, 753, 770, 796, 797, 809, 832], "use_cu": [21, 69, 72], "disp": [21, 69], "10": [21, 69, 144, 145, 146, 305, 389, 392, 393, 394, 612, 698, 709, 710, 712], "max_it": 21, "1000": [21, 87, 146], "start": [21, 144, 149, 229, 230, 231, 329, 357, 703], "opt_opt": [21, 230, 231], "befor": [21, 75, 88, 89, 145, 188, 191, 200, 204, 289, 340, 376, 392, 393, 556, 594, 645, 680, 710, 745, 749, 753, 816, 850], "weight": [21, 69, 71, 73, 75, 87, 92, 97, 98, 128, 129, 130, 148, 149, 168, 175, 176, 177, 188, 189, 191, 192, 194, 200, 201, 202, 204, 205, 207, 211, 217, 218, 219, 220, 222, 228, 229, 233, 236, 240, 241, 245, 251, 252, 256, 262, 263, 267, 268, 300, 301, 302, 303, 304, 317, 352, 356, 358, 387, 388, 392, 393, 395, 398, 400, 416, 454, 460, 463, 483, 484, 486, 491, 494, 499, 502, 507, 511, 518, 521, 526, 529, 534, 539, 540, 541, 561, 562, 563, 570, 571, 572, 574, 575, 576, 599, 601, 602, 610, 611, 626, 628, 629, 630, 650, 651, 652, 659, 660, 661, 663, 664, 665, 685, 686, 687, 696, 697, 699, 706, 710, 712, 716, 720, 723, 726, 731, 739, 745, 746, 748, 749, 750, 752, 753, 755, 758, 759, 764, 770, 773, 775, 785, 790, 796, 820, 824, 827, 828, 829, 830, 831, 854, 858, 861], "matrix": [21, 69, 70, 75, 128, 130, 135, 143, 144, 146, 149, 150, 156, 162, 168, 188, 191, 194, 200, 201, 204, 208, 215, 218, 219, 220, 226, 229, 230, 236, 238, 242, 249, 253, 260, 267, 268, 300, 301, 302, 303, 329, 347, 352, 357, 387, 390, 486, 494, 502, 507, 511, 518, 521, 529, 570, 610, 659, 696, 709, 710, 714, 716, 720, 723, 726, 731, 735, 739, 745, 747, 748, 749, 751, 752, 753, 757, 758, 759, 760, 770, 771, 773, 780, 783, 784, 785, 786, 796, 810, 827, 844], "continu": [21, 72, 75, 86, 87, 92, 130, 135, 137, 139, 143, 149, 229, 710], "updat": [21, 72, 75, 86, 149, 229], "number": [21, 28, 34, 37, 49, 57, 69, 70, 71, 75, 79, 83, 87, 98, 107, 110, 116, 128, 143, 145, 146, 150, 177, 178, 184, 215, 220, 226, 238, 249, 260, 267, 268, 277, 287, 300, 317, 319, 329, 330, 338, 347, 352, 357, 358, 367, 374, 387, 390, 393, 394, 397, 398, 399, 400, 408, 416, 434, 442, 450, 452, 464, 465, 466, 467, 534, 536, 543, 544, 547, 548, 554, 570, 572, 578, 579, 583, 584, 591, 610, 626, 632, 633, 636, 637, 643, 659, 661, 667, 668, 671, 672, 678, 696, 699, 700, 701, 702, 704, 705, 706, 710, 712, 714, 716, 723, 762, 764, 773, 775, 780, 788, 790, 796, 808, 814, 831, 843, 848, 865], "correspond": [21, 73, 128, 149, 215, 226, 238, 249, 260, 268, 289, 300, 305, 340, 352, 376, 387, 389, 390, 456, 458, 471, 489, 497, 505, 515, 524, 532, 570, 610, 612, 659, 696, 698, 714, 720, 723, 726, 768, 778, 794, 816, 850, 882], "standard": [21, 28, 42, 45, 49, 62, 65, 69, 70, 72, 75, 98, 124, 145, 178, 211, 222, 233, 245, 256, 264, 267, 296, 305, 314, 317, 348, 358, 383, 393, 394, 395, 397, 486, 491, 492, 494, 502, 509, 521, 529, 534, 565, 572, 604, 612, 623, 626, 654, 661, 689, 710, 711, 764, 775, 790, 796, 822, 831, 856], "effici": [21, 69, 71, 72, 73, 145, 146, 220, 268, 390, 393, 397, 398, 710, 712, 713, 797, 810, 832, 844], "higher": 21, "iter": [21, 28, 144, 145, 149, 220, 230, 267, 460, 712, 762, 773, 788, 796, 831, 885], "until": [21, 145, 220, 396, 404, 412, 420, 430, 438, 446, 460, 711, 712, 762, 788], "converg": [21, 145, 149, 220, 460, 712, 762, 773, 788], "up": [21, 75, 92, 393, 408], "given": [21, 144, 398, 483, 491, 499, 518, 526, 770, 882], "between": [21, 69, 70, 75, 85, 86, 87, 145, 146, 220, 264, 268, 319, 329, 347, 353, 354, 355, 357, 390, 392, 396, 397, 399, 483, 534, 539, 540, 541, 561, 562, 572, 574, 575, 576, 599, 601, 626, 628, 629, 630, 650, 651, 661, 663, 664, 665, 685, 686, 706, 708, 710, 714, 745, 753, 797, 832], "print": [21, 69, 70, 72, 144, 145, 146, 147, 149, 392, 393, 394, 710, 711, 712], "suppress": [21, 69], "output": [21, 69, 75, 78, 145, 149, 230, 231, 289, 305, 340, 376, 389, 399, 556, 594, 612, 645, 680, 698, 816, 850], "maximum": [21, 145, 149, 175, 176, 177, 220, 762, 773, 788], "minim": [21, 69, 230, 231, 390, 475, 714], "2sl": [21, 75, 86, 146, 147, 207, 231, 708, 712, 714], "pass": [21, 70, 75, 92, 139, 145, 146, 149, 209, 218, 220, 222, 229, 230, 231, 233, 243, 254, 393, 710, 711, 759, 762, 770, 773, 775, 788], "scipi": [21, 75, 87, 92, 144, 230, 231], "defer": [21, 75, 231, 404, 412, 420, 430, 438, 446], "choos": [21, 231, 492], "an": [21, 69, 70, 72, 73, 75, 87, 110, 144, 145, 146, 147, 149, 178, 231, 241, 277, 330, 354, 367, 390, 392, 393, 394, 397, 398, 399, 450, 484, 500, 507, 509, 511, 536, 537, 547, 548, 582, 583, 584, 636, 637, 671, 672, 710, 711, 712, 713, 714, 720, 723, 726, 759, 764, 768, 770, 775, 778, 785, 790, 794, 797, 810, 816, 820, 824, 832, 844, 850, 854, 858, 871, 880, 881, 886], "appropri": [21, 72, 73, 231, 390, 393, 398], "all": [21, 35, 55, 69, 70, 71, 72, 73, 75, 97, 110, 135, 139, 144, 145, 146, 149, 177, 217, 228, 231, 240, 251, 262, 264, 268, 277, 289, 305, 309, 310, 311, 314, 316, 329, 330, 340, 357, 367, 376, 390, 392, 393, 394, 395, 397, 398, 399, 424, 450, 484, 491, 500, 526, 547, 556, 582, 583, 594, 612, 616, 617, 618, 623, 625, 636, 645, 671, 680, 710, 712, 714, 745, 753, 759, 762, 766, 769, 770, 773, 779, 788, 792, 795, 797, 810, 824, 832, 844, 858, 877], "input": [21, 70, 72, 75, 140, 145, 147, 149, 178, 231, 289, 340, 376, 392, 393, 397, 450, 484, 500, 509, 519, 527, 556, 594, 645, 680, 710, 816, 850], "except": [21, 69, 73, 231, 390, 393, 450, 710, 712], "fun": [21, 231], "x0": [21, 231], "arg": [21, 175, 176, 231, 876, 885], "overridden": [21, 231, 395, 710], "gmmfactormodelresult": 21, "linearfactormodel": [23, 69, 70, 71, 72, 86, 708], "applic": [24, 75, 92, 146, 390, 397, 709, 712], "both": [24, 69, 70, 71, 72, 75, 87, 128, 147, 149, 188, 191, 200, 211, 218, 222, 233, 241, 245, 256, 264, 268, 283, 300, 352, 387, 390, 393, 394, 454, 507, 509, 556, 570, 594, 610, 645, 659, 680, 696, 710, 711, 714, 749, 816, 850], "time": [24, 69, 70, 72, 73, 75, 135, 139, 143, 144, 145, 146, 147, 149, 353, 355, 390, 392, 397, 398, 399, 400, 408, 416, 424, 427, 434, 442, 450, 452, 454, 456, 463, 466, 471, 483, 486, 491, 494, 499, 502, 507, 509, 511, 517, 518, 519, 521, 526, 527, 529, 534, 535, 539, 561, 567, 572, 574, 599, 606, 626, 628, 650, 656, 661, 663, 685, 692, 699, 706, 710, 711, 712, 713, 714], "seri": [24, 29, 41, 42, 43, 50, 61, 62, 63, 73, 75, 111, 113, 117, 118, 120, 124, 127, 128, 129, 135, 139, 141, 150, 156, 162, 168, 178, 181, 194, 279, 281, 288, 290, 292, 296, 299, 300, 304, 306, 307, 309, 312, 313, 332, 334, 339, 341, 343, 348, 351, 352, 356, 368, 370, 375, 377, 379, 383, 386, 387, 388, 392, 450, 462, 545, 546, 549, 550, 555, 557, 559, 565, 567, 569, 570, 571, 580, 581, 585, 586, 593, 595, 597, 604, 606, 608, 609, 610, 611, 613, 614, 616, 619, 620, 621, 622, 634, 635, 638, 639, 644, 646, 648, 654, 656, 658, 659, 660, 669, 670, 673, 674, 679, 681, 683, 689, 692, 694, 695, 696, 697, 710, 714, 760, 765, 771, 776, 780, 782, 786, 791, 797, 810, 815, 817, 822, 824, 826, 832, 844, 849, 851, 856, 858, 860], "zero": [24, 35, 55, 69, 73, 110, 264, 277, 283, 330, 367, 390, 547, 570, 572, 582, 583, 610, 636, 659, 671, 696, 710, 797, 809, 832, 863, 864], "e": [24, 69, 71, 73, 75, 128, 144, 146, 208, 219, 230, 242, 253, 300, 352, 354, 387, 390, 397, 398, 399, 400, 408, 416, 434, 442, 570, 610, 659, 696, 709, 710, 711, 712, 714, 764, 775, 790, 885], "alpha_i": [24, 393, 397, 507], "directli": [24, 79, 80, 83, 110, 145, 146, 149, 277, 330, 367, 390, 393, 712, 714], "lambda_i": 24, "sampl": [24, 75, 98, 106, 122, 144, 145, 146, 149, 150, 155, 156, 161, 162, 167, 168, 173, 177, 188, 191, 199, 200, 204, 208, 219, 230, 242, 253, 267, 274, 289, 294, 305, 313, 317, 319, 326, 340, 345, 358, 364, 376, 381, 390, 398, 408, 527, 534, 536, 556, 594, 645, 680, 710, 712, 714, 716, 731, 735, 739, 745, 749, 753, 762, 773, 788, 796, 797, 802, 810, 816, 831, 832, 837, 844, 850, 865], "which": [24, 69, 71, 72, 73, 75, 87, 144, 145, 146, 147, 149, 211, 215, 220, 222, 226, 233, 238, 241, 245, 249, 256, 260, 264, 289, 340, 376, 390, 392, 393, 394, 395, 397, 398, 399, 489, 497, 500, 505, 507, 509, 511, 515, 519, 524, 527, 532, 559, 597, 648, 683, 710, 711, 712, 713, 714, 753, 759, 762, 765, 766, 768, 770, 773, 776, 778, 785, 788, 791, 792, 794, 816, 850], "support": [25, 46, 66, 71, 75, 92, 125, 146, 168, 174, 200, 209, 220, 231, 243, 252, 254, 266, 297, 315, 349, 384, 392, 398, 400, 416, 424, 450, 484, 492, 500, 507, 509, 519, 527, 566, 605, 624, 655, 690, 708, 710, 711, 712, 714, 726, 739, 753, 762, 773, 788, 823, 857], "consist": [25, 69, 73, 87, 145, 146, 268, 283, 390, 393, 394, 397, 398, 399, 710, 711, 714, 759, 785, 809], "mispric": [28, 29, 33, 49, 50, 54], "cov_estim": [28, 49, 98, 267, 305, 317, 358, 612, 796, 831], "full_summari": [28, 49, 69, 70, 72], "complet": [28, 33, 49, 54, 69, 70, 72, 92, 148, 209, 243, 254, 394, 396, 713, 714, 762, 788], "summari": [28, 33, 49, 54, 69, 70, 72, 75, 98, 144, 145, 146, 147, 149, 263, 267, 305, 317, 358, 392, 393, 394, 397, 399, 534, 572, 612, 626, 661, 710, 711, 712, 713, 796, 831], "measur": [28, 33, 49, 54, 69, 75, 146, 147, 149, 220, 264, 395, 398, 399, 539, 540, 541, 561, 562, 563, 574, 575, 576, 599, 601, 602, 628, 629, 630, 650, 651, 652, 663, 664, 665, 685, 686, 687, 710, 713, 796, 824, 831, 858], "j_statist": [28, 49], "model": [28, 35, 36, 46, 49, 55, 56, 66, 69, 70, 72, 75, 79, 85, 86, 87, 92, 95, 97, 98, 108, 110, 112, 113, 114, 125, 128, 144, 145, 146, 148, 150, 156, 162, 168, 178, 190, 193, 194, 203, 206, 263, 264, 265, 266, 267, 268, 275, 277, 280, 281, 283, 285, 289, 297, 300, 305, 309, 310, 311, 314, 315, 316, 317, 318, 320, 327, 329, 330, 333, 334, 336, 340, 349, 352, 353, 355, 357, 358, 365, 367, 369, 370, 372, 376, 384, 387, 389, 390, 392, 395, 397, 399, 400, 405, 408, 413, 416, 421, 424, 431, 434, 439, 442, 447, 534, 543, 546, 547, 548, 550, 551, 553, 554, 556, 559, 560, 561, 562, 563, 566, 571, 572, 578, 581, 582, 583, 584, 586, 587, 588, 590, 591, 594, 597, 598, 599, 600, 601, 602, 605, 611, 612, 616, 617, 618, 623, 624, 625, 626, 632, 635, 636, 637, 639, 640, 642, 643, 645, 648, 649, 650, 651, 652, 655, 660, 661, 667, 670, 671, 672, 674, 675, 677, 678, 680, 683, 684, 685, 686, 687, 690, 697, 698, 699, 706, 709, 710, 714, 716, 720, 723, 726, 731, 735, 739, 748, 749, 752, 758, 796, 797, 803, 809, 810, 816, 823, 831, 832, 838, 844, 850, 857, 866], "observ": [28, 37, 49, 57, 69, 70, 72, 73, 75, 87, 98, 116, 144, 145, 146, 147, 149, 178, 207, 211, 213, 214, 218, 222, 224, 225, 229, 233, 235, 237, 241, 245, 247, 248, 252, 256, 258, 259, 267, 287, 289, 317, 338, 340, 358, 374, 376, 390, 392, 393, 394, 397, 398, 399, 408, 450, 452, 455, 462, 466, 483, 484, 488, 490, 491, 496, 498, 499, 504, 506, 507, 511, 513, 516, 518, 523, 525, 526, 531, 533, 534, 545, 554, 556, 567, 572, 580, 591, 592, 594, 606, 626, 634, 643, 645, 656, 661, 669, 678, 680, 692, 710, 711, 712, 713, 714, 745, 753, 759, 764, 770, 775, 785, 790, 796, 814, 816, 831, 848, 850], "param": [28, 49, 95, 97, 98, 145, 150, 156, 162, 168, 194, 215, 216, 217, 226, 227, 228, 236, 238, 239, 240, 249, 250, 251, 260, 261, 262, 267, 305, 317, 358, 397, 400, 408, 416, 424, 434, 442, 489, 497, 505, 515, 524, 532, 534, 572, 612, 626, 661, 710, 712, 768, 778, 794, 796, 831], "pvalu": [28, 49, 75, 98, 267, 305, 317, 358, 389, 534, 572, 612, 626, 661, 698, 796, 831], "p": [28, 39, 49, 59, 69, 70, 71, 72, 73, 80, 98, 110, 118, 144, 145, 146, 147, 149, 264, 267, 268, 277, 290, 305, 308, 311, 317, 318, 319, 320, 329, 330, 341, 347, 353, 354, 355, 357, 358, 367, 377, 389, 392, 393, 394, 397, 399, 534, 547, 548, 557, 572, 582, 583, 584, 595, 612, 615, 618, 626, 636, 637, 646, 661, 671, 672, 681, 698, 710, 711, 712, 713, 714, 796, 817, 831, 851, 871, 874], "val": [28, 39, 49, 59, 98, 118, 267, 290, 305, 311, 317, 341, 358, 377, 534, 557, 572, 595, 612, 618, 626, 646, 661, 681, 796, 817, 831, 851], "residual_ss": [28, 49], "sum": [28, 40, 47, 49, 60, 67, 98, 115, 119, 126, 144, 267, 283, 286, 291, 298, 317, 329, 337, 342, 350, 357, 358, 373, 378, 385, 390, 398, 399, 408, 534, 547, 552, 558, 568, 572, 582, 583, 589, 596, 607, 626, 636, 641, 647, 657, 661, 671, 676, 682, 693, 710, 714, 796, 813, 818, 825, 831, 847, 852, 859], "risk_premia": [28, 49], "risk_premia_s": [28, 49], "error": [28, 42, 45, 49, 62, 65, 69, 73, 75, 98, 113, 124, 145, 149, 190, 193, 203, 206, 208, 219, 230, 242, 253, 267, 281, 296, 305, 314, 317, 334, 348, 355, 358, 370, 383, 389, 393, 395, 397, 400, 407, 408, 415, 416, 423, 424, 433, 434, 441, 442, 449, 509, 534, 550, 556, 565, 572, 586, 594, 604, 612, 623, 626, 639, 645, 654, 661, 674, 680, 689, 698, 710, 716, 719, 731, 734, 735, 738, 739, 744, 745, 748, 752, 753, 758, 762, 788, 796, 822, 831, 856], "risk_premia_tstat": [28, 49], "rsquar": [28, 49, 98, 146, 264, 267, 305, 317, 358, 395, 534, 536, 537, 539, 540, 541, 561, 562, 563, 572, 574, 575, 576, 599, 601, 602, 612, 626, 628, 629, 630, 650, 651, 652, 661, 663, 664, 665, 685, 686, 687, 710, 796, 831], "coeffici": [28, 44, 49, 64, 73, 98, 100, 110, 121, 122, 144, 145, 146, 264, 267, 277, 293, 294, 305, 312, 313, 317, 330, 344, 345, 358, 367, 380, 381, 389, 393, 398, 399, 491, 518, 534, 536, 537, 539, 540, 541, 547, 560, 561, 562, 563, 570, 572, 574, 575, 576, 583, 598, 599, 600, 601, 602, 610, 612, 619, 620, 621, 622, 626, 628, 629, 630, 636, 649, 650, 651, 652, 659, 661, 663, 664, 665, 671, 684, 685, 686, 687, 696, 698, 710, 714, 759, 770, 785, 796, 820, 831, 854, 865], "determin": [28, 44, 49, 64, 98, 100, 121, 122, 267, 293, 294, 305, 312, 313, 317, 344, 345, 358, 380, 381, 393, 394, 398, 534, 536, 537, 539, 540, 541, 560, 561, 562, 563, 572, 574, 575, 576, 598, 599, 600, 601, 602, 612, 619, 620, 621, 622, 626, 628, 629, 630, 649, 650, 651, 652, 661, 663, 664, 665, 684, 685, 686, 687, 711, 714, 760, 771, 786, 796, 820, 831, 854], "std_error": [28, 49, 98, 267, 305, 317, 358, 389, 534, 572, 612, 626, 661, 698, 710, 796, 831], "total_ss": [28, 49, 98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "total": [28, 47, 49, 67, 98, 126, 145, 146, 147, 149, 267, 298, 317, 350, 358, 385, 390, 534, 568, 572, 607, 609, 626, 657, 661, 693, 695, 710, 796, 824, 825, 831, 858, 859], "tstat": [28, 49, 98, 145, 267, 305, 317, 358, 389, 397, 534, 572, 612, 626, 661, 698, 796, 831], "waldteststatist": [35, 55, 110, 128, 145, 146, 268, 277, 283, 300, 318, 319, 320, 329, 330, 347, 352, 353, 354, 355, 357, 367, 387, 547, 548, 570, 582, 583, 584, 610, 636, 637, 659, 671, 672, 696, 797, 809, 810, 832, 844, 866], "null": [35, 55, 75, 110, 128, 145, 268, 277, 300, 318, 319, 320, 329, 330, 347, 352, 353, 354, 355, 357, 367, 387, 390, 570, 610, 659, 696, 714, 797, 810, 832, 844, 866, 871], "joint": [35, 55, 534, 547, 548, 572, 582, 583, 584, 626, 636, 637, 661, 671, 672, 710, 713, 714], "wald": [35, 55, 128, 145, 264, 300, 352, 354, 387, 390, 548, 570, 584, 610, 637, 659, 672, 696, 871], "df_resid": [39, 59, 98, 101, 118, 267, 269, 290, 317, 321, 341, 358, 359, 377, 534, 538, 557, 572, 573, 595, 626, 627, 646, 661, 662, 681, 796, 798, 817, 831, 833, 851], "els": [39, 59, 101, 118, 269, 290, 321, 341, 359, 377, 538, 557, 573, 595, 627, 646, 662, 681, 798, 817, 833, 851, 879], "normal": [39, 59, 80, 101, 118, 149, 220, 269, 290, 321, 341, 359, 377, 390, 490, 498, 506, 516, 525, 533, 538, 557, 573, 595, 627, 646, 662, 681, 767, 777, 793, 798, 817, 833, 851], "tabl": [46, 66, 79, 80, 81, 82, 83, 84, 125, 266, 297, 315, 349, 384, 397, 566, 605, 624, 655, 690, 710, 823, 857], "export": [46, 66, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "csv": [46, 66, 81, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "html": [46, 66, 69, 70, 82, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "latex": [46, 66, 83, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "as_csv": [46, 66, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "as_html": [46, 66, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "as_latex": [46, 66, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "ani": [49, 98, 103, 113, 130, 135, 140, 146, 147, 151, 157, 163, 169, 179, 182, 186, 267, 271, 281, 301, 317, 323, 334, 358, 361, 370, 390, 393, 507, 511, 540, 543, 544, 548, 550, 562, 575, 578, 579, 584, 586, 601, 629, 632, 633, 637, 639, 651, 664, 667, 668, 672, 674, 686, 710, 716, 720, 723, 726, 731, 735, 828, 880, 881, 882, 886], "A": [49, 71, 72, 98, 128, 144, 146, 147, 211, 222, 233, 245, 256, 267, 300, 317, 352, 358, 387, 390, 393, 570, 610, 659, 696, 706, 709, 710, 711, 712, 714, 747, 751, 757, 792, 871], "dictionari": [49, 75, 92, 98, 128, 144, 145, 178, 182, 189, 192, 202, 205, 230, 265, 267, 300, 317, 352, 358, 387, 393, 570, 610, 659, 696, 710, 712, 746, 750, 755, 759, 764, 766, 768, 770, 775, 778, 785, 790, 792, 794, 796, 816, 831, 850, 876, 885], "common": [69, 86, 146, 149, 268, 393, 400, 416, 507, 526, 714, 766, 792, 797, 810, 832, 844, 871, 872], "asset": [69, 70, 72, 75, 86, 709], "market": [69, 70, 71, 72, 146, 393, 394], "size": [69, 70, 71, 72, 87, 98, 122, 135, 139, 144, 145, 147, 267, 289, 294, 305, 313, 317, 340, 345, 358, 376, 381, 460, 534, 536, 556, 594, 645, 680, 710, 711, 797, 810, 816, 832, 844, 850, 865, 871, 872], "macroeconom": [69, 71], "shock": [69, 71, 72, 75, 113, 281, 289, 334, 340, 370, 376, 393, 398, 526, 550, 556, 586, 594, 639, 645, 674, 680, 797, 810, 816, 832, 844, 850], "uncertainti": 69, "set": [69, 70, 71, 73, 75, 87, 92, 144, 146, 149, 174, 220, 252, 305, 329, 347, 357, 389, 390, 392, 393, 394, 395, 399, 400, 408, 416, 424, 427, 434, 442, 491, 534, 535, 612, 698, 710, 712, 714, 759, 760, 763, 764, 770, 771, 773, 774, 775, 785, 786, 789, 790, 884], "often": [69, 397], "although": [69, 71, 87, 145, 146, 147, 392, 393, 397, 484, 500, 509, 519, 527, 710, 714, 759], "thei": [69, 145, 146, 147, 149, 390, 393, 394, 398, 399, 454, 559, 597, 648, 683, 710, 711], "do": [69, 85, 393, 397, 398, 509, 546, 581, 626, 635, 670, 710, 712, 820, 854], "need": [69, 70, 75, 128, 146, 147, 300, 352, 387, 475, 490, 498, 506, 516, 525, 533, 710, 714], "come": [69, 70, 145, 390], "ken": [69, 70, 72], "websit": [69, 70], "4": [69, 70, 72, 92, 135, 139, 144, 145, 146, 147, 149, 215, 226, 238, 249, 260, 392, 393, 394, 397, 399, 489, 497, 505, 515, 524, 532, 706, 709, 710, 711, 712, 713, 759, 790], "momentum": [69, 70], "12": [69, 70, 73, 144, 145, 146, 392, 393, 394, 399, 710, 712, 713, 714], "industri": [69, 70, 146, 398, 710], "subset": [69, 70], "sort": [69, 70], "linearmodel": [69, 70, 72, 75, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 708, 710, 711, 712, 713], "descr": [69, 70, 145, 146, 147, 393, 710], "39": [69, 70, 72, 145, 146, 710, 711, 712], "librari": [69, 70, 72, 710], "http": [69, 70, 709], "mba": [69, 70], "tuck": [69, 70], "dartmouth": [69, 70], "edu": [69, 70], "page": [69, 70], "faculti": [69, 70], "data_librari": [69, 70], "date": [69, 70, 72, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712, 713], "year": [69, 70, 145, 146, 147, 392, 393, 394, 397, 399, 570, 610, 659, 696, 710], "month": [69, 70], "mom": [69, 70, 146], "rf": [69, 70, 72], "nodur": [69, 70], "durabl": [69, 70], "durbl": [69, 70], "manuf": [69, 70], "manufactur": [69, 70], "enrgi": [69, 70], "energi": [69, 70], "chem": [69, 70], "chemic": [69, 70], "buseq": [69, 70], "busi": [69, 70, 709], "equip": [69, 70], "telcm": [69, 70], "telecom": [69, 70], "util": [69, 70, 86, 147, 149, 394, 710, 762, 766, 788, 792], "shop": [69, 70], "retail": [69, 70], "hlth": [69, 70], "health": [69, 70, 145, 147], "care": [69, 70], "monei": [69, 70], "financ": [69, 70, 709], "s1v1": [69, 70, 72, 710, 792], "small": [69, 70, 72, 75, 98, 106, 144, 146, 150, 155, 156, 161, 162, 167, 168, 173, 188, 191, 199, 200, 204, 267, 274, 317, 319, 326, 358, 364, 390, 394, 397, 398, 408, 527, 710, 714, 716, 731, 735, 739, 745, 749, 753, 762, 773, 788, 796, 802, 831, 837], "firm": [69, 70, 72, 144, 145, 146, 147, 392, 394, 397, 398, 399], "low": [69, 70, 72, 75, 145, 147, 398, 454, 509], "s1v3": [69, 70, 72, 710], "medium": [69, 70], "s1v5": [69, 70, 72, 710, 792], "high": [69, 70, 72, 75, 86, 87, 144, 391, 714], "s3v1": [69, 70], "3": [69, 70, 71, 72, 73, 135, 144, 145, 146, 147, 149, 176, 177, 305, 389, 390, 392, 393, 394, 397, 398, 399, 450, 475, 570, 610, 612, 659, 696, 698, 699, 700, 710, 711, 712, 713], "s3v3": [69, 70], "s3v5": [69, 70], "5": [69, 70, 135, 139, 144, 145, 146, 147, 149, 176, 177, 305, 389, 390, 392, 393, 394, 397, 399, 612, 698, 706, 709, 710, 711, 712], "s5v1": [69, 70, 72, 710, 792], "larg": [69, 70, 72, 75, 92, 144, 146, 393, 397, 398, 399, 708, 710], "s5v3": [69, 70, 72, 710], "s5v5": [69, 70, 72, 710, 792], "loser": [69, 70], "s1m3": [69, 70], "neutral": [69, 70], "winner": [69, 70], "s5m3": [69, 70], "subtract": [69, 188, 191, 200, 204, 390, 393, 408, 745, 749, 753], "sinc": [69, 70, 71, 73, 92, 113, 144, 145, 146, 149, 191, 241, 281, 334, 370, 392, 393, 394, 399, 509, 550, 586, 639, 674, 708, 710, 711, 713, 714, 749, 820, 854], "invest": [69, 73, 394, 399], "iloc": [69, 70, 392, 710, 712], "6": [69, 70, 72, 135, 139, 144, 145, 146, 147, 177, 355, 390, 392, 393, 394, 710, 711, 712, 713], "themselv": 69, "so": [69, 70, 71, 72, 73, 75, 110, 145, 146, 147, 149, 177, 215, 226, 236, 238, 241, 249, 260, 268, 277, 330, 355, 367, 390, 392, 393, 394, 395, 397, 398, 399, 450, 454, 548, 584, 637, 672, 710, 711, 714, 797, 810, 820, 832, 844, 854], "expect": [69, 71, 73, 145, 390, 399], "thi": [69, 70, 71, 72, 73, 75, 83, 87, 92, 110, 113, 144, 145, 146, 147, 149, 191, 215, 226, 238, 249, 260, 268, 277, 281, 330, 334, 353, 367, 370, 390, 392, 393, 394, 395, 396, 397, 398, 399, 475, 486, 490, 494, 498, 500, 502, 506, 507, 509, 511, 516, 518, 521, 525, 529, 533, 536, 537, 539, 540, 541, 550, 561, 562, 563, 574, 575, 576, 586, 599, 601, 602, 628, 629, 630, 639, 650, 651, 652, 663, 664, 665, 674, 685, 686, 687, 708, 710, 711, 712, 713, 714, 745, 749, 753, 810, 844, 885], "also": [69, 70, 85, 87, 145, 146, 149, 236, 390, 392, 393, 398, 399, 450, 507, 548, 584, 637, 672, 706, 712, 713, 714, 764, 775, 781, 790, 884], "each": [69, 73, 75, 87, 101, 128, 135, 143, 145, 146, 149, 264, 269, 300, 321, 329, 352, 357, 359, 387, 390, 393, 397, 398, 424, 427, 491, 507, 509, 511, 534, 535, 538, 570, 573, 610, 627, 659, 662, 696, 710, 711, 712, 713, 714, 720, 723, 726, 747, 751, 752, 757, 759, 764, 768, 770, 775, 778, 785, 790, 794, 798, 816, 824, 833, 850, 858], "constant": [69, 73, 92, 98, 110, 112, 130, 132, 145, 147, 207, 211, 212, 218, 222, 223, 229, 233, 234, 241, 245, 246, 252, 256, 257, 267, 277, 280, 317, 330, 333, 358, 367, 369, 393, 398, 483, 486, 487, 491, 494, 495, 499, 502, 503, 507, 512, 518, 521, 522, 526, 529, 530, 534, 547, 548, 572, 583, 584, 626, 636, 637, 661, 671, 672, 706, 710, 714, 759, 765, 770, 776, 785, 791, 820, 824, 854, 858], "essenti": 69, "cap": [69, 71, 398, 792], "m": [69, 70, 71, 146, 175, 176, 177, 268, 390, 393, 709, 710, 714, 723, 792, 864], "unsurprisingli": [69, 710], "unabl": 69, "asset_pr": [69, 70, 72, 708], "tradedfactormodel": [69, 70, 71, 72, 86, 708], "re": [69, 70, 72, 79, 80, 87, 92, 128, 144, 145, 146, 149, 300, 347, 352, 387, 392, 393, 395, 397, 398, 484, 486, 492, 494, 502, 509, 511, 519, 521, 527, 529, 534, 572, 626, 661, 710, 712], "fit": [69, 70, 72, 75, 87, 88, 89, 98, 99, 111, 128, 140, 144, 145, 146, 147, 149, 215, 226, 238, 249, 260, 263, 264, 267, 279, 289, 300, 317, 332, 340, 352, 353, 354, 355, 358, 368, 376, 387, 390, 392, 393, 394, 395, 397, 398, 399, 486, 489, 494, 497, 502, 505, 511, 515, 521, 524, 529, 532, 534, 539, 540, 541, 549, 556, 561, 562, 563, 570, 572, 574, 575, 576, 585, 594, 599, 600, 601, 602, 610, 626, 628, 629, 630, 638, 645, 650, 651, 652, 659, 661, 663, 664, 665, 673, 680, 685, 686, 687, 696, 710, 711, 712, 713, 768, 778, 794, 796, 807, 816, 824, 831, 842, 850, 858], "No": [69, 70, 72, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712, 713], "9": [69, 70, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712], "6910": 69, "70": [69, 146, 399], "034": [69, 710], "819": [69, 70, 72, 710], "0000": [69, 70, 72, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712, 713], "fri": [69, 70, 144, 145, 146, 147, 392, 393, 394, 710, 711, 712], "apr": [69, 70, 144, 145, 146, 147, 392, 393, 394, 397, 399, 710, 711, 712], "21": [69, 70, 72, 73, 144, 145, 146, 147, 392, 393, 394, 399, 710, 711, 712, 713, 714], "2023": [69, 70, 144, 145, 146, 147, 392, 393, 394, 710, 711, 712], "distribut": [69, 70, 71, 72, 73, 80, 110, 128, 144, 145, 146, 147, 149, 264, 268, 277, 300, 318, 319, 320, 329, 330, 347, 352, 353, 354, 355, 357, 367, 387, 390, 392, 393, 394, 397, 399, 547, 548, 570, 582, 583, 584, 610, 636, 637, 659, 671, 672, 696, 710, 712, 714, 797, 810, 832, 844, 871], "chi2": [69, 70, 72, 110, 144, 145, 146, 147, 149, 264, 277, 330, 367, 710, 712], "15": [69, 70, 144, 145, 146, 147, 392, 393, 394, 399, 710, 711, 712], "31": [69, 146, 712], "52": [69, 149, 392, 394, 710], "std": [69, 70, 72, 144, 145, 146, 147, 149, 305, 389, 392, 393, 394, 397, 399, 612, 698, 710, 711, 712, 713], "err": [69, 70, 72, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712, 713], "stat": [69, 70, 72, 75, 144, 145, 146, 147, 149, 264, 305, 316, 390, 392, 393, 394, 396, 397, 399, 547, 583, 612, 625, 636, 671, 710, 711, 712, 713, 866, 871], "lower": [69, 70, 72, 101, 144, 145, 146, 147, 149, 269, 321, 359, 390, 392, 393, 394, 397, 399, 538, 573, 627, 662, 710, 711, 712, 713, 798, 833], "ci": [69, 70, 72, 85, 144, 145, 146, 147, 149, 392, 393, 394, 397, 399, 710, 711, 712, 713], "upper": [69, 70, 72, 101, 144, 145, 146, 147, 149, 268, 269, 321, 359, 392, 393, 394, 397, 399, 538, 573, 627, 662, 710, 711, 712, 713, 798, 833], "0065": [69, 394], "0015": [69, 146, 710], "3553": 69, "0035": [69, 145, 147, 710], "0094": [69, 145, 147, 710], "heteroskedasticcovari": [69, 70, 92, 149, 194, 209, 243, 254, 762, 788], "expand": [69, 75, 85, 145, 146, 390], "while": [69, 146, 149, 394, 395, 397, 398, 491, 509, 714], "extra": [69, 83, 84], "increas": [69, 145, 146], "still": [69, 710], "easili": [69, 146], "reject": [69, 714, 797, 810, 832, 844], "8971": 69, "53": 69, "271": 69, "0016": [69, 70, 72, 146, 710, 711], "0010": [69, 70, 144, 146, 394, 710, 712], "6021": 69, "1091": 69, "0004": [69, 146, 393, 710, 712], "0009": [69, 144, 146, 393, 710, 711, 712], "6993": 69, "0002": [69, 70, 72, 145, 146, 392, 397, 710, 711], "0053": [69, 70, 712], "chang": [69, 85, 86, 147, 149, 220, 393, 395, 398, 710, 712], "doe": [69, 71, 73, 144, 146, 353, 393, 397, 398, 399, 450, 491, 509, 539, 540, 541, 548, 574, 575, 576, 584, 628, 629, 630, 637, 663, 664, 665, 672, 708, 710, 712, 714, 885], "indu": 69, "7118": 69, "61": [69, 393, 394, 712], "617": 69, "displai": [69, 145, 149, 230, 231, 710], "There": [69, 70, 72, 73, 85, 144, 146, 149, 390, 392, 398, 710, 713], "reason": [69, 146, 397, 713, 866], "dispers": 69, "possibli": [69, 145, 710], "close": [69, 144, 145, 146, 283, 318, 320, 390, 809], "uniti": [69, 97, 217, 228, 240, 251, 262, 390, 764, 775, 790], "803334": 69, "029383": 69, "080556": 69, "176659": 69, "104124": 69, "466510": 69, "129601": 69, "094600": 69, "197135": 69, "913425": 69, "234012": 69, "264609": 69, "970844": 69, "179466": 69, "092021": 69, "152119": 69, "182299": 69, "543462": 69, "782811": 69, "158395": 69, "044042": 69, "605203": 69, "175549": 69, "260051": 69, "942997": 69, "135802": 69, "010064": 69, "864135": 69, "213336": 69, "315180": 69, "112368": 69, "053364": 69, "378365": 69, "109851": 69, "304442": 69, "237830": 69, "7": [69, 144, 145, 146, 147, 392, 393, 394, 399, 706, 709, 710, 711, 712], "seaborn": [69, 710], "sn": [69, 710], "matplotlib": [69, 710], "inlin": [69, 75, 710], "heatmap": [69, 710], "lt": [69, 146, 392], "ax": [69, 144, 392], "gt": [69, 146, 392], "similarli": [69, 390, 394, 398, 399, 710, 712, 714, 759], "monthli": [69, 146], "scale": [69, 150, 156, 162, 168, 454, 714, 865], "show": [69, 70, 144, 146, 147, 148, 396, 710], "annual": [69, 146, 393, 710], "healthcar": 69, "ha": [69, 71, 73, 75, 88, 89, 113, 128, 135, 144, 145, 146, 149, 191, 236, 281, 300, 319, 329, 334, 352, 357, 370, 387, 390, 392, 393, 394, 397, 398, 450, 484, 536, 537, 547, 550, 559, 570, 582, 583, 586, 597, 610, 636, 639, 648, 659, 671, 674, 683, 696, 710, 712, 749, 781, 797, 810, 832, 844, 885], "largest": 69, "8": [69, 144, 145, 146, 392, 393, 394, 397, 399, 710, 712, 713, 764, 768, 775, 778, 794], "023360": 69, "030919": 69, "010643": 69, "012009": 69, "002783": 69, "024215": 69, "009726": 69, "017078": 69, "009952": 69, "050760": 69, "015197": 69, "033345": 69, "dtype": [69, 392, 393, 710], "float64": [69, 392, 393, 710], "more": [69, 71, 75, 85, 145, 146, 148, 268, 319, 347, 390, 393, 397, 509, 710, 711, 712, 713, 714, 768, 778, 794, 816, 820, 850, 854], "necessari": [69, 147, 393, 395, 486, 494, 502, 521, 529], "procedur": [69, 71, 149], "In": [69, 75, 145, 146, 147, 149, 229, 289, 340, 376, 390, 392, 393, 394, 397, 398, 486, 494, 500, 502, 511, 521, 529, 556, 594, 645, 680, 710, 712, 713, 714, 810, 816, 844, 850, 885], "here": [69, 145, 146, 147, 392, 393, 394, 399, 710, 711, 712], "four": [69, 149, 390, 519, 527], "attempt": [69, 71, 395], "9051": 69, "36": [69, 146, 392, 399, 710], "929": 69, "0070": [69, 146, 711], "5385": 69, "0040": [69, 70, 393, 710], "0100": [69, 393], "0005": [69, 146, 710, 711, 712], "0014": [69, 70, 144, 393, 710, 712, 713], "3381": 69, "7353": 69, "0023": [69, 72, 146, 392, 393, 710], "0033": [69, 393, 397, 710], "0084": [69, 146, 710], "0025": [69, 146, 710, 711, 713], "3085": 69, "0034": [69, 393, 710, 713], "0133": [69, 145], "8072": 69, "0056": [69, 70], "0112": [69, 393], "092658": 69, "224223": 69, "244844": 69, "691191": 69, "874285": 69, "881880": 69, "459326": 69, "082546": 69, "047256": 69, "147949": 69, "239957": 69, "297941": 69, "156849": 69, "623684": 69, "059730": 69, "760059": 69, "948556": 69, "467783": 69, "333619": 69, "135465": 69, "128861": 69, "713403": 69, "051098": 69, "413705": 69, "138597": 69, "112936": 69, "062397": 69, "755032": 69, "946214": 69, "200052": 69, "095270": 69, "100067": 69, "078098": 69, "046531": 69, "069780": 69, "467172": 69, "identif": [69, 75, 147], "have": [69, 70, 75, 87, 88, 89, 130, 132, 144, 145, 147, 264, 289, 340, 376, 390, 392, 393, 398, 450, 556, 559, 570, 594, 597, 610, 645, 648, 659, 680, 683, 696, 706, 710, 712, 714, 716, 762, 764, 775, 788, 790, 816, 850], "uniqu": [69, 135, 146, 710, 711, 767, 777, 793], "variat": [69, 146, 398], "some": [69, 71, 72, 75, 79, 80, 85, 86, 144, 145, 146, 147, 236, 392, 393, 395, 396, 708, 710, 711, 713, 714, 883], "cross": [69, 71, 75, 393, 400, 536, 537, 709, 713, 714, 745, 797, 810, 832, 844], "section": [69, 71, 73, 75, 211, 222, 233, 245, 256, 393, 400, 536, 537, 709, 710, 714, 745], "differ": [69, 71, 73, 75, 83, 85, 86, 92, 113, 145, 146, 209, 243, 254, 268, 281, 319, 329, 334, 347, 357, 370, 390, 392, 395, 396, 397, 399, 450, 459, 499, 500, 550, 559, 586, 597, 639, 648, 674, 683, 708, 710, 711, 714, 820, 854], "exposur": [69, 71], "correl": [69, 75, 145, 146, 149, 264, 353, 354, 355, 390, 395, 400, 534, 539, 540, 541, 572, 574, 575, 576, 626, 628, 629, 630, 661, 663, 664, 665, 710, 713, 762, 788, 797, 810, 832, 844], "rel": [69, 72, 145, 146, 268, 392, 393, 398], "might": [69, 70, 73, 145, 146, 393, 398, 710], "make": [69, 72, 85, 146, 149, 215, 226, 238, 249, 260, 393, 398, 399, 489, 497, 505, 515, 524, 532, 712, 768, 778, 794], "infer": [69, 72, 73, 75, 86, 92, 149, 209, 243, 254, 491, 548, 584, 637, 672, 709, 710, 713, 714], "unreli": [69, 75], "11": [69, 145, 146, 393, 394, 399, 570, 610, 659, 696, 710, 711, 712, 714], "corr": [69, 145, 398, 539, 540, 541, 574, 575, 576, 628, 629, 630, 663, 664, 665, 710], "000000": [69, 145, 146, 392], "001914": 69, "733916": 69, "253675": 69, "638056": 69, "015628": 69, "002744": 69, "wa": [69, 75, 145, 146, 147, 289, 340, 376, 390, 393, 396, 547, 556, 583, 594, 636, 645, 671, 680, 710, 716, 731, 735, 739, 816, 850], "insignific": [69, 710], "drop": [69, 75, 87, 144, 146, 147, 178, 289, 340, 376, 390, 392, 393, 398, 399, 450, 456, 490, 498, 506, 507, 511, 516, 525, 533, 556, 594, 645, 680, 710, 712, 816, 850], "much": [69, 146, 393], "effect": [69, 71, 73, 75, 86, 87, 88, 89, 113, 144, 145, 146, 147, 191, 281, 334, 370, 390, 391, 392, 397, 399, 400, 408, 416, 434, 442, 450, 484, 491, 507, 508, 509, 511, 514, 517, 526, 527, 534, 540, 541, 543, 544, 546, 550, 556, 562, 563, 572, 575, 576, 578, 579, 581, 582, 586, 587, 592, 594, 600, 601, 602, 609, 626, 629, 630, 632, 633, 635, 639, 645, 651, 652, 661, 664, 665, 667, 668, 670, 674, 680, 686, 687, 695, 699, 706, 708, 710, 749], "7915": 69, "406": 69, "0073": [69, 145, 147, 149, 710], "0017": [69, 146, 710], "3856": 69, "0105": [69, 145, 147, 710], "0091": 69, "0027": [69, 710, 712], "4361": 69, "0006": [69, 392, 393, 710, 711, 712], "0039": [69, 393, 710, 713], "0143": [69, 710], "7507": 69, "0055": [69, 70, 393, 394, 710], "0113": [69, 393, 394, 399], "case": [69, 72, 145, 146, 147, 149, 207, 211, 222, 233, 245, 256, 390, 394, 395, 398, 450, 486, 494, 502, 511, 521, 529, 708, 710, 711, 713, 714, 785, 810, 844, 885], "construct": [69, 75, 87, 101, 130, 135, 140, 143, 146, 211, 215, 222, 226, 233, 238, 245, 249, 256, 260, 269, 289, 321, 340, 359, 376, 390, 392, 393, 454, 483, 485, 489, 491, 493, 497, 499, 501, 505, 507, 509, 510, 515, 518, 520, 524, 526, 528, 532, 538, 556, 573, 594, 627, 645, 662, 680, 710, 714, 748, 752, 758, 759, 763, 766, 768, 770, 774, 778, 784, 785, 789, 792, 794, 798, 816, 833, 850], "misspecifi": 69, "littl": [69, 145], "impact": 69, "13": [69, 144, 145, 146, 149, 392, 393, 399, 709, 710, 712], "005": [69, 710], "0045": [69, 72, 145, 146, 147], "0079": 69, "5607": 69, "5750": 69, "0200": 69, "0111": 69, "0076": [69, 146], "4636": 69, "1433": [69, 711], "0038": [69, 70, 393, 711], "0259": 69, "0110": 69, "0946": 69, "0362": [69, 393], "0007": [69, 70, 393, 710, 712], "0214": [69, 710], "0086": [69, 145, 710], "9315": [69, 146], "0058": [69, 392], "0114": [69, 710], "base": [69, 72, 73, 75, 80, 92, 110, 145, 146, 220, 277, 305, 330, 367, 389, 393, 395, 398, 491, 539, 540, 541, 574, 575, 576, 612, 628, 629, 630, 663, 664, 665, 698, 709, 716, 731, 739, 759, 762, 764, 770, 785, 788, 790], "g": [69, 73, 75, 128, 150, 188, 200, 208, 219, 229, 230, 236, 242, 253, 283, 300, 352, 387, 390, 397, 398, 399, 400, 408, 416, 434, 442, 570, 610, 659, 696, 710, 711, 714, 716, 745, 753, 764, 775, 790, 809, 865], "newei": [69, 71, 72, 149, 168, 174, 200, 400, 402, 410, 416, 418, 424, 426, 436, 444, 500, 509, 519, 527, 709, 710, 726, 739, 753], "west": [69, 71, 72, 149, 168, 174, 200, 400, 402, 410, 416, 418, 424, 426, 436, 444, 500, 509, 519, 527, 709, 710, 726, 739, 753], "reduc": [69, 75, 252, 393, 486, 494, 502, 507, 511, 518, 521, 529, 712], "serial": 69, "firmli": 69, "14": [69, 70, 145, 146, 149, 393, 399, 710, 712, 713], "25": [69, 145, 146, 147, 392, 393, 394, 399, 710], "841": 69, "3094": 69, "0106": [69, 710], "0031": [69, 145, 710], "9499": 69, "0032": [69, 710], "0152": 69, "8371": 69, "kernelcovari": [69, 70, 72, 92, 149, 194, 209, 243, 254, 762, 788], "final": [69, 73, 145, 267, 268, 302, 396, 398, 710], "similar": [69, 71, 145, 147, 149, 390, 392, 393, 394, 395, 397, 399, 500, 509, 519, 527, 712, 820, 854], "singl": [69, 75, 86, 128, 146, 147, 300, 352, 387, 392, 394, 450, 491, 570, 610, 659, 696, 711, 712, 764, 775, 790], "practic": [69, 144, 390, 398, 710, 714, 764, 775, 790], "least": [69, 75, 86, 144, 145, 146, 149, 207, 398, 509, 713, 759, 766], "twice": [69, 146], "onc": [69, 88, 89, 92, 145, 390, 393], "get": [69, 135, 450, 458, 471, 759, 763, 770, 774, 785, 789, 884], "form": [69, 71, 73, 87, 101, 110, 128, 144, 145, 146, 211, 222, 233, 245, 256, 269, 277, 300, 321, 330, 352, 359, 367, 387, 390, 398, 399, 408, 450, 507, 538, 570, 573, 610, 627, 659, 662, 696, 710, 712, 714, 745, 753, 759, 760, 770, 771, 785, 786, 798, 816, 833, 850], "progress": 69, "everi": 69, "linearfactormodelgmm": [69, 71, 72, 86, 708], "47": [69, 145, 146, 147, 392, 394], "75791582822472": 69, "28": [69, 145, 146, 392, 394, 710], "102587863294254": 69, "20": [69, 70, 145, 146, 149, 392, 394, 396, 399, 709, 710, 712], "26": [69, 145, 146, 147, 392, 393, 399, 710, 712], "361385291036818": 69, "30": [69, 146, 149, 392, 393, 399, 710, 712], "019667283111943": 69, "40": [69, 146, 392, 394, 709], "22": [69, 145, 146, 710, 712, 714], "325343252976985": 69, "warn": [69, 75, 145, 712], "desir": [69, 145, 392, 394, 399], "necessarili": [69, 71, 145], "achiev": [69, 145, 393], "due": [69, 145, 393, 398, 710, 712], "precis": [69, 145, 305, 389, 392, 450, 612, 698, 710, 714], "loss": [69, 73, 145], "current": [69, 83, 145, 146, 710], "325343": 69, "41": [69, 399], "evalu": [69, 145, 147, 215, 226, 238, 249, 260, 489, 497, 505, 515, 524, 532, 768, 778, 794], "2596": [69, 145, 399], "gradient": [69, 145], "76": [69, 394], "519350283466594": 69, "303730340555415": 69, "226427020276983": 69, "193081228657324": 69, "066871": 69, "2663": 69, "78": [69, 392, 399, 710], "7904": [69, 72], "067": [69, 393], "0012": [69, 70, 72, 393, 710], "56": [69, 72, 146], "0067": [69, 146, 393], "4335": 69, "0037": [69, 145, 146, 393, 397, 710], "0097": [69, 146, 710], "0135": 69, "8706": [69, 393], "0090": [69, 146, 710, 712], "0180": [69, 146], "5139": 69, "0066": [69, 393, 710], "0123": [69, 70, 397], "well": [69, 70, 71, 72, 75, 146, 148, 329, 357, 390, 393, 396, 708, 710], "impli": 69, "abl": 69, "16": [69, 145, 146, 393, 394, 399, 710], "7901": 69, "833": [69, 145], "0316": [69, 713], "58": [69, 393, 397], "0074": 69, "1450": 69, "0046": [69, 393], "0102": [69, 145, 147, 392, 399], "0137": [69, 145, 147, 393], "0030": [69, 145, 146, 147, 710], "5918": 69, "0078": [69, 394], "0195": 69, "0013": [69, 710, 711, 712], "0849": [69, 710], "0103": [69, 70, 711], "approach": [69, 71, 73, 145, 709], "sub": 69, "repeat": [69, 75, 147, 711], "fix": [69, 75, 86, 87, 144, 397, 399, 400, 408, 416, 434, 442, 507, 509, 706, 708, 748, 752, 758], "keyword": [69, 70, 75, 145, 194, 218, 222, 229, 230, 233, 393, 710, 711, 770, 775], "17": [69, 92, 145, 146, 392, 393, 397, 399, 710, 712, 713], "280320453422526": 69, "222217729443333": 69, "09415705415857": 69, "09126659209813": 69, "089908": 69, "37": [69, 145, 146, 147, 710], "2392": 69, "088798284658004": 69, "0887714231204": 69, "088753": 69, "2970": 69, "87": [69, 397], "088622410712894": 69, "088622": 69, "1338": [69, 712], "08862233395225": 69, "1644": 69, "48": [69, 392, 397, 399, 710, 712], "089": 69, "32": [69, 70, 144, 145, 146, 392, 393, 394, 710, 711, 712], "03": [69, 144, 399], "4231": 69, "0096": 69, "8726": 69, "5017": 69, "cue": [69, 86, 145, 229, 708], "jointli": [69, 268, 329, 357, 572, 582, 712, 713, 714], "rather": [69, 145, 398, 712], "than": [69, 73, 75, 87, 145, 146, 149, 319, 347, 397, 398, 509, 536, 711, 712], "same": [69, 71, 72, 73, 110, 113, 128, 140, 145, 146, 149, 215, 226, 238, 241, 249, 260, 268, 277, 281, 289, 300, 319, 330, 334, 340, 352, 367, 370, 376, 387, 390, 392, 393, 398, 460, 509, 550, 556, 559, 570, 586, 594, 597, 610, 639, 645, 648, 659, 674, 680, 683, 696, 710, 711, 712, 714, 764, 766, 775, 790, 792, 816, 850], "18": [69, 70, 72, 145, 146, 393, 394, 399, 710, 712, 713], "524477045898372": 69, "386053110614757": 69, "339803929792485": 69, "308307937162958": 69, "077574": 69, "38": [69, 144, 146, 394, 710], "3650": 69, "107": [69, 146, 710], "7903": 69, "719": 69, "09": [69, 144], "4157": 69, "0136": [69, 70, 710], "8881": 69, "0181": [69, 146], "4984": 69, "multipl": [70, 146, 149, 305, 389, 392, 397, 612, 698, 710, 711, 713, 714], "depend": [70, 75, 87, 88, 92, 113, 144, 145, 146, 149, 168, 194, 207, 209, 211, 218, 220, 222, 229, 231, 233, 236, 241, 243, 245, 252, 254, 256, 281, 334, 370, 390, 392, 393, 394, 397, 398, 400, 408, 416, 424, 434, 442, 483, 491, 499, 507, 518, 526, 536, 539, 540, 541, 550, 556, 561, 562, 563, 574, 575, 576, 586, 594, 599, 601, 602, 628, 629, 630, 639, 645, 650, 651, 652, 663, 664, 665, 674, 680, 685, 686, 687, 710, 711, 712, 713, 714, 745, 753, 759, 766, 770, 781, 785, 792, 824, 858], "independ": [70, 397, 526], "exist": [70, 710], "mani": [70, 75, 85, 145, 146, 394, 397, 507, 706, 714], "express": [70, 149, 211, 222, 233, 245, 256, 355, 390, 392, 398, 710, 711, 714, 759, 770, 785], "port1": 70, "port2": 70, "port3": 70, "port4": 70, "portn": 70, "factor1": 70, "factork": 70, "hand": [70, 390, 392, 398, 483, 491, 499, 507, 518, 526, 710], "side": [70, 390, 483, 491, 499, 507, 518, 526, 710], "from_formula": [70, 75, 128, 146, 147, 300, 352, 387, 394, 397, 711, 712], "1": [70, 73, 86, 87, 95, 97, 128, 135, 139, 143, 144, 145, 146, 147, 149, 150, 156, 162, 168, 174, 175, 176, 177, 188, 190, 191, 193, 194, 200, 203, 206, 207, 208, 211, 215, 216, 217, 218, 219, 222, 226, 227, 228, 229, 230, 233, 236, 238, 239, 240, 241, 242, 245, 249, 250, 251, 252, 253, 256, 260, 261, 262, 283, 300, 305, 347, 352, 353, 355, 387, 389, 390, 392, 393, 394, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 484, 486, 489, 491, 494, 497, 500, 502, 505, 509, 511, 515, 519, 521, 524, 527, 529, 532, 548, 570, 584, 610, 612, 637, 659, 672, 696, 698, 699, 705, 709, 710, 711, 712, 714, 716, 720, 723, 726, 731, 735, 739, 745, 748, 753, 759, 762, 764, 768, 770, 775, 778, 785, 788, 790, 792, 794, 797, 809, 810, 820, 824, 832, 844, 854, 858, 863, 864, 865], "combin": [70, 87, 393], "adequ": 70, "7229": 70, "9450": 70, "0190": [70, 712], "0044": [70, 146], "6929": 70, "0071": [70, 145, 392], "0075": 70, "4051": 70, "0024": [70, 146, 392, 393], "0088": [70, 712], "0081": [70, 145, 147, 710, 711], "0021": [70, 72, 710, 712], "7457": 70, "omit": [70, 146, 147, 398, 759, 768, 778, 794, 816, 850], "simplifi": [70, 75, 85, 87, 135, 139, 145, 393, 398, 714, 766, 792], "experi": [70, 85, 128, 146, 300, 352, 387, 393, 397, 710], "altern": [70, 75, 92, 147, 209, 243, 254, 264, 390, 393, 396, 399, 450, 712, 714, 759, 796, 824, 831, 858], "appear": [70, 145, 264, 710, 711, 712], "inadequ": 70, "even": [70, 87, 144, 393, 399, 710], "port": 70, "v": [70, 128, 145, 146, 147, 150, 156, 162, 168, 300, 319, 347, 352, 355, 357, 387, 390, 570, 610, 659, 696, 711, 883, 885], "format": [70, 78, 81, 82, 128, 135, 139, 300, 352, 387, 393, 396, 399, 450, 570, 610, 659, 696, 710, 764, 775, 790], "7723": 70, "86": 70, "346": 70, "5940": 70, "5525": 70, "0042": [70, 146, 393, 710], "0918": [70, 393, 710], "0022": [70, 72, 146, 393, 712], "0063": [70, 710, 711, 712], "0050": [70, 711], "1337": 70, "2569": 70, "0036": [70, 146], "7058": 70, "0109": [70, 710], "To": 70, "verifi": [70, 75, 710], "interfac": [70, 75, 128, 147, 300, 352, 387, 394, 556, 594, 645, 680, 710, 712, 764, 766, 775, 790, 792], "ident": [70, 73, 92, 97, 144, 145, 146, 217, 228, 240, 251, 262, 354, 390, 393, 394, 397, 398, 484, 500, 710, 711, 712, 714, 762, 788], "403": 70, "commonli": [71, 396], "fama": [71, 75, 86, 424, 491, 534, 708], "explain": [71, 146, 149, 174, 354, 355, 393], "hypothesi": [71, 128, 148, 300, 352, 387, 396, 570, 610, 659, 696, 714, 797, 810, 832, 844, 866, 868, 871, 873], "associ": [71, 710], "simpl": [71, 73, 128, 145, 147, 300, 352, 387, 393, 399, 570, 610, 659, 696, 710, 711, 712, 792], "seemingli": [71, 73, 75, 86, 708, 710, 713, 759, 785, 831], "unrel": [71, 73, 75, 86, 708, 710, 713, 759, 785, 831], "regress": [71, 72, 73, 75, 86, 87, 146, 147, 148, 252, 263, 264, 265, 267, 278, 317, 329, 331, 347, 353, 354, 355, 357, 390, 394, 397, 398, 399, 491, 536, 537, 582, 708, 710, 716, 731, 735, 739, 759, 780, 785, 792, 820, 824, 831, 854, 858], "sur": [71, 72, 73, 75, 86, 708, 710, 711, 712, 713], "possibl": [71, 128, 145, 146, 147, 149, 300, 352, 387, 390, 392, 394, 570, 610, 659, 696, 710, 711, 712, 764, 775, 790], "equal": [71, 73, 128, 145, 300, 352, 387, 390, 570, 610, 659, 696], "premium": [71, 73], "_": [71, 73, 135, 168, 207, 218, 229, 241, 353, 354, 355, 390, 398, 400, 408, 416, 434, 442, 483, 548, 584, 637, 672, 710, 714, 716, 759, 770, 785, 797, 820, 824, 832, 854, 858], "sim": [71, 73, 268, 283, 318, 319, 320, 329, 347, 353, 355, 390, 714, 809], "chi": [71, 128, 145, 146, 268, 283, 300, 318, 319, 329, 352, 353, 355, 387, 548, 570, 584, 610, 637, 659, 672, 696, 797, 809, 810, 832, 844], "2_p": 71, "demean": [71, 73, 390, 393, 399, 460, 463, 541, 576, 630, 661, 665, 691, 714, 781, 820, 854], "regressor": [71, 73, 75, 87, 92, 130, 132, 140, 144, 145, 146, 147, 149, 150, 156, 162, 168, 188, 190, 191, 193, 194, 200, 203, 206, 207, 208, 215, 218, 219, 226, 229, 230, 236, 238, 241, 242, 249, 252, 253, 260, 264, 265, 319, 347, 354, 390, 393, 394, 397, 398, 408, 489, 497, 505, 509, 515, 524, 532, 534, 536, 547, 548, 572, 583, 584, 626, 636, 637, 661, 671, 672, 711, 712, 714, 716, 720, 723, 726, 731, 735, 739, 747, 748, 749, 751, 752, 757, 758, 759, 762, 766, 768, 778, 784, 785, 788, 792, 794, 797, 810, 816, 832, 844, 850], "2_": [71, 268, 318, 319, 329, 353, 355, 548, 584, 637, 672, 797, 810, 832, 844], "k": [71, 72, 73, 75, 145, 146, 149, 150, 156, 162, 168, 200, 207, 208, 241, 242, 245, 253, 256, 267, 284, 317, 335, 358, 371, 398, 400, 416, 434, 442, 547, 548, 582, 583, 584, 636, 637, 671, 672, 708, 709, 710, 714, 759, 770, 785, 797, 810, 832, 844, 863, 864, 879, 883, 884, 885], "over": [71, 75, 146, 390, 397, 714], "identifi": [71, 146, 390, 393, 394, 397, 460, 486, 494, 502, 507, 511, 518, 521, 529, 710, 714], "either": [71, 73, 92, 144, 145, 150, 215, 226, 238, 249, 260, 289, 340, 376, 390, 450, 452, 454, 463, 489, 491, 497, 505, 515, 524, 532, 710, 713, 714, 759, 764, 768, 770, 775, 778, 785, 790, 794, 816, 850, 885], "three": [71, 72, 73, 75, 86, 144, 145, 390, 392, 398, 450, 484, 500, 509, 708, 710, 713, 759], "gener": [71, 72, 73, 86, 145, 146, 149, 211, 218, 222, 233, 245, 256, 392, 394, 397, 398, 399, 456, 507, 514, 556, 594, 645, 661, 680, 691, 706, 708, 709, 712, 713, 770], "triangular": [71, 149, 168], "mathemat": [71, 144, 148, 174, 396, 397, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687], "detail": [71, 144, 146, 148, 194, 220, 231, 396, 797, 810, 832, 844], "concis": [71, 148, 396], "explan": [71, 148, 396, 866], "introduct": [71, 146, 148, 393, 396], "modul": [71, 86, 148, 396, 398, 710, 713], "refer": [71, 86, 148, 174, 390, 396, 455, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687, 713, 797, 810, 832, 844], "purpos": [72, 708], "strategi": [72, 393], "version": [72, 92, 97, 110, 145, 146, 217, 228, 240, 251, 252, 262, 277, 319, 330, 367, 390, 399, 710], "prefer": [72, 75, 145, 713], "eight": 72, "basic": [72, 148, 396], "usag": [72, 148, 396], "si": 72, "s1": 72, "s5": 72, "v1": 72, "v5": 72, "transform": [72, 390, 398, 399, 475, 486, 494, 502, 511, 521, 529, 559, 597, 648, 683, 710, 780, 781, 784], "prior": [72, 398], "copi": [72, 75, 450, 792], "loc": [72, 138, 146, 180, 455, 710], "8879": 72, "109": [72, 710, 712], "sun": 72, "mai": [72, 75, 87, 144, 145, 390, 398, 486, 494, 502, 507, 511, 518, 521, 529, 714, 759, 770], "2017": [72, 149, 397, 399, 713], "0060": [72, 146, 710], "7381": 72, "0029": [72, 146, 710, 712], "0092": 72, "0001": [72, 145, 146, 147, 220, 393, 399, 710, 711, 712], "0011": [72, 393, 710, 711, 712], "1281": 72, "8980": 72, "0068": [72, 393, 710], "For": [73, 85, 135, 390, 392, 393, 398, 714], "share": [73, 85, 283, 318, 319, 320, 347, 353, 716], "alpha_": [73, 393, 398], "beta_": [73, 390, 710, 714], "sandwich": 73, "sg": 73, "defin": [73, 207, 218, 236, 241, 283, 329, 353, 357, 390, 398, 399, 543, 544, 547, 578, 579, 582, 583, 632, 633, 636, 667, 668, 671, 714, 797, 809, 810, 820, 824, 832, 844, 854, 858, 865], "i_": [73, 710, 714], "sigma_": [73, 398, 710], "sum_": [73, 150, 156, 162, 168, 188, 191, 200, 229, 390, 398, 400, 416, 434, 491, 714, 745, 753, 797, 810, 832, 844], "stack": [73, 400, 408, 416, 424, 434, 442, 710, 714, 759, 770, 785], "vector": [73, 149, 236, 390, 710, 714, 745, 753, 759, 765, 770, 776, 781, 785, 791], "g_": [73, 200, 390, 398, 714], "epsilon": [73, 150, 156, 162, 168, 191, 236, 283, 329, 347, 353, 355, 357, 390, 398, 434, 442, 483, 710, 712, 714, 759, 770, 785, 820, 824, 854, 858], "align": [73, 75, 215, 226, 238, 249, 260, 390, 398, 712, 714], "gamma": [73, 87, 144, 149, 150, 156, 168, 354, 390, 398, 753], "bw": [73, 168, 175, 176, 177, 390, 398, 400, 416], "frac": [73, 357, 390, 398, 547, 582, 583, 636, 671, 712, 714, 820, 824, 854, 858, 865], "just": [73, 146, 147, 393, 398, 712], "after": [73, 88, 89, 148, 390, 394, 395, 396, 399], "chi_": [73, 347, 390, 714], "row": [73, 128, 144, 146, 178, 182, 264, 268, 300, 352, 387, 390, 392, 570, 610, 659, 696, 712], "column": [73, 75, 79, 83, 135, 139, 143, 144, 145, 146, 178, 179, 182, 264, 268, 289, 340, 376, 390, 392, 393, 400, 408, 416, 434, 442, 450, 456, 475, 556, 594, 645, 680, 706, 710, 711, 712, 714, 720, 723, 726, 764, 768, 775, 778, 790, 794, 816, 850], "ldot": [73, 353, 355, 390, 710, 714, 745, 753, 759, 770, 785], "cannot": [73, 146, 354, 355, 393, 394, 397, 714], "its": [73, 146, 393, 714], "solut": [73, 75, 144, 393, 714], "multi": [73, 450, 460, 461, 486, 494, 502, 511, 521, 529], "throw": 73, "awai": 73, "remov": [73, 75, 392, 393, 399, 475, 769, 779, 795, 877, 882, 883], "virtual": [73, 393, 710, 711], "longer": [73, 393, 710], "c_": 73, "eta_": [73, 390], "compens": 73, "conduct": [73, 148, 396], "treat": [73, 87, 135, 146, 215, 226, 238, 249, 260, 289, 329, 340, 355, 357, 376, 390, 392, 450, 484, 489, 497, 500, 505, 507, 509, 511, 515, 519, 524, 527, 532, 768, 778, 794, 816, 850], "problem": [73, 145, 390, 712, 714], "were": [73, 75, 268, 392, 393, 714], "third": [73, 710], "foc": 73, "ccc": 73, "block": [73, 146, 147, 211, 222, 233, 245, 256, 268, 390, 710, 714, 716, 731, 735, 739, 749, 759, 770, 785], "0_": 73, "times1": 73, "u": [73, 146, 390, 399], "term": [73, 98, 99, 110, 277, 330, 367, 390, 393, 398, 714, 820, 854], "becom": 73, "previou": [73, 146, 390, 393, 397, 710], "tild": [73, 353, 390, 398, 714, 716, 731, 739, 781], "lambda_": 73, "piec": 73, "structur": [73, 75, 149, 211, 215, 220, 222, 226, 231, 233, 238, 245, 249, 256, 260, 392, 393, 398, 475, 486, 494, 502, 511, 521, 529, 710, 712, 713, 759, 768, 770, 778, 785, 794, 816, 850], "element": [73, 79, 128, 149, 150, 300, 352, 387, 570, 610, 659, 696, 706, 710, 714, 716, 731, 739], "occur": [73, 393, 714], "bottom": 73, "solv": [73, 390, 714], "sometim": 73, "doubt": 73, "about": [73, 146, 710, 712], "vdot": [73, 714, 759, 770, 785], "write": [73, 75, 390, 714], "code": [73, 75, 85, 146, 390, 392, 393, 507, 511, 714], "bryzgalova": [73, 709], "cochran": [73, 709], "jagannathanet": [73, 709], "ad": [75, 78, 145, 393, 398, 710, 877, 878, 880, 881, 885, 886], "famamacbethresult": [75, 492], "avg_rsquar": [75, 534], "avg_adj_rsquar": [75, 534], "initi": [75, 147, 220, 392, 393, 706, 710, 711, 714, 773], "compat": [75, 86, 144, 390], "panda": [75, 87, 135, 139, 144, 145, 146, 149, 178, 392, 393, 394, 396, 450, 453, 468, 475, 570, 592, 610, 659, 696, 710, 711, 712, 764, 775, 780, 782, 790], "featur": [75, 85, 147, 710], "few": [75, 399], "issu": [75, 110, 277, 278, 330, 331, 367, 393], "relat": [75, 145, 146, 149, 390, 398, 475], "wheel": 75, "python": [75, 85], "switch": 75, "patsi": 75, "constraint": [75, 128, 300, 352, 387, 394, 570, 610, 659, 696, 711, 712, 713, 716, 720, 723, 726, 731, 735, 739, 759, 760, 769, 770, 771, 779, 780, 781, 783, 784, 785, 786, 795], "translat": [75, 781], "string": [75, 78, 81, 82, 83, 84, 128, 149, 178, 300, 352, 387, 397, 450, 570, 610, 659, 696, 710, 711, 759, 764, 770, 775, 785, 790], "list": [75, 78, 79, 80, 87, 92, 128, 130, 140, 145, 146, 147, 179, 186, 209, 211, 222, 233, 243, 245, 254, 256, 268, 300, 305, 329, 352, 357, 387, 389, 393, 450, 457, 470, 474, 570, 572, 587, 610, 612, 659, 696, 698, 706, 716, 720, 723, 726, 731, 735, 739, 747, 748, 751, 752, 757, 758, 767, 777, 793, 805, 840, 880, 881, 886], "gh439": 75, "gh440": 75, "bug": 75, "escap": 75, "y": [75, 79, 80, 87, 144, 147, 150, 156, 162, 168, 194, 207, 208, 218, 219, 230, 236, 241, 242, 253, 390, 393, 394, 398, 399, 400, 408, 416, 424, 434, 442, 483, 484, 486, 492, 494, 500, 502, 509, 511, 519, 521, 527, 529, 539, 541, 574, 576, 628, 630, 663, 665, 706, 710, 714, 759, 770, 781, 785], "x": [75, 87, 144, 146, 147, 150, 156, 162, 168, 174, 178, 190, 193, 194, 203, 206, 207, 208, 218, 219, 230, 236, 241, 242, 253, 390, 392, 393, 394, 398, 400, 408, 416, 424, 434, 442, 450, 483, 484, 492, 500, 509, 519, 527, 539, 541, 574, 576, 628, 630, 663, 665, 706, 710, 712, 714, 716, 720, 723, 726, 731, 735, 739, 747, 748, 751, 752, 757, 758, 759, 770, 781, 784, 785], "panel": [75, 86, 145, 147, 395, 397, 398, 399, 709], "gh435": 75, "affect": [75, 149, 353, 393], "creat": [75, 79, 80, 92, 145, 207, 210, 218, 221, 229, 232, 241, 244, 252, 255, 393, 486, 494, 502, 511, 521, 529, 556, 594, 645, 680, 878], "miss": [75, 86, 146, 207, 213, 218, 224, 229, 235, 241, 247, 252, 258, 289, 340, 376, 392, 450, 462, 483, 488, 490, 491, 496, 498, 499, 504, 506, 507, 513, 516, 518, 523, 525, 526, 531, 533, 556, 594, 645, 680, 706, 708, 712, 816, 850], "gh438": 75, "document": [75, 85, 86, 92, 147, 209, 243, 254, 393, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687], "gh434": 75, "iv2sl": [75, 86, 87, 128, 146, 147, 149, 218, 229, 241, 252, 300, 317, 352, 387, 708, 712], "predict": [75, 146, 539, 540, 541, 574, 575, 576, 628, 629, 630, 663, 664, 665, 712], "would": [75, 145, 146, 147, 268, 390, 393, 394, 714, 759, 785], "produc": [75, 87, 140, 145, 146, 147, 178, 220, 241, 245, 256, 355, 392, 393, 398, 500, 509, 519, 527, 710, 711, 712, 714], "nan": [75, 392, 546, 581, 635, 670, 866, 869], "exog": [75, 87, 144, 145, 146, 147, 149, 190, 193, 203, 206, 207, 211, 215, 218, 222, 226, 229, 233, 238, 241, 245, 249, 252, 256, 260, 263, 268, 289, 319, 340, 347, 357, 376, 392, 393, 397, 483, 489, 491, 497, 499, 505, 507, 515, 518, 524, 526, 532, 547, 556, 570, 583, 594, 610, 636, 645, 659, 671, 680, 696, 710, 711, 712, 713, 748, 758, 759, 766, 768, 770, 778, 785, 792, 794, 816, 850], "endog": [75, 146, 147, 149, 190, 193, 203, 206, 207, 211, 215, 218, 222, 226, 229, 233, 238, 241, 245, 249, 252, 256, 260, 263, 283, 289, 318, 319, 320, 340, 353, 357, 376, 712, 748, 758, 759, 766, 768, 770, 778, 794, 809, 816, 850], "had": 75, "indexwarn": 75, "now": [75, 144, 147, 396], "shown": [75, 710], "stacklevel": 75, "improv": [75, 85, 147, 708, 710, 714, 759, 785], "accuraci": [75, 714, 759, 785], "locat": [75, 86, 145, 147, 207, 213, 214, 218, 224, 225, 229, 235, 237, 241, 247, 248, 252, 258, 259, 390, 450, 462, 483, 488, 491, 496, 499, 504, 507, 513, 518, 523, 526, 531, 710], "clarifi": 75, "f": [75, 98, 110, 144, 145, 146, 147, 149, 264, 267, 277, 305, 308, 317, 320, 330, 358, 367, 390, 392, 393, 394, 397, 399, 547, 582, 583, 612, 615, 636, 671, 709, 710, 711, 712, 714, 871, 885], "messag": 75, "parser": 75, "accovari": 75, "incorrectli": 75, "overwritten": 75, "panelresult": [75, 484, 492, 500, 519], "corr_squared_between": [75, 534, 572, 626, 661], "corr_squared_overal": [75, 534, 572, 626, 661], "corr_squared_within": [75, 534, 572, 626, 661], "breusch_pagan": 75, "likelihood_ratio": 75, "diagon": [75, 714, 716, 731, 735, 739, 749, 759, 770, 785, 810, 844], "cluster": [75, 92, 145, 149, 150, 154, 194, 204, 209, 218, 220, 229, 243, 254, 390, 408, 409, 484, 490, 498, 500, 506, 509, 511, 516, 519, 525, 527, 533, 699, 706, 709, 714, 716, 762, 788, 863, 865], "rank_check": 75, "rank": [75, 390, 486, 494, 502, 507, 511, 518, 521, 529, 536, 537], "check": [75, 145, 178, 208, 219, 230, 242, 253, 486, 494, 502, 507, 511, 518, 521, 529, 762, 773, 788], "skip": [75, 486, 494, 502, 507, 511, 518, 521, 529], "defici": 75, "caution": [75, 146, 710, 714], "numpi": [75, 87, 128, 135, 139, 144, 146, 147, 149, 178, 189, 192, 195, 202, 205, 211, 222, 233, 245, 256, 300, 352, 387, 399, 450, 454, 472, 473, 570, 610, 659, 696, 706, 710, 711, 712, 764, 775, 782, 790], "linalg": [75, 87, 92, 144], "lstsq": 75, "better": [75, 145, 146], "svd": 75, "matrix_rank": 75, "lapack_driv": 75, "qr": 75, "calcul": [75, 404, 412, 420, 430, 438, 446, 713], "minor": 75, "releas": [75, 85, 86, 396], "build": [75, 145], "perform": [75, 149, 208, 219, 230, 242, 253, 390, 397, 486, 491, 494, 502, 507, 511, 518, 521, 529, 708], "oper": 75, "pyhdf": [75, 92], "absorbingl": [75, 86, 98, 144], "absorb": [75, 86, 148, 507, 511], "categor": [75, 87, 130, 135, 136, 139, 144, 178, 393, 394, 450, 484, 500, 507, 509, 519, 527, 570, 610, 659, 696], "unweight": [75, 144], "gh157": 75, "system": [75, 86, 709, 710, 711], "clusteredcovari": [75, 92, 149, 194, 209, 243, 254, 762, 788], "gh241": 75, "kernel_optimal_bandwidth": 75, "incorrect": 75, "tune": 75, "gh242": 75, "variou": [75, 147, 393], "gh239": 75, "gh240": 75, "mypi": 75, "gh232": 75, "gh234": 75, "gh235": 75, "gh238": 75, "public": [75, 252], "face": [75, 146], "gh228": 75, "gh229": 75, "all_param": [75, 424, 534], "nparam": [75, 427, 535], "period": [75, 392, 393, 394, 397, 398, 399, 424, 427, 450, 456, 491, 534, 535, 706, 710, 714], "gh230": 75, "blacken": 75, "mcelroi": [75, 710, 711, 712, 824, 858], "berndt": [75, 710, 711, 712, 824, 858], "gh215": 75, "nep": 75, "gh222": 75, "instal": [75, 92], "gh217": 75, "cach": [75, 92], "inherit": [75, 145, 390, 548, 584, 637, 672], "gh211": 75, "handl": [75, 398, 450, 509], "veri": [75, 145, 146, 399], "dimension": [75, 86, 87, 144, 391, 450, 714, 865], "dummi": [75, 87, 135, 143, 144, 146, 178, 390, 397, 398, 399, 450, 454, 509], "been": [75, 88, 89, 145, 264, 329, 357, 392, 397, 762, 788], "000": [75, 392, 394, 399, 710], "categori": [75, 135, 143, 146, 178, 390, 392, 450, 507, 511, 706, 759], "per": [75, 146, 393, 534, 545, 567, 572, 580, 592, 606, 626, 634, 656, 661, 669, 692], "entiti": [75, 392, 395, 397, 398, 399, 400, 408, 416, 424, 434, 442, 450, 452, 454, 456, 458, 463, 465, 483, 484, 486, 491, 494, 499, 500, 502, 507, 508, 509, 511, 518, 519, 521, 526, 527, 529, 534, 539, 541, 545, 563, 572, 574, 576, 580, 602, 626, 628, 630, 634, 652, 661, 663, 665, 669, 687, 699, 706], "id": [75, 145, 146, 393, 399, 400, 408, 416, 434, 442, 458, 471, 484, 500, 699, 710, 713, 716], "drop_absorb": [75, 87, 507, 511], "panelol": [75, 86, 392, 393, 395, 396, 397, 570, 610, 659, 696, 708], "automat": [75, 146, 147, 168, 395, 492, 509, 709, 710], "gh206": 75, "cython": 75, "node": 75, "select": [75, 149, 168, 289, 340, 376, 556, 594, 645, 680, 709, 712, 753, 762, 788, 816, 850], "singleton": [75, 507, 511], "precondit": 75, "use_lsmr": [75, 509], "run": [75, 145, 146, 236, 393], "singelton": 75, "never": [75, 390, 394], "core": [75, 393, 592, 782, 863, 864], "graph": 75, "slope": [75, 87], "exclud": [75, 110, 277, 330, 367, 390, 393, 547, 548, 583, 584, 636, 637, 671, 672, 699, 710, 714], "gh191": 75, "lsmr": [75, 87, 92, 144], "through": [75, 113, 145, 147, 148, 229, 281, 334, 370, 398, 550, 586, 639, 674, 710], "spars": [75, 87, 92, 130, 135, 139, 144, 509], "extend": [75, 146, 390, 714], "exogen": [75, 79, 80, 87, 89, 146, 147, 149, 150, 156, 162, 168, 188, 191, 200, 207, 215, 218, 220, 226, 229, 238, 241, 249, 252, 260, 264, 268, 283, 289, 317, 319, 329, 340, 353, 354, 355, 357, 376, 390, 392, 400, 408, 416, 424, 434, 442, 483, 486, 489, 491, 494, 497, 499, 502, 505, 507, 511, 515, 518, 521, 524, 526, 529, 532, 541, 556, 563, 576, 594, 602, 630, 645, 652, 665, 680, 687, 710, 712, 713, 714, 716, 731, 735, 739, 749, 759, 766, 768, 770, 773, 778, 785, 792, 794, 816, 850], "being": [75, 146, 268, 390, 450], "correctli": [75, 145, 390], "label": [75, 178, 179, 186, 710, 712, 759, 764, 768, 770, 775, 778, 785, 790, 794, 796, 805, 816, 831, 840, 850], "ol": [75, 86, 146, 149, 252, 329, 354, 355, 357, 358, 390, 391, 393, 397, 708, 711, 712, 714, 716, 731, 735, 739, 762, 785, 788], "gh185": 75, "wald_test": 75, "renam": 75, "test_linear_constraint": 75, "memori": [75, 454, 509, 713], "avoid": [75, 87, 229, 454, 712, 714], "entity_effect": [75, 392, 393, 397, 399, 507, 509, 570, 610, 659, 696], "time_effect": [75, 393, 507], "By": [75, 145, 149, 393, 394, 710, 759, 770, 785], "algorithm": [75, 509], "whenev": [75, 241, 559, 597, 648, 683], "gib": [75, 509], "gh182": 75, "comparison": [75, 145, 146, 147, 305, 389, 393, 396, 612, 698, 710], "compar": [75, 146, 305, 612, 710, 712], "instead": [75, 97, 146, 149, 217, 228, 240, 251, 262, 393, 713], "gh178": 75, "did": 75, "famamacbeth": [75, 86, 396, 708], "gh176": 75, "fail": 75, "gh173": 75, "extern": 75, "packag": [75, 85, 149, 392, 395, 396, 399, 709], "manag": 75, "custom": [75, 149], "less": [75, 145, 149, 393], "gh172": 75, "gallant": [75, 168, 174, 200, 400, 416, 710, 726, 739, 753], "gh170": 75, "wooldridg": [75, 145, 146, 148, 317, 353, 354, 355, 390, 393, 396, 709, 710, 711, 712], "invalid": [75, 866], "invalidteststatist": [75, 283, 318, 319, 320, 347, 353, 797, 810, 832, 844, 871], "add": [75, 78, 79, 80, 87, 146, 305, 389, 393, 612, 698, 708, 760, 771, 786], "inform": [75, 79, 80, 86, 145, 146, 149, 189, 192, 202, 205, 241, 392, 450, 458, 471, 710, 716, 718, 720, 722, 723, 725, 726, 729, 731, 733, 735, 737, 739, 742, 746, 750, 755, 762, 788], "ivgmmcu": [75, 86, 145, 149, 207, 218, 241, 267, 708], "intern": [75, 252, 475, 710], "retain": 75, "index": [75, 86, 146, 178, 186, 392, 393, 394, 397, 398, 450, 457, 470, 477, 478, 479, 486, 494, 502, 511, 521, 529, 710, 714, 759, 770, 785], "origin": [75, 145, 146, 215, 226, 238, 249, 260, 268, 289, 340, 376, 395, 489, 490, 497, 498, 505, 506, 515, 516, 524, 525, 532, 533, 556, 559, 594, 597, 645, 648, 680, 683, 768, 778, 794, 816, 850], "conceiv": 75, "spell": 75, "docstr": [75, 85, 92, 209, 243, 254], "prevent": 75, "charact": 75, "kappa": [75, 145, 149, 150, 156, 162, 168, 207, 208, 241, 242, 245, 252, 253, 256, 267, 317, 318, 320, 358, 390], "liml": [75, 86, 241, 245, 256, 318, 320, 708], "licens": 75, "clean": 75, "across": [75, 149, 220, 392, 393, 536, 537, 710, 713, 714, 745, 753], "out": [75, 145, 289, 340, 376, 556, 594, 645, 680, 712, 816, 850], "retriev": [75, 92], "macbeth": [75, 86, 424, 491, 534, 708], "previous": [75, 710], "ignor": [75, 98, 100, 149, 393, 395, 397, 540, 562, 575, 601, 629, 651, 664, 686], "3sl": [75, 86, 708, 713, 759, 764, 775, 785], "random": [75, 86, 87, 135, 139, 144, 526, 527, 661, 708, 710, 711, 712, 764, 775, 790], "pool": [75, 86, 393, 491, 518, 582, 708], "instrument": [75, 86, 87, 146, 147, 149, 150, 156, 162, 168, 188, 190, 191, 193, 194, 200, 203, 206, 207, 208, 211, 218, 219, 220, 222, 229, 230, 233, 236, 241, 242, 245, 252, 253, 256, 264, 278, 283, 319, 329, 331, 347, 353, 354, 355, 357, 390, 709, 712, 713, 714, 720, 723, 726, 745, 748, 749, 752, 753, 758, 759, 766, 770, 773, 785], "etext": 78, "text": [78, 83, 84, 148, 396], "line": [78, 710], "titl": 79, "gleft": 79, "gright": 79, "yname": [79, 80], "xname": [79, 80], "doubl": [79, 146, 450], "merg": [79, 83], "horizont": 79, "taken": [79, 80, 390, 509], "tupl": [79, 133, 140, 178, 187, 230, 401, 409, 417, 425, 435, 443, 469, 480, 710, 759, 770, 785, 816, 850, 883], "pair": [79, 711, 883], "endogen": [79, 80, 87, 146, 149, 150, 156, 162, 168, 194, 207, 211, 215, 218, 222, 226, 229, 233, 238, 241, 245, 249, 252, 256, 260, 264, 265, 268, 289, 319, 329, 340, 347, 353, 354, 355, 357, 376, 390, 710, 711, 712, 713, 714, 759, 766, 768, 770, 778, 785, 794, 816, 850], "var_xx": [79, 80], "match": [79, 145, 395, 398, 399, 490, 498, 506, 516, 525, 533, 556, 594, 645, 680, 710, 768, 778, 794, 816, 850], "05": [80, 144, 146, 147, 710, 712], "use_t": 80, "signific": [80, 146, 393, 534, 547, 548, 572, 583, 584, 626, 636, 637, 661, 671, 672], "level": [80, 101, 269, 321, 359, 392, 450, 475, 486, 494, 502, 511, 521, 529, 538, 573, 627, 662, 710, 798, 833], "confid": [80, 101, 269, 321, 359, 538, 573, 627, 662, 798, 833], "interv": [80, 101, 269, 321, 359, 534, 538, 567, 572, 573, 606, 626, 627, 656, 661, 662, 692, 798, 833], "student": [80, 390], "attach": 80, "concaten": [81, 82], "comma": [81, 128, 300, 352, 387, 570, 610, 659, 696], "delimit": 81, "It": [83, 113, 128, 145, 146, 281, 300, 334, 352, 370, 387, 390, 392, 393, 394, 397, 398, 399, 550, 561, 562, 563, 570, 586, 599, 601, 602, 610, 639, 650, 651, 652, 659, 674, 685, 686, 687, 696, 710, 711, 712, 714, 764, 775, 790, 797, 810, 820, 832, 844, 854], "recommend": [83, 710, 711], "as_latex_tabular": 83, "individu": [83, 145, 146, 263, 397, 398, 536, 537, 710, 796, 805, 806, 831, 840, 841], "txt": 84, "welcom": 85, "area": [85, 145, 147], "extens": [85, 393, 394, 712, 714], "program": 85, "typo": [85, 710], "experienc": 85, "programm": 85, "clear": 85, "opportun": [85, 149], "refactor": 85, "simplif": 85, "task": 85, "Of": 85, "cours": 85, "entir": [85, 759, 770, 785], "cover": [85, 393], "alwai": [85, 110, 146, 178, 183, 191, 277, 330, 367, 390, 392, 395, 400, 408, 416, 434, 442, 714, 749, 866, 867, 869], "github": 85, "fork": 85, "repo": 85, "branch": 85, "your": 85, "new": [85, 392], "submit": 85, "pull": 85, "request": [85, 866], "stabl": 86, "latest": 86, "doc": 86, "recent": [86, 710], "develop": [86, 397], "devel": 86, "statsmodel": [86, 145, 146, 147, 149, 252, 393, 394, 397, 399, 570, 610, 659, 696, 708, 710, 713], "randomeffect": [86, 393, 394, 395, 397, 708], "firstdifferenceol": [86, 393, 394, 395, 397, 708], "betweenol": [86, 393, 394, 395, 397, 708], "pooledol": [86, 393, 394, 397, 507, 708], "equat": [86, 509, 709, 711, 713, 714, 720, 723, 726, 745, 747, 751, 752, 753, 757, 759, 764, 765, 766, 768, 770, 775, 776, 778, 785, 790, 791, 792, 794, 796, 805, 816, 820, 824, 831, 840, 850, 854, 858], "limit": [86, 145, 149, 241, 708, 762, 788], "ml": [86, 241], "ivliml": [86, 87, 145, 149, 207, 218, 229, 252, 256, 317, 708], "ivgmm": [86, 145, 149, 207, 229, 231, 241, 267, 708], "iv3sl": [86, 708, 712, 713, 812, 846], "ivsystemgmm": [86, 708, 712], "plan": 86, "contribut": 86, "log": [86, 128, 145, 146, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 392, 393, 394, 397, 399, 534, 551, 572, 588, 626, 640, 661, 675, 710, 714, 810, 844], "interact": [87, 92, 130], "nexog": [87, 207, 215, 218, 226, 229, 238, 241, 249, 252, 260, 289, 340, 376, 556, 594, 645, 680, 706, 766], "cat": [87, 130, 135, 139, 144], "cont": [87, 130, 135, 139], "cartesian": [87, 135, 143], "product": [87, 135, 139, 143, 149, 220, 773], "capabl": 87, "million": 87, "y_i": [87, 144, 149, 229, 236, 354, 710, 711], "x_i": [87, 144, 229, 236, 434, 710], "z_i": [87, 144, 150, 156, 168, 176, 177, 188, 191, 200, 236, 283], "epsilon_i": [87, 144, 149, 188, 191, 200, 229, 354, 416, 710], "z": [87, 147, 150, 156, 162, 168, 176, 190, 193, 194, 203, 206, 207, 208, 218, 219, 230, 236, 241, 242, 253, 329, 347, 353, 357, 390, 483, 714, 720, 723, 726, 748, 749, 752, 758, 759, 770, 863, 864], "fewer": 87, "known": [87, 146, 236, 714], "invert": 87, "inner": [87, 147, 392, 712], "frish": 87, "waugh": 87, "lovel": 87, "orthogon": [87, 144, 264, 353, 390, 398], "perfectli": [87, 393], "linearli": 87, "particular": [87, 146, 149, 194, 393, 397, 712, 768, 778, 794, 816, 850], "restrict": [87, 128, 267, 283, 300, 317, 318, 319, 320, 347, 352, 387, 390, 398, 399, 547, 548, 570, 583, 584, 610, 636, 637, 659, 671, 672, 696, 713, 714, 780, 781, 796, 809], "captur": 87, "redund": 87, "compon": [87, 130, 148, 353, 354, 355, 390, 393, 397, 398, 712, 714], "np": [87, 128, 135, 139, 144, 146, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 392, 399, 570, 610, 659, 696, 710, 711, 712, 764, 775, 790, 866, 869], "pd": [87, 135, 139, 144, 145, 146, 149, 392, 393, 570, 610, 659, 696, 710, 711, 712, 764, 775, 790], "dep": [87, 144, 145, 146, 147, 149, 263, 392, 393, 394, 397, 399, 710, 711, 712], "standard_norm": [87, 135, 139, 144, 712], "20000": 87, "randint": [87, 135, 139, 144, 710], "rang": [87, 135, 139, 146, 710], "concat": [87, 135, 139, 145, 146, 710], "axi": [87, 135, 139, 145, 146, 178, 182, 490, 498, 506, 516, 525, 533, 710], "iaction": 87, "encod": 87, "absorbed_depend": 87, "absorbed_exog": 87, "has_const": [87, 98, 130, 146, 207, 218, 229, 241, 252, 267, 317, 358, 483, 491, 499, 507, 518, 526, 759, 770, 785], "rais": [88, 89, 92, 149, 393, 450, 703, 882, 883], "runtimeerror": [88, 89, 92], "call": [88, 89, 145, 393, 399, 710], "ivdata": [90, 91, 94, 96], "auto": [92, 762, 788], "absorb_opt": [92, 144], "use_cach": [92, 144], "lsmr_option": 92, "unadjust": [92, 145, 146, 149, 191, 194, 209, 218, 220, 229, 243, 254, 264, 390, 392, 393, 394, 397, 399, 484, 492, 500, 509, 519, 527, 710, 711, 712, 713, 749, 762, 770, 773, 775, 788], "homoskedast": [92, 145, 146, 149, 162, 191, 194, 209, 218, 220, 229, 243, 254, 390, 393, 442, 483, 484, 486, 491, 492, 494, 499, 500, 502, 507, 509, 511, 518, 519, 521, 526, 527, 529, 547, 582, 583, 636, 671, 710, 711, 712, 720, 723, 726, 735, 749, 762, 773, 775, 788, 810, 844], "classic": [92, 145, 146, 209, 243, 254, 393, 397, 547, 583, 636, 671, 762, 773, 788], "hdfe": [92, 144], "fallback": 92, "forc": [92, 146, 149, 393, 710, 762, 788], "binari": [92, 135], "purg": [92, 541, 563, 576, 602, 630, 652, 665, 687], "store": [92, 712, 713], "dramat": 92, "speed": 92, "ass": 92, "deprec": [92, 396, 399], "accord": [92, 209, 243, 254, 452, 454, 460, 463], "command": [92, 145, 209, 243, 254, 392, 394], "absorbinglsresult": 92, "homoskedasticcovari": [92, 149, 194, 209, 243, 254, 762, 788], "configur": [92, 149, 188, 189, 191, 192, 200, 202, 204, 205, 209, 220, 231, 243, 254, 267, 301, 484, 492, 500, 509, 519, 527, 716, 718, 720, 722, 723, 725, 726, 729, 731, 733, 735, 737, 739, 742, 745, 746, 749, 750, 753, 755, 796, 800, 828, 831, 835], "hash": [92, 130, 135], "content": 92, "64": [92, 145, 393, 712], "bit": 92, "xxhash": 92, "256": 92, "reus": 92, "held": 92, "nvar": [95, 97, 128, 150, 156, 162, 168, 190, 193, 194, 203, 206, 208, 215, 216, 217, 219, 226, 227, 228, 230, 236, 238, 239, 240, 242, 249, 250, 251, 253, 260, 261, 262, 300, 352, 387, 450, 489, 497, 505, 515, 524, 532, 543, 544, 570, 578, 579, 610, 632, 633, 659, 667, 668, 696, 748, 768, 778, 792, 794], "raw": [97, 217, 228, 240, 251, 262], "resid": [97, 98, 113, 145, 146, 217, 228, 240, 251, 262, 267, 281, 317, 334, 358, 370, 399, 534, 550, 572, 586, 626, 639, 661, 674, 796, 831], "absorbed_effect": 98, "absorbed_rsquar": 98, "df_absorb": 98, "df_model": [98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "f_statist": [98, 267, 305, 317, 358, 534, 572, 612, 626, 661], "fitted_valu": [98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "equival": [98, 112, 130, 132, 207, 212, 218, 223, 229, 234, 241, 246, 252, 257, 267, 280, 317, 333, 358, 369, 390, 393, 394, 397, 714], "idiosyncrat": [98, 267, 289, 317, 340, 358, 376, 393, 397, 398, 534, 556, 572, 594, 626, 645, 661, 680, 816, 850], "model_ss": [98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "resid_ss": [98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "rsquared_adj": [98, 267, 305, 317, 358], "s2": [98, 150, 156, 162, 168, 194, 267, 317, 358, 400, 408, 416, 424, 434, 442, 534, 572, 626, 661], "varianc": [98, 123, 146, 150, 155, 156, 161, 162, 167, 168, 173, 194, 199, 236, 267, 283, 295, 317, 346, 347, 358, 382, 390, 393, 398, 400, 407, 408, 415, 416, 423, 424, 433, 434, 441, 442, 449, 483, 486, 490, 491, 494, 498, 499, 502, 506, 507, 511, 516, 518, 521, 525, 526, 527, 529, 533, 534, 564, 572, 603, 609, 626, 653, 661, 688, 695, 706, 710, 711, 809, 810, 824, 844, 858], "wresid": [98, 267, 317, 358, 534, 572, 626, 661, 796, 831], "95": [101, 269, 321, 359, 538, 573, 627, 662, 710, 712, 798, 833], "despit": [110, 146, 277, 330, 367], "divid": [110, 145, 277, 330, 367, 548, 584, 637, 672], "against": [110, 145, 277, 330, 367, 390, 393], "dimens": [113, 178, 184, 281, 334, 370, 392, 393, 450, 464, 550, 586, 639, 674], "shape": [113, 135, 139, 146, 178, 281, 334, 370, 392, 450, 475, 550, 559, 586, 597, 639, 648, 674, 683, 710, 716], "natur": [113, 145, 146, 281, 334, 370, 550, 586, 639, 674, 712], "inclus": [113, 281, 334, 370, 393, 550, 586, 639, 674], "appli": [128, 145, 146, 147, 241, 300, 352, 387, 393, 398, 408, 527, 570, 610, 659, 696, 710, 714, 716, 731, 735, 739], "simplest": [128, 149, 300, 352, 387, 390, 570, 610, 659, 696, 764, 775, 790], "x1": [128, 147, 300, 352, 387, 486, 494, 502, 511, 521, 529, 570, 610, 659, 696, 712], "x2": [128, 147, 300, 352, 387, 570, 610, 659, 696, 712], "x3": [128, 147, 300, 352, 387, 570, 610, 659, 696], "without": [128, 208, 242, 253, 300, 352, 387, 399, 570, 610, 659, 696, 712], "kei": [128, 145, 149, 178, 182, 265, 300, 305, 352, 387, 389, 392, 393, 450, 570, 610, 612, 659, 696, 698, 708, 710, 711, 712, 713, 759, 764, 768, 770, 775, 778, 785, 790, 794, 816, 850, 876, 882, 883, 885], "valid": [128, 146, 147, 149, 194, 211, 222, 233, 245, 256, 300, 352, 387, 390, 486, 494, 502, 507, 511, 518, 521, 529, 570, 610, 659, 696, 712, 762, 773, 775, 788, 866], "examin": [128, 145, 146, 300, 318, 320, 352, 353, 354, 355, 387, 390, 570, 610, 659, 696, 714], "h_0": [128, 300, 352, 387, 570, 610, 659, 696], "theta": [128, 300, 352, 387, 393, 398, 570, 610, 659, 661, 696], "2_q": [128, 283, 300, 352, 387, 570, 610, 659, 696, 809], "wage": [128, 149, 211, 222, 233, 245, 256, 300, 352, 387, 393, 397, 710, 711, 712], "exper": [128, 146, 149, 211, 222, 233, 245, 256, 300, 352, 387, 393, 710, 711, 712, 713], "brthord": [128, 146, 211, 222, 233, 245, 256, 300, 352, 387], "educ": [128, 145, 147, 149, 211, 222, 233, 245, 256, 300, 352, 387, 393, 709, 710, 711, 712, 797, 810, 832, 844], "sib": [128, 146, 149, 211, 222, 233, 245, 256, 300, 352, 387], "wald_r": [128, 300, 352, 387, 570, 610, 659, 696], "approx_rank": 130, "csc_matrix": [134, 143], "dataarrai": [135, 178, 450], "best": [135, 392, 764, 775, 790], "convert": [135, 178, 392, 450, 475], "ncat": [135, 143, 706], "ncont": [135, 139, 143], "randomst": [135, 139, 144, 706, 710], "100000": [135, 139, 399], "cats_df": 135, "count": [135, 145, 146, 393, 398], "top": 135, "freq": 135, "20251": 135, "20195": 135, "20331": 135, "20158": 135, "cart": [135, 139], "1875": [135, 711], "invari": [135, 140], "permut": [135, 140], "isnul": [135, 178, 207, 218, 229, 241, 252, 450], "static": [139, 208, 211, 219, 222, 233, 242, 245, 253, 256], "frame": [139, 592, 764, 775, 790], "conveni": 139, "720": 139, "dummy_interact": 143, "prod_": 143, "distinct": [143, 408, 710, 764, 775, 790], "grow": 144, "notebook": [144, 146], "how": [144, 145, 146, 390, 393, 396, 710, 712, 714], "simul": [144, 699, 706, 712], "mirror": 144, "state": [144, 146, 710], "worker": [144, 710], "1_000_000": 144, "state_id": 144, "50": [144, 145, 146, 397, 399], "state_effect": 144, "max": [144, 145, 146, 392, 393, 394, 397, 398, 399], "firm_id": 144, "firm_effect": 144, "ep": [144, 190, 193, 203, 206, 400, 408, 416, 424, 434, 442, 716, 720, 723, 726, 731, 735, 739, 747, 748, 751, 752, 757, 758], "column_stack": [144, 712], "ones": [144, 146, 710, 714], "intercept": [144, 146, 147, 394, 395, 398, 399, 710], "trick": 144, "meaning": [144, 399, 710], "done": [144, 711], "l": [144, 145, 146, 709], "8377": 144, "adj": [144, 145, 146, 147, 149, 399, 710, 712], "7975": 144, "1000000": 144, "962e": 144, "06": [144, 146, 392, 710, 762, 773, 788], "6664": 144, "varaibl": 144, "987e": 144, "9477": 144, "1057": [144, 393], "9460": 144, "9495": 144, "9994": [144, 710], "990": 144, "89": [144, 146, 392, 712], "9974": [144, 710], "0008": [144, 146, 393, 710, 711], "989": [144, 710], "9989": 144, "0028": [144, 146, 393, 712], "span": [144, 392, 714], "44": [144, 145, 147, 399], "satisfi": [144, 215, 226, 238, 249, 260, 390, 759, 785], "datetim": 144, "dt": 144, "total_second": 144, "635116": 144, "992843": 144, "toler": [144, 762, 773, 788], "b": [144, 390, 398, 709, 710], "198676": 144, "damp": 144, "00000000000000e": 144, "00": [144, 146, 393, 397, 712], "atol": 144, "00e": 144, "08": [144, 394, 399, 712], "conlim": 144, "btol": 144, "maxit": 144, "itn": 144, "norm": 144, "cond": [144, 145, 147], "00000e": 144, "417e": 144, "126e": 144, "0e": 144, "6e": 144, "04": [144, 392, 710, 712], "83446e": 144, "02": [144, 146, 712], "677e": 144, "377e": 144, "9e": [144, 392], "01": [144, 146], "1e": [144, 762, 773, 788], "2e": 144, "09819e": 144, "563e": 144, "668e": 144, "5e": [144, 392], "7e": [144, 392], "17247e": 144, "553e": 144, "446e": 144, "4e": 144, "3e": [144, 392], "30067e": 144, "551e": 144, "539e": 144, "30071e": 144, "662e": 144, "29984e": 144, "542e": 144, "999e": 144, "07": [144, 146, 392, 399], "29985e": 144, "882e": 144, "29990e": 144, "8e": [144, 392], "86056e": 144, "003e": 144, "finish": 144, "good": [144, 145, 147, 390, 714], "enough": 144, "istop": 144, "normr": 144, "norma": 144, "normar": 144, "conda": 144, "normx": 144, "001e": 144, "470e": 144, "08847e": 144, "953e": 144, "167e": 144, "15243e": 144, "484e": 144, "41447e": 144, "412e": 144, "88004e": 144, "266e": 144, "87319e": 144, "921e": 144, "87000e": 144, "868e": 144, "87108e": 144, "866e": 144, "87255e": 144, "62098e": 144, "857e": 144, "04265e": 144, "789e": 144, "99381e": 144, "309e": 144, "000e": 144, "472e": 144, "29233e": 144, "946e": 144, "623e": 144, "45416e": 144, "328e": 144, "34706e": 144, "107e": 144, "41880e": 144, "140e": 144, "42126e": 144, "176e": 144, "41939e": 144, "077e": 144, "41643e": 144, "40968e": 144, "02689e": 144, "060e": 144, "66462e": 144, "851e": 144, "22889e": 144, "454e": 144, "follow": [145, 148, 710, 885], "those": [145, 147, 149, 394, 710, 711], "chapter": [145, 146, 393, 710], "microeconometr": [145, 709], "stata": [145, 148, 390, 395, 398, 709, 714], "cameron": [145, 148, 709], "trivedi": [145, 148, 709], "main": [145, 395, 408, 710, 712, 713], "likelihood": [145, 149, 392, 393, 394, 397, 399, 534, 551, 572, 588, 626, 640, 661, 675, 714, 810, 844], "medic": [145, 147], "expenditur": [145, 147], "survei": [145, 147], "mep": 145, "pocket": 145, "drug": [145, 147], "characterist": [145, 147, 393], "insur": [145, 147, 710], "employ": [145, 146, 710], "union": [145, 146, 147, 392, 393, 397, 399, 570, 610, 659, 696, 706, 710, 711], "like": [145, 147, 390, 393, 396, 397, 475, 706, 710, 711, 714, 759, 764, 768, 770, 775, 778, 785, 790, 794, 816, 850, 876, 880, 881, 886], "candid": 145, "percentag": [145, 706], "incom": [145, 146, 147], "social": [145, 147], "secur": [145, 147], "dropna": [145, 146, 147, 712], "ag": [145, 146, 147, 710, 712], "age2": [145, 147], "black": [145, 146, 147, 393], "blhisp": [145, 147], "hispan": [145, 147, 393], "drugexp": [145, 147], "presc": [145, 147], "expens": [145, 147], "educyr": [145, 147], "fair": [145, 147], "femal": [145, 147], "firmsz": [145, 147], "fph": [145, 147], "poor": [145, 147], "hi_empunion": [145, 147], "thro": [145, 147], "emp": [145, 147, 710], "hisp": [145, 147, 393], "hiapan": [145, 147], "ldrugexp": [145, 147], "linc": [145, 147], "lowincom": [145, 147], "marri": [145, 147, 393, 397, 570, 610, 659, 696, 710, 711], "midincom": [145, 147], "middl": [145, 147], "msa": [145, 147], "metropolitan": [145, 147], "multlc": [145, 147], "poverti": [145, 147], "priolist": [145, 147], "prioriti": [145, 147], "privat": [145, 147, 252], "ssiratio": [145, 147], "ssi": [145, 147], "ratio": [145, 147, 347, 390, 714, 810, 824, 844, 858], "totchr": [145, 147], "chronic": [145, 147], "vegood": [145, 147], "vgh": [145, 147], "vg": [145, 147], "next": [145, 146, 393, 710], "control": [145, 146, 149, 393, 484, 500, 509, 519, 527], "summar": 145, "group": [145, 146, 150, 390, 393, 398, 408, 450, 452, 454, 456, 458, 460, 463, 572, 592, 710, 716, 865], "percentil": 145, "10089": [145, 147], "mean": [145, 146, 147, 188, 191, 200, 204, 390, 394, 398, 509, 710, 714, 745, 749, 753, 863, 864], "481361": 145, "382198": 145, "860938": 145, "577064": 145, "75": [145, 146, 399], "051740": 145, "362052": 145, "485949": 145, "292858": 145, "494050": 145, "682109": 145, "min": [145, 146, 390, 392, 393, 394, 397, 399], "65": [145, 394], "678342": 145, "74": [145, 399, 712], "180172": 145, "91": [145, 392], "743275": 145, "163544": 145, "913143": 145, "369880": 145, "907755": 145, "743160": 145, "744476": 145, "worth": [145, 146, 395, 710], "536544": 145, "187432": 145, "062048": 145, "140529": 145, "367818": 145, "390277": 145, "241254": 145, "170389": 145, "504522": 145, "250620": 145, "And": 145, "relev": [145, 278, 331, 392, 454, 712], "especi": 145, "lead": [145, 147, 507, 714, 759, 785], "weak": [145, 146], "exclus": 145, "212431": 145, "116419": 145, "119849": 145, "037352": 145, "253946": 145, "190433": 145, "044578": 145, "062465": 145, "008232": 145, "187275": 145, "add_const": [145, 146, 149, 393, 397, 570, 610, 659, 696, 710, 713], "process": [145, 215, 226, 238, 249, 260, 289, 340, 376, 489, 497, 505, 515, 524, 532, 768, 778, 794, 816, 850], "api": [145, 146, 149, 252, 393, 397, 570, 610, 659, 696, 710, 713], "const": [145, 146, 149, 393, 397, 706, 710, 713], "nest": [145, 149], "ivolsmod": 145, "res_ol": [145, 146, 710], "1770": [145, 146, 147], "1765": [145, 147, 710], "2262": [145, 147], "55": [145, 146, 394], "0739": [145, 147], "0260": [145, 146, 147, 710], "8441": [145, 147], "0230": [145, 147, 712], "1248": [145, 147], "8611": [145, 147], "1570": [145, 146, 147], "320": [145, 147], "5533": [145, 147], "1689": [145, 147], "4404": [145, 147], "049": [145, 147], "4220": [145, 147], "4587": [145, 147], "0578": [145, 147], "0254": [145, 147], "2797": [145, 147], "0226": [145, 146, 147, 710], "1075": [145, 147], "0019": [145, 147, 710], "8228": [145, 147], "0683": [145, 147], "0003": [145, 146, 147, 394, 710, 711, 712], "7646": [145, 147], "4445": [145, 147], "0164": [145, 147], "0373": [145, 147], "1513": [145, 147], "0341": [145, 147, 149, 710], "4353": [145, 146, 147], "2182": [145, 147], "0844": [145, 147], "strong": [145, 146], "ivmod": 145, "res_2sl": [145, 146], "0640": [145, 147], "0634": [145, 147, 710], "2000": [145, 147], "7872": [145, 147, 710], "2688": [145, 147], "246": [145, 147], "2602": [145, 147], "3141": [145, 147], "4503": [145, 147], "157": [145, 146, 147, 392, 712], "4303": [145, 147], "4703": [145, 147, 710], "0204": [145, 147], "0326": [145, 147], "6257": [145, 147], "5315": [145, 147, 711], "0843": [145, 147], "0435": [145, 146, 147], "0132": [145, 146, 147, 710], "4092": [145, 147], "0191": [145, 147], "0870": [145, 147], "8436": [145, 147], "0426": [145, 147, 393], "1314": [145, 147, 393], "2174": [145, 147, 710], "0395": [145, 147], "5052": [145, 147], "2948": [145, 147], "1400": [145, 147], "8976": [145, 147, 710], "2211": [145, 147], "0592": [145, 146, 147], "3310": [145, 147], "4642": [145, 147, 710], "res_2sls_robust": 145, "account": [145, 393, 408, 484, 509, 539, 540, 541, 561, 562, 563, 574, 575, 576, 599, 601, 602, 628, 629, 630, 650, 651, 652, 663, 664, 665, 685, 686, 687, 710], "res_2sls_std": 145, "iter_limit": [145, 149, 220, 712, 762, 773, 788], "res_gmm": 145, "alter": [145, 149], "weight_typ": [145, 149, 218, 222, 229, 233, 267, 712, 770, 775, 796], "res_gmm_clust": 145, "simultan": [145, 236, 241, 507, 709, 710, 711, 713], "order": [145, 146, 175, 176, 177, 353, 390, 393, 556, 594, 645, 680, 710, 711, 713, 760, 764, 771, 775, 786, 790, 876, 880, 881, 886], "sens": [145, 149, 390, 399, 710, 759, 785], "fragil": 145, "res_gmm_cu": 145, "045365": 145, "412": [145, 712], "ordereddict": [145, 393, 710, 711, 713], "hold": [145, 146, 393, 699], "advantag": [145, 710], "preserv": [145, 392, 710, 711, 713], "present": [145, 148, 396, 399, 703, 710, 820, 854, 885], "With": [145, 450], "fairli": [145, 393, 710], "vari": [145, 393, 710], "slightli": [145, 146], "conclus": [145, 146], "reach": [145, 146], "sensit": [145, 146], "choic": [145, 149, 194, 390, 396, 399, 509, 548, 584, 637, 672, 712, 714], "parenthes": [145, 146, 147, 393], "collect": [145, 393, 710, 711, 713], "homo": 145, "hetero": 145, "est": [145, 146, 147, 393], "0414": 145, "0406": 145, "0292": [145, 393], "0388": 145, "0409": [145, 146], "0400": 145, "0286": 145, "0382": 145, "1882": [145, 710], "1955": 145, "1952": 145, "1700": [145, 394], "1949": 145, "9899": 145, "9933": 145, "0359": [145, 710], "1501": 145, "8386": 145, "8530": 145, "8810": 145, "8752": 145, "8778": 145, "7277": 145, "8847": 145, "030": 145, "660": 145, "658": 145, "299": [145, 712], "657": 145, "4512": 145, "4510": 145, "4482": 145, "42": [145, 399], "942": 145, "43": 145, "769": 145, "738": 145, "33": [145, 146, 147, 394, 710, 712], "701": 145, "0278": [145, 146, 393], "0282": 145, "0245": [145, 146], "0288": [145, 146, 392, 710], "8933": 145, "8653": 145, "8398": [145, 712], "8928": 145, "0141": [145, 710], "0142": [145, 146], "0119": [145, 393], "0834": 145, "8753": 145, "8773": 145, "8969": 145, "0943": 145, "0945": 145, "0957": 145, "0950": 145, "4400": 145, "3079": 145, "3142": 145, "4934": 145, "3333": 145, "2237": [145, 146], "2231": 145, "2091": 145, "2236": 145, "7805": 145, "6514": 145, "6344": [145, 710], "1662": 145, "6421": 145, "durbin": [145, 390], "exploit": [145, 398], "fact": 145, "h0": [145, 146], "2819": 145, "0x7f31201567a0": 145, "wu": [145, 357, 390], "hausman": [145, 357, 390], "variant": 145, "wu_hausman": 145, "3253": [145, 146], "10081": 145, "0x7f31200f0be0": 145, "replic": [145, 708], "step1": 145, "step2": 145, "34541049978904": 145, "wooldridge_regress": [145, 146, 317], "4542": [145, 710, 711], "0x7f311fc5ffd0": 145, "power": [145, 390], "lm": [145, 797, 832], "19": [145, 146, 355, 392, 397, 710, 712], "wooldridge_scor": [145, 317], "24": [145, 146, 393, 710, 712], "9350": 145, "0x7f311fc5fc10": 145, "overidentifi": [145, 146, 267, 283, 317, 318, 319, 320, 347, 390, 796, 809], "word": 145, "actual": [145, 146, 200, 201, 268, 393, 395, 398], "evid": 145, "j_stat": [145, 267, 796], "0475": [145, 710], "3061": 145, "0x7f3120156020": 145, "stori": 145, "res_gmm_al": 145, "5903": 145, "0089": 145, "0x7f311faa5ea0": 145, "probabl": [145, 393], "od": 145, "col": [145, 178, 710, 764, 775], "1768": 145, "0644": 145, "9053": 145, "1763": [145, 393], "0651": [145, 146], "9064": 145, "2250": 145, "1734": 145, "950": 145, "8201": 145, "2145": 145, "7267": 145, "267": [145, 146, 710], "326": 145, "4196": 145, "4399": 145, "4548": 145, "4710": 145, "834": 145, "193": 145, "23": [145, 146, 149, 709, 710, 713], "163": [145, 393], "0613": 145, "0565": [145, 711], "1842": 145, "6066": 145, "5312": 145, "0177": 145, "0335": [145, 146], "7521": 145, "7086": 145, "3433": 145, "1223": [145, 146], "2473": [145, 710], "2280": 145, "2965": 145, "1876": 145, "1484": 145, "2479": 145, "3559": [145, 146], "5639": 145, "0727": 145, "2425": [145, 146], "1170": 145, "3459": 145, "9323": 145, "3254": [145, 710], "1760": [145, 146, 710], "0908": [145, 393], "assess": 145, "credibl": 145, "partial": [145, 146, 264, 390, 393], "first_stag": [145, 146, 267, 317], "0761": 145, "0179": [145, 393], "shea": [145, 146, 264, 390], "806": 145, "441e": 145, "distn": [145, 146], "0290": [145, 149], "705": 145, "0128": [145, 710], "4896": 145, "0734": 145, "6226": 145, "184": 145, "0484": 145, "3266": 145, "0627": 145, "1084": 145, "1916": 145, "1121": 145, "break": 145, "rule": [145, 146, 147, 400, 416, 424, 486, 494, 502, 511, 521, 529], "thumb": [145, 146, 400, 416, 424], "res_2sls_al": 145, "0821": 145, "0243": [145, 393, 399], "179": [145, 146], "959": [145, 393], "6494": 145, "0724": [145, 710], "5497": [145, 710], "0080": [145, 146, 393, 710], "206": 145, "0410": [145, 146], "3552": 145, "0676": [145, 146], "5369": 145, "1690": 145, "3289": 145, "0637": 145, "1947": 145, "1151": 145, "4799": 145, "9286": 145, "finit": [145, 149], "strongli": [145, 710], "exact": [145, 714], "res_liml": 145, "0394": [145, 146], "8807": 145, "577": 145, "4513": 145, "730": [145, 710], "0283": [145, 713], "8776": [145, 710], "8781": 145, "0947": 145, "3114": 145, "2241": 145, "6531": 145, "9957": 145, "8361": 145, "000115316680643": 145, "As": [145, 710], "27": [145, 146, 393, 710], "res_ivol": 145, "sm_ol": 145, "sm": [145, 149, 393, 397, 570, 610, 659, 696, 710, 713], "073879": 145, "861131": 145, "440381": 145, "057806": 145, "003529": 145, "010482": 145, "151307": 145, "econometr": [146, 393, 709, 710, 797, 810, 832, 844], "jeffrei": [146, 393, 709], "demonstr": [146, 710, 712], "primarili": [146, 393], "signal": 146, "beyond": [146, 393, 400, 408, 416, 434, 442], "direct": [146, 147], "among": 146, "mroz": [146, 712], "1987": [146, 392, 393], "34": [146, 393, 394, 399, 710], "empir": 146, "hour": [146, 393, 710, 712], "work": [146, 392, 393, 397, 709, 710, 712], "assumpt": [146, 268, 397, 398, 547, 582, 583, 636, 671, 710, 712, 714], "econometrica": 146, "765": [146, 392], "799": 146, "nlf": 146, "labor": [146, 393], "1975": 146, "kidslt6": [146, 712], "kid": 146, "kidsge6": 146, "woman": 146, "yr": [146, 710], "school": [146, 393, 710], "earn": [146, 710, 711, 713], "repwag": 146, "interview": 146, "1976": 146, "hushr": 146, "husband": 146, "husag": 146, "huseduc": 146, "huswag": 146, "hourli": [146, 710, 711], "faminc": 146, "famili": 146, "mtr": 146, "fed": 146, "margin": [146, 710], "tax": 146, "motheduc": 146, "mother": 146, "fatheduc": 146, "father": 146, "unem": 146, "counti": 146, "citi": 146, "live": [146, 710], "smsa": 146, "mkt": 146, "nwifeinc": [146, 712], "lwage": [146, 393, 397, 570, 610, 659, 696, 712], "expersq": [146, 393, 397, 570, 610, 659, 696, 710, 711, 712], "special": [146, 207, 394, 397, 398, 511, 708, 710, 713, 785], "1179": [146, 393], "1158": [146, 393], "428": [146, 712], "57": [146, 392, 712], "196": [146, 712], "1852": 146, "1848": 146, "3163": 146, "5474": 146, "1086": 146, "0144": [146, 393], "5628": 146, "0805": [146, 710], "1368": 146, "subject": [146, 147], "save": 146, "later": 146, "relationship": 146, "res_first": 146, "educ_hat": 146, "1726": 146, "1706": [146, 710], "258": [146, 710], "237": 146, "2753": [146, 394, 711], "186": [146, 710], "6975": 146, "777": 146, "2694": 146, "0285": 146, "4476": 146, "2135": 146, "res_second": 146, "0934": [146, 392], "0913": [146, 393], "8487": 146, "0914": [146, 710], "4411": 146, "4451": 146, "9911": 146, "3216": 146, "4312": 146, "3134": 146, "0351": 146, "6878": 146, "0095": [146, 710], "1279": [146, 393, 710], "res_direct": 146, "5982": 146, "941e": 146, "1070": 146, "9465": 146, "6119": 146, "sibl": 146, "blackburn": 146, "d": [146, 390, 393, 450, 454, 475, 709, 879, 883, 884], "neumark": 146, "1992": 146, "unobserv": 146, "abil": [146, 710], "interindustri": 146, "differenti": 146, "quarterli": 146, "journal": [146, 393, 709], "1421": 146, "1436": 146, "weekli": 146, "iq": [146, 149], "kww": 146, "knowledg": 146, "world": 146, "tenur": [146, 710, 713], "south": [146, 709, 710, 711], "urban": 146, "meduc": 146, "feduc": 146, "0973": [146, 710], "0964": 146, "934": [146, 149, 393, 710], "100": [146, 392, 394, 706, 712, 762, 788], "71": [146, 399], "9733": 146, "0814": 146, "73": [146, 712], "419": 146, "8139": [146, 393], "1328": 146, "0598": 146, "035": [146, 710], "0481": 146, "0715": 146, "0576": 146, "0566": 146, "143": 146, "1131": [146, 710], "125": 146, "921": 146, "365": 146, "2287": [146, 710], "0303": [146, 710], "5569": 146, "2880": 146, "1694": 146, "0101": [146, 710], "715": 146, "1310": 146, "3539": 146, "497": 146, "4373": 146, "8248": 146, "1224": [146, 711], "0263": [146, 710], "6599": 146, "0709": [146, 393], "1738": [146, 393], "concept": [146, 147], "wl": [146, 391, 394, 454, 484, 708], "2_i": [146, 168, 824, 858], "w_i": [146, 175, 176, 177, 711, 712, 753, 824, 858], "feasibl": [146, 399, 714], "could": [146, 394, 710], "res2": 146, "fgls_mod": 146, "fgls_re": 146, "sigma2_hat": 146, "exp": 146, "9903": [146, 712], "1360": [146, 710], "2224": 146, "3675": [146, 710], "4956": 146, "9452": 146, "0518": 146, "1307": [146, 710], "0158": 146, "5311": 146, "5953": 146, "particularli": 146, "don": 146, "res_gl": 146, "520": 146, "2031": 146, "3231": 146, "105": 146, "5699": 146, "8363": 146, "1166": 146, "0241": [146, 393], "8497": 146, "0695": 146, "1638": 146, "babi": 146, "birthweight": 146, "mullahi": 146, "1997": 146, "cigarett": 146, "behavior": 146, "review": [146, 709, 710], "79": 146, "596": 146, "593": 146, "1988": [146, 392], "cigtax": 146, "cig": 146, "home": [146, 392], "cigpric": 146, "bwght": 146, "ounc": 146, "pariti": 146, "child": 146, "male": [146, 710, 711], "white": [146, 393, 434, 484, 500, 509, 519, 527, 710], "smked": 146, "dai": [146, 710], "preg": 146, "lbwght": 146, "bwghtlb": 146, "pound": 146, "pack": 146, "_weak": 146, "1388": 146, "0731": 146, "1499": [146, 710], "9746": 146, "2361": [146, 710], "9192": 146, "3580": 146, "3172": [146, 392], "3681": 146, "0356": 146, "0247": [146, 393, 711], "4398": 146, "0129": [146, 394, 710], "0840": 146, "substanti": [146, 393, 710], "warrant": 146, "interpret": [146, 393, 714], "150": 146, "5224": 146, "5242": 146, "1356": 146, "2866": 146, "7203": 146, "0381": [146, 393], "123": [146, 392, 710], "80": [146, 392], "6456": 146, "7951": 146, "0238": 146, "0223": 146, "0656": 146, "0199": 146, "0675": 146, "colleg": [146, 709], "card": 146, "1995": 146, "geograph": 146, "aspect": 146, "labour": 146, "essai": 146, "honour": 146, "john": [146, 709], "vanderkamp": 146, "ed": 146, "christophid": 146, "grant": [146, 392], "swidinski": 146, "201": [146, 710], "222": 146, "toronto": 146, "univers": [146, 709], "press": [146, 709], "person": [146, 393], "nearc2": 146, "1966": [146, 394], "nearc4": 146, "nl": 146, "momdad14": 146, "dad": 146, "sinmom14": 146, "step14": 146, "parent": 146, "reg661": 146, "region": [146, 710], "reg662": 146, "reg663": 146, "reg664": 146, "reg665": 146, "reg666": 146, "reg667": 146, "reg668": 146, "reg669": 146, "south66": 146, "smsa66": 146, "cent": 146, "enrol": 146, "libcrd14": 146, "lib": 146, "xpersq": 146, "instr": [146, 241, 263, 268, 283, 318, 319, 320, 347, 353, 390, 809], "4771": 146, "4745": 146, "3010": 146, "3693": 146, "3199": 146, "0848": 146, "7702": 146, "1536": 146, "4862": 146, "638": [146, 393], "2148": 146, "77": [146, 393, 394, 712], "456": 146, "217": [146, 394], "059": 146, "4125": 146, "0320": [146, 393], "896": 146, "4752": 146, "3498": [146, 399], "5100": 146, "6100": 146, "9355": 146, "0923": 146, "138": 146, "1164": 146, "7547": 146, "4022": 146, "1109": 146, "6255": 146, "6196": 146, "0516": 146, "1416": [146, 393], "3645": 146, "7155": 146, "3291": 146, "2259": 146, "0255": 146, "1103": 146, "2309": [146, 399], "8174": 146, "1908": 146, "2417": 146, "0786": 146, "1854": 146, "4242": 146, "6714": 146, "4420": [146, 710], "2847": [146, 711], "0279": [146, 710], "1789": 146, "1562": [146, 710], "8759": 146, "3785": 146, "3226": 146, "1172": 146, "2070": 146, "5660": 146, "5714": 146, "2886": 146, "5230": 146, "2726": [146, 710], "2186": 146, "2230": 146, "7111": 146, "1659": 146, "3028": 146, "2826": 146, "1996": 146, "7656": 146, "1599": 146, "2168": [146, 147], "2389": 146, "9077": 146, "3640": 146, "6850": 146, "2513": [146, 710], "5239": 146, "2562": 146, "0449": [146, 394, 713], "0218": 146, "2103": 146, "0575": 146, "2903": 146, "1794": 146, "6000": 146, "2998": 146, "2963": 146, "1377": 146, "6208": 146, "0740": 146, "62": 146, "417": 146, "4757": 146, "7659": [146, 711], "592": [146, 712], "0716": [146, 393], "0980": 146, "1798": [146, 394], "1990": [146, 394], "985": [146, 710], "2345": 146, "1635": 146, "1364": 146, "0192": 146, "1159": 146, "0988": [146, 710], "1739": 146, "1480": 146, "0280": 146, "2917": 146, "2028": 146, "0932": [146, 710], "0262": 146, "0185": 146, "4153": 146, "0626": [146, 711, 712], "0350": [146, 711], "7531": 146, "0059": [146, 710, 711], "1650": 146, "1445": [146, 710], "0337": 146, "2850": 146, "0784": 146, "2107": [146, 710], "0551": 146, "0411": 146, "3402": 146, "1802": 146, "1280": 146, "0428": [146, 393], "9912": [146, 399], "0441": 146, "2119": 146, "1405": [146, 149], "0450": 146, "0018": [146, 710], "0523": [146, 711], "1180": 146, "0455": 146, "5934": [146, 711], "2071": 146, "0564": [146, 711], "0505": 146, "1183": 146, "2634": [146, 710], "1553": 146, "0425": 146, "1186": 146, "0387": 146, "0658": [146, 710], "1944": 146, "0747": 146, "540": 146, "0818": 146, "nearli": [146, 394], "howev": [146, 397], "concern": 146, "strength": 146, "2382": 146, "2343": 146, "840": 146, "83": [146, 393], "6662": 146, "9085": 146, "0352": [146, 710], "8855": 146, "4468": 146, "1083": [146, 393], "0233": 146, "6376": 146, "0625": 146, "1540": 146, "7128": 146, "1468": 146, "0524": [146, 710, 712], "8031": 146, "0051": [146, 393, 710], "2494": [146, 710], "1118": 146, "0311": 146, "5995": 146, "0509": [146, 393], "1727": 146, "1447": 146, "0291": 146, "9775": 146, "2016": [146, 709], "0877": 146, "0205": [146, 710], "9035": 146, "3663": 146, "0217": [146, 393], "0587": 146, "1008": 146, "0365": [146, 393], "7644": 146, "0057": [146, 710], "0293": [146, 710], "1722": 146, "1483": 146, "0355": 146, "0787": 146, "2178": 146, "0499": 146, "1471": 146, "2514": 146, "0354": [146, 710], "1352": 146, "1463": 146, "0491": 146, "9794": 146, "0500": 146, "1629": 146, "0617": 146, "2641": 146, "1346": [146, 394], "0504": 146, "6689": 146, "0357": [146, 710, 711], "2334": [146, 393], "0831": [146, 393, 710], "0571": 146, "4552": 146, "1456": 146, "1950": 146, "1078": 146, "6317": 146, "0085": 146, "0275": 146, "1881": 146, "1315": 146, "0540": 146, "0149": [146, 710], "0257": 146, "2373": 146, "smaller": [146, 710], "naiv": [146, 500, 509, 519, 527, 714], "technic": [146, 710], "214": [146, 399, 710], "simpler": [146, 390, 712], "discuss": [146, 148], "anoth": 146, "languag": 146, "augment": 146, "parameter": 146, "differenc": [146, 393, 394, 395, 398, 399, 459], "res_formula": 146, "reg": 146, "661": 146, "reg66": 146, "astyp": [146, 392, 399], "res_cat": 146, "662": [146, 710], "663": 146, "664": 146, "665": [146, 710], "666": 146, "667": [146, 392], "668": 146, "669": 146, "lnwage": 146, "1357": 146, "1296": 146, "653": [146, 709, 712], "3985": 146, "1207": 146, "9039": 146, "7329": 146, "8291": 146, "0442": 146, "0134": [146, 393, 710], "3038": 146, "0704": 146, "2485": 146, "0614": [146, 393], "0313": [146, 710], "9622": 146, "0497": 146, "043e": 146, "1227": 146, "IF": 146, "8256": 146, "0928": [146, 710], "0x7fc7de564f70": 146, "accid": 146, "1624": 146, "1544": 146, "82": [146, 399], "954": 146, "0582": 146, "0346": [146, 711], "6810": 146, "1260": 146, "3923": 146, "1226": 146, "9024": 146, "7207": 146, "8169": 146, "0184": 146, "0700": [146, 399, 710], "2840": [146, 710], "0224": 146, "0308": 146, "9932": 146, "0462": 146, "1218": 146, "overidentif": [146, 317, 353, 390], "uncorrel": [146, 390, 397, 398, 714], "wooldridge_overid": [146, 317], "4435": 146, "5055": 146, "0x7fc7de567df0": 146, "formal": [146, 561, 562, 563, 599, 601, 602, 650, 651, 652, 685, 686, 687], "2_1": 146, "29": [146, 393, 394, 399, 709, 710], "3719811106150752": 146, "0421": [146, 393], "5939": 146, "0x7fc7de6a11b0": 146, "1126588681972365": 146, "elimin": [146, 397, 509], "jobtrain": [146, 392], "head": [146, 392, 393, 394], "isin": 146, "sort_valu": 146, "fcode": [146, 392], "set_index": [146, 392, 393, 394, 397, 399, 570, 610, 659, 696], "hrsemp": [146, 392], "scrap": [146, 392], "lscrap": [146, 392], "h": [146, 390, 709, 797, 810, 832, 844], "holzer": 146, "cheatham": 146, "knott": 146, "1993": [146, 710, 711], "train": [146, 392], "subsidi": 146, "michigan": 146, "46": [146, 392], "625": 146, "636": 146, "1989": [146, 392], "emploi": [146, 392, 762, 773, 788], "employe": [146, 710], "plant": [146, 394], "sale": [146, 392], "avgsal": [146, 392], "salari": 146, "item": [146, 392, 475, 476, 877], "rework": [146, 392], "tothr": [146, 392], "receiv": 146, "d89": [146, 392], "d88": [146, 392], "totrain": 146, "lemploi": 146, "lsale": 146, "lrework": 146, "lhrsemp": 146, "lscrap_1": 146, "lag": [146, 175, 176, 177, 200, 709], "grant_1": [146, 392], "clscrap": [146, 392], "cgrant": [146, 392], "clemploi": [146, 392], "clsale": [146, 392], "lavgsal": [146, 392], "clavgsal": [146, 392], "cgrant_1": [146, 392], "chrsemp": [146, 392], "314": [146, 710], "290": [146, 710], "450000e": 146, "500000": 146, "415708": 146, "885350": 146, "903448": 146, "679815e": 146, "18326": 146, "284644": 146, "500798": 146, "4025": 146, "063452": 146, "843101": 146, "977975e": 146, "6507": 146, "584305": 146, "410032": [146, 392], "100000e": 146, "4237": [146, 147, 710], "410604": 146, "527000e": 146, "13664": 146, "418084": 146, "900000e": 146, "17160": 146, "419309": 146, "000000e": 146, "22000": 146, "419486": [146, 392], "500": [146, 394, 764, 775, 790], "700000e": 146, "40563": 146, "108": [146, 710], "276": 146, "199722": 146, "883537": 146, "648551": 146, "197452": 146, "114650": 146, "188094": 146, "145294": 146, "45": [146, 393, 399], "694834": 146, "398712": 146, "319107": 146, "010000": 146, "767500": 146, "332500": 146, "555000": 146, "267500": 146, "250000": 146, "54": [146, 393, 394, 712], "144": [146, 399], "119": [146, 710], "168993": 146, "096876": 146, "128995": 146, "754753": 146, "589774": 146, "251180": 146, "489422": 146, "353818": 146, "502170": 146, "411099": 146, "982874": 146, "351611": 146, "350983": 146, "031946": 146, "023286": 146, "522509": 146, "115118": 146, "064538": 146, "116219": 146, "750337": 146, "092537": 146, "182321": 146, "215391": 146, "998797": 146, "397895": 146, "673976": 146, "896701": 146, "610610": 146, "clhrsemp": [146, 392], "131": [146, 392, 710], "058601": 146, "423050": 146, "642580": 146, "074255": 146, "301290": 146, "235229": 146, "080411": 146, "753490": 146, "338574": 146, "020135": 146, "057159": 146, "272727": 146, "039375": 146, "086255": 146, "063067": 146, "568912": 146, "027800": 146, "394449": 146, "delta": [146, 149, 329, 357, 390, 398, 499, 714], "812321": 146, "377778": 146, "817556": 146, "185697": 146, "523825": 146, "490310": 146, "496392": 146, "626858": 146, "850180": 146, "502169": 146, "355820": 146, "846154": 146, "110000": 146, "167054": 146, "333330": 146, "090000": 146, "054067": 146, "35": 146, "3408": 146, "3255": 146, "266": 146, "5806": 146, "1139": 146, "5076": 146, "6117": 146, "5225": 146, "6837": 146, "437": 146, "0662": 146, "8235": 146, "507": 146, "367": 146, "cleaner": 146, "res_iv": 146, "0159": [146, 710, 712], "3464": 146, "0674": [146, 397], "0327": [146, 393], "1241": 146, "2632": 146, "7924": 146, "2759": 146, "2106": 146, "0077": 146, "8293": 146, "0619": 146, "0401": [146, 393], "9707": 146, "1035": 146, "0208": [146, 393], "7236": 146, "pred_exog": 146, "410523": 146, "016018": 146, "410563": 146, "032668": 146, "410565": 146, "410566": 146, "037845": 146, "410567": 146, "410577": 146, "040453": 146, "410593": 146, "410596": 146, "060975": 146, "410606": 146, "010335": 146, "410626": 146, "011102": 146, "418011": 146, "154386": 146, "418021": 146, "119765": 146, "418035": 146, "293087": 146, "418045": 146, "089281": 146, "418054": 146, "058797": 146, "418065": 146, "202584": 146, "418076": 146, "227847": 146, "418091": 146, "193340": 146, "418097": 146, "067874": 146, "418107": 146, "065849": 146, "418118": 146, "342269": 146, "418125": 146, "339713": 146, "418140": 146, "164922": 146, "418163": 146, "598795": 146, "418168": 146, "418177": 146, "400651": 146, "418237": 146, "117587": 146, "419198": 146, "998414": 146, "419201": 146, "152554": 146, "419242": 146, "469395": 146, "419268": 146, "419272": 146, "084601": 146, "419289": 146, "419297": 146, "248274": 146, "419307": 146, "036528": 146, "419339": 146, "419343": 146, "042576": 146, "419357": 146, "386498": 146, "419378": 146, "434747": 146, "419381": 146, "027988": 146, "419388": 146, "049180": 146, "419409": 146, "249684": 146, "419459": 146, "033183": 146, "419482": [146, 392], "419483": [146, 392], "enhanc": [147, 709], "basi": [147, 394, 712], "context": [147, 392, 489, 497, 505, 515, 524, 532], "mark": [147, 709], "surround": [147, 711, 764, 775, 790], "manner": 147, "join": [147, 710], "x4": 147, "x5": 147, "z1": [147, 764, 775], "z2": [147, 764, 775], "z3": 147, "submodel": 147, "asid": [147, 712], "quickstart": 147, "what": [147, 393], "unlik": [147, 177, 236, 390, 393, 486, 494, 502, 521, 529, 714], "iv_r": 147, "readili": 147, "iv_res2": 147, "ols_r": [147, 149], "0659": 147, "0654": 147, "2004": 147, "7709": 147, "353": 147, "5252": 147, "0873": [147, 712], "8348": 147, "4498": 147, "453": [147, 393], "8892": 147, "1653": 147, "brief": [148, 396], "overview": [148, 396], "introductori": [148, 709], "book": [148, 396], "advanc": 148, "further": 148, "x_": [149, 229, 354, 390, 393, 397, 398, 400, 416, 491, 499, 507, 518, 526, 540, 541, 575, 576, 629, 630, 664, 665, 714, 759, 770, 785], "1i": [149, 354, 390, 714, 745, 753], "beta_1": [149, 712], "2i": [149, 354, 390, 714, 745, 753], "beta_2": [149, 354, 712], "z_": [149, 229, 390, 714, 745, 753, 770], "nu_i": 149, "k_1": 149, "k_2": 149, "neq": [149, 720, 723, 726], "p_2": 149, "project": [149, 264, 329, 347, 357, 390], "p_1": 149, "accept": [149, 393, 450, 764, 775, 790], "0459": 149, "0438": 149, "872": 149, "mon": [149, 399], "mar": 149, "4912": 149, "4692": 149, "5719": [149, 711], "5716": 149, "4108": 149, "6649": 149, "0198": [149, 397], "0485": [149, 393], "8434": 149, "0837": [149, 710], "1974": 149, "fuller": [149, 241, 245, 256], "user": [149, 710, 714], "matric": [149, 390, 747, 751, 757], "homoskedasticweightmatrix": 149, "heteroskedasticweightmatrix": 149, "kernelweightmatrix": 149, "within": [149, 392, 393, 394, 395, 397, 399, 484, 500, 534, 541, 563, 572, 576, 602, 626, 630, 652, 661, 665, 687], "onewayclusteredweightmatrix": 149, "studi": [149, 709], "andrew": [149, 168, 174, 200, 400, 416, 710, 726, 739, 753], "membership": [149, 204, 450, 458, 471, 865], "iq_band": 149, "ineffici": [149, 390, 397], "abov": [149, 712, 714], "tol": [149, 220, 762, 773, 788], "success": 149, "stop": [149, 703], "outer": [149, 220, 392, 773], "initial_weight": [149, 220, 773], "place": [149, 390, 393, 759, 770, 785], "dure": [149, 393], "ninstr": [150, 156, 162, 168, 190, 193, 194, 203, 206, 207, 208, 218, 219, 229, 230, 236, 241, 242, 253, 748, 766], "assign": 150, "ncluster": [150, 716], "xi_": [150, 398, 400, 416], "mathcal": [150, 390, 398, 408, 716], "_g": 150, "_0": [168, 416, 753], "_j": [168, 416, 753], "larger": [174, 220, 509, 536], "involv": 174, "maxlag": [175, 176, 177], "6z_i": 176, "leq": 176, "truncat": 177, "pi": [177, 390], "w_0": 177, "sin": [177, 390], "co": [177, 390, 393, 710], "geq": [177, 390], "var_nam": [178, 450], "convert_dummi": [178, 450], "drop_first": [178, 450, 456], "abstract": [178, 450], "univari": 178, "wrap": 178, "xarrai": [178, 450], "flat": [178, 450], "view": [178, 183, 185, 450, 453, 455, 458, 461, 464, 468, 469, 471, 472, 473, 710, 880, 881, 886], "2d": [178, 183, 392, 458, 471], "ndim": [178, 450], "g_i": [188, 200, 745, 753], "w": [188, 191, 194, 200, 218, 219, 229, 236, 283, 329, 357, 390, 398, 548, 584, 637, 672, 714, 720, 723, 726, 745, 753, 770, 796, 809, 864], "_ig_i": [188, 745], "optimal_bw": [200, 753], "gamma_0": [200, 712], "gamma_j": 200, "nendog": [207, 215, 218, 226, 229, 238, 241, 249, 260, 289, 340, 376, 766], "vcv": [207, 218, 241], "bootstrap": [207, 208, 218, 219, 230, 241, 242, 253], "notnul": [207, 218, 229, 241, 252], "regressand": [208, 219, 230, 236, 242, 253], "scalar": [208, 242, 253, 390], "expos": [208, 219, 230, 242, 253, 398, 490, 498, 506, 516, 525, 533, 876], "facilit": [208, 219, 230, 242, 253, 393, 710], "ivresult": [209, 243, 254], "olsresult": [209, 220, 231, 243, 254, 265], "explicitli": [211, 222, 233, 245, 256, 394, 399, 486, 491, 494, 502, 521, 529], "eval_env": [215, 226, 238, 249, 260, 768, 778, 794], "depth": [215, 226, 238, 249, 260, 489, 497, 505, 515, 524, 532, 768, 778, 794], "suppli": [215, 226, 238, 249, 260, 489, 497, 505, 515, 524, 532, 768, 778, 794], "weight_config": [218, 222, 229, 233, 267, 770, 775, 796], "zw": [218, 714, 720, 723, 726, 770], "criteria": 220, "ivgmmcovari": [220, 231], "ivgmmresult": [220, 231], "most": [229, 390, 392, 393, 397, 398, 486, 494, 500, 502, 507, 511, 521, 529, 710, 714], "circumst": [229, 393, 713], "min_": [229, 390, 714], "y_": [229, 390, 393, 397, 398, 491, 499, 507, 518, 526, 540, 541, 575, 576, 629, 630, 664, 665, 714, 759, 770, 785, 820, 854], "target": [236, 780, 781, 782], "long": [236, 398, 710, 714, 797, 810, 832, 844], "tradit": 236, "explicit": [236, 390], "unmodifi": [241, 245, 256], "m_": [241, 347, 390], "p_": [241, 329, 357, 390, 714], "part": [241, 394], "n_": [241, 268, 283, 318, 319, 320, 347, 353, 357, 390, 398, 809], "neeed": 252, "linear_model": [252, 708], "diagnost": [263, 714], "post": [263, 264], "otherwis": [264, 711, 882], "pval": [264, 866, 871], "dist": 264, "respect": [264, 305, 389, 398, 511, 612, 698, 824, 858], "weight_matrix": 267, "quantiti": [268, 393, 397], "j_e": 268, "w_e": 268, "wlog": 268, "denot": [268, 491, 714, 759, 770, 785], "j_c": 268, "whose": [268, 393], "firststageresult": [278, 331], "diagnos": [278, 331], "hypothes": [283, 318, 319, 320, 347, 353], "suffici": [283, 318, 320, 809], "sqrt": [283, 390, 398, 710, 714, 809], "filter": [289, 340, 376, 556, 594, 645, 680, 816, 850], "star": [305, 389, 612, 698], "descript": [305, 306, 612, 613, 764, 775, 790], "estimator_method": [305, 612], "anderson_rubin": 317, "anderson": [317, 318, 390], "rubin": [317, 318, 390], "basmann": [317, 320, 390], "basmann_f": 317, "sargan": [317, 319, 390], "ln": [318, 390, 710, 712, 714], "onto": [329, 357], "_e": [329, 357], "_c": [329, 357], "var": [329, 357, 450, 452, 463, 710, 714], "leav": [329, 357, 390, 710], "annihil": [347, 390], "gamma_1": [353, 355, 712], "gamma_q": 353, "_1": 355, "gamma_p": 355, "x_j": 355, "2002": [355, 709, 710, 711, 712], "eq": [355, 710], "_ol": 358, "ivmodelcomparison": 389, "recov": 390, "k_": 390, "written": 390, "underset": 390, "textrm": [390, 398], "underbrac": 390, "gamma_": [390, 398], "u_": 390, "compactli": [390, 759, 770, 785], "implicit": [390, 483, 487, 491, 495, 499, 503, 507, 512, 518, 522, 526, 530], "partit": 390, "mathrm": [390, 714], "eig": 390, "eigenvalu": 390, "zwz": 390, "let": 390, "rss": 390, "mss": 390, "tss": 390, "unless": 390, "dot": [390, 714, 759, 770, 785], "asymptot": [390, 397, 714, 797, 810, 832, 844, 863, 864], "xi": [390, 400, 416, 714], "member": [390, 397, 710], "rescal": 390, "e_": 390, "h_": 390, "pr": 390, "phi": 390, "2t_": 390, "t_": [390, 398], "cdot": 390, "cdf": 390, "ci_": 390, "pm": 390, "q_": 390, "quantil": 390, "critic": [390, 871, 872], "wsw": 390, "collaps": 390, "replac": [390, 398, 400, 416, 434, 442, 714], "notabl": [390, 399], "overlin": 390, "nu": 390, "minu": [390, 544, 579, 633, 668], "magnitud": 390, "Then": [390, 398], "nr": [390, 393, 397, 570, 610, 659, 696], "andersen": 390, "basman": 390, "haussman": 390, "wh": 390, "k1": 390, "k2": [390, 714], "j_": 390, "ensur": [390, 486, 494, 502, 507, 511, 518, 521, 529, 710, 711, 713], "r2": [390, 710, 796, 820, 824, 831, 854, 858], "under": [390, 397, 547, 582, 583, 636, 671], "unexplain": 390, "On": [390, 398], "wors": 390, "w_": [390, 398], "6z_": 390, "leq0": 390, "5m": 390, "geq1": 390, "todo": [390, 710], "execut": [390, 404, 412, 420, 430, 438, 446, 796, 808, 831, 843], "minimum": 390, "reparameter": 390, "somewhat": [390, 397], "obviou": 390, "driven": 390, "baltagi": [390, 398, 709], "baumet": [390, 709], "camet": [390, 709], "camtri05": [390, 709], "camtri09": [390, 709], "green": [390, 709, 710, 714, 797, 810, 832, 844], "newwes94": [390, 709], "wool10": [390, 709], "wool12": [390, 709], "primari": 392, "3d": 392, "job": 392, "47000000": 392, "35000": 392, "43000000": 392, "37000": 392, "49000000": 392, "39000": 392, "410440": 392, "1560000": 392, "10500": 392, "1970000": 392, "11000": 392, "463100": 392, "270027": 392, "088949": 392, "518670": 392, "063013": 392, "130621": 392, "571320": 392, "259130": 392, "080043": 392, "233347": 392, "305651": 392, "055570": 392, "946565": 392, "165385": 392, "052644": 392, "198597": 392, "047832": 392, "046520": 392, "mi_data": 392, "referenc": 392, "represent": [392, 397, 454], "0528": [392, 710], "0379": 392, "140": [392, 710], "overal": [392, 393, 394, 397, 399, 534, 540, 562, 572, 575, 601, 626, 629, 651, 661, 664, 686, 710, 711, 712, 713, 820, 824, 854, 858], "90": [392, 710, 712], "459": [392, 393], "0751": 392, "0267": [392, 399], "avg": [392, 393, 394, 397, 399], "ob": [392, 393, 394, 397, 398, 399], "9167": 392, "0054": [392, 399, 710], "2528": 392, "poolabl": [392, 393, 394, 397, 399], "094": 392, "runner": 392, "py": 392, "1185": 392, "missingvaluewarn": 392, "super": 392, "__init__": 392, "check_rank": [392, 483, 486, 491, 494, 499, 502, 507, 511, 518, 521, 526, 529], "np_data": 392, "asarrai": 392, "np_lscrap": 392, "get_loc": 392, "np_hrsemp": 392, "nentiti": [392, 450, 706], "ntime": [392, 706], "reshap": 392, "entrant": 392, "schedul": 392, "futur": 392, "remain": [392, 398], "viabl": 392, "notat": [392, 394, 710], "principl": 392, "da": 392, "to_xarrai": 392, "keysview": [392, 881], "coordin": 392, "int64": [392, 393, 399], "410495": 392, "410500": 392, "08895": 392, "1306": 392, "1942": [392, 393], "1525": 392, "259": [392, 710], "68": [392, 393], "741": [392, 712], "798": 392, "05557": 392, "05264": 392, "06063": 392, "05716": 392, "947": 392, "1986": [392, 393], "101": [392, 710], "165": [392, 399], "04783": 392, "611": 392, "you": 392, "manual": [392, 709, 710], "year_str": 392, "reset_index": [392, 399], "year_cat": 392, "053435": 392, "252033": 392, "1985": [392, 393], "1240": 392, "3496": 392, "1591": 392, "1146": 392, "3888": 392, "1684": 392, "3868": 392, "0685": [392, 710], "4620": [392, 393], "1176": [392, 710], "9297": 392, "6957": 392, "2284": 392, "649": 392, "vella": [393, 710, 711], "verbeek": 393, "1998": 393, "dynam": 393, "young": 393, "men": [393, 397], "183": [393, 712], "1980": 393, "multiindex": [393, 394, 399, 450, 461, 475], "understood": 393, "wage_panel": [393, 397, 570, 610, 659, 696], "occup": 393, "2672": 393, "197540": 393, "1981": 393, "2320": 393, "853060": 393, "1982": 393, "2940": [393, 712], "344462": 393, "1983": 393, "2960": 393, "433213": 393, "1984": 393, "3071": 393, "568125": 393, "plain": 393, "understand": 393, "exog_var": [393, 570, 610, 659, 696], "pooled_r": [393, 710], "1893": 393, "2066": 393, "4360": [393, 397], "1692": 393, "2982": 393, "72": [393, 394, 399, 710], "545": [393, 397], "4345": 393, "0921": 393, "0783": 393, "1761": 393, "2396": 393, "2455": 393, "1392": 393, "0236": 393, "9049": 393, "1855": 393, "0930": 393, "0160": [393, 710], "7703": 393, "4412": 393, "0248": [393, 710], "0568": 393, "0672": 393, "9095": 393, "0404": 393, "0941": 393, "9413": [393, 710], "0157": 393, "8997": 393, "0775": [393, 710], "1390": 393, "0052": [393, 710], "442": 393, "0811": [393, 710], "1016": 393, "1825": [393, 394], "0172": [393, 710], "635": 393, "1488": 393, "2161": 393, "0583": 393, "0304": 393, "9214": 393, "0548": [393, 710], "1178": [393, 710], "0628": 393, "0332": 393, "8900": 393, "0588": 393, "0620": 393, "0367": 393, "6915": 393, "0099": [393, 710], "1339": 393, "0905": 393, "2566": 393, "1691": 393, "1092": 393, "0434": 393, "5200": 393, "0118": 393, "1420": 393, "0464": 393, "0580": 393, "2330": 393, "0494": [393, 710], "5165": 393, "0769": 393, "2707": 393, "consid": [393, 712, 713, 714], "quasi": [393, 397, 398], "re_r": 393, "1806": 393, "1853": 393, "1799": 393, "1828": 393, "1622": 393, "409": 393, "0234": 393, "1514": [393, 711], "1546": 393, "8771": 393, "2735": 393, "3203": 393, "1394": 393, "0480": 393, "9054": [393, 399], "0453": [393, 710], "5078": 393, "6116": 393, "0622": 393, "1058": 393, "0154": 393, "0756": 393, "1361": 393, "0047": 393, "8623": [393, 712], "0061": [393, 711], "0638": 393, "0168": 393, "8035": 393, "0309": [393, 710], "0967": [393, 712], "0919": [393, 710], "0107": 393, "5744": 393, "1129": 393, "1059": 393, "9289": 393, "1409": [393, 710], "6362": 393, "1019": 393, "0889": 393, "0324": 393, "9519": 393, "3412": 393, "0944": 393, "0202": 393, "0417": 393, "4840": 393, "6284": 393, "0616": 393, "1020": [393, 710], "0430": 393, "0515": 393, "8350": 393, "4037": 393, "1440": 393, "0577": [393, 710], "0615": 393, "9383": 393, "3482": 393, "0629": 393, "1782": 393, "2834": 393, "1994": [393, 398, 709], "2321": [393, 710], "1348": 393, "0817": 393, "6504": 393, "0989": 393, "0253": 393, "2950": [393, 710], "trend": 393, "matter": 393, "access": [393, 710], "variance_decomposit": [393, 572, 661], "106946": 393, "123324": 393, "percent": 393, "464438": 393, "decomposit": [393, 572, 609, 661, 695], "theta_i": 393, "unbalanc": [393, 398, 484], "balanc": [393, 484], "645059": 393, "110": 393, "broadli": 393, "be_r": 393, "2155": [393, 711], "1141": 393, "1686": 393, "194": 393, "633": 393, "538": 393, "2836": 393, "1784": [393, 711], "5897": 393, "1125": 393, "0668": 393, "6340": 393, "1414": 393, "0489": 393, "8915": 393, "2375": 393, "2355": 393, "0737": 393, "0938": 393, "4538": 393, "0501": 393, "0412": 393, "4346": 393, "0606": [393, 710], "2226": 393, "5159": 393, "0702": 393, "1123": 393, "2587": 393, "0460": 393, "6214": 393, "1683": 393, "3491": 393, "reweight": [393, 398, 484], "BE": 393, "consider": 393, "slower": 393, "wise": [393, 398, 539, 541, 574, 576, 628, 630, 663, 665], "incorpor": 393, "fe_r": [393, 570, 610, 659, 696], "0807": 393, "1324": [393, 394, 399], "851": 393, "3805": [393, 711], "4260": 393, "0183": 393, "748": 393, "3901": 393, "3612": 393, "0800": 393, "0193": 393, "1430": [393, 397, 712], "0467": 393, "5494": 393, "0108": [393, 710, 711], "0826": 393, "1512": 393, "0219": [393, 394], "8883": 393, "1082": [393, 710], "2530": 393, "0244": 393, "360": 393, "2051": 393, "3008": 393, "3544": 393, "121": 393, "2971": 393, "4118": 393, "4901": 393, "529": [393, 712], "4191": 393, "5611": 393, "6175": 393, "0452": [393, 710], "648": 393, "5288": 393, "7062": 393, "7655": 393, "0561": 393, "6555": 393, "8755": 393, "9250": 393, "0688": 393, "450": 393, "7902": 393, "0599": 393, "1568": 393, "544": [393, 397], "wherea": 393, "fe_te_r": 393, "0216": [393, 711], "4809": 393, "2253": 393, "0378": 393, "49": [393, 394, 399], "430": 393, "7964": 393, "9448": 393, "551": 393, "use_lsdv": [393, 509], "auto_df": [393, 395, 509], "instruct": 393, "treatment": [393, 509], "lost": 393, "count_effect": [393, 395, 509], "other_effect": [393, 507, 511, 699, 706], "engog": 393, "below": [393, 398, 710], "we": 393, "reproduc": 393, "paneldata": [393, 486, 490, 494, 498, 502, 506, 511, 516, 521, 525, 529, 533], "time_id": [393, 400, 408, 416, 434, 442, 450], "fe_oe_r": 393, "addition": [393, 507], "look": [393, 710], "soak": 393, "challeng": 393, "fd_re": 393, "0268": 393, "5491": 393, "3815": 393, "5328": 393, "2305": 393, "208": 393, "3811": 393, "0196": 393, "9096": 393, "0773": 393, "1542": 393, "8005": 393, "0197": 393, "1767": 393, "0296": 393, "0813": 393, "0229": 393, "6633": 393, "0963": [393, 710], "certain": [393, 759, 785], "cluster_ent": [393, 500, 509, 511, 519, 527], "cluster_tim": [393, 509, 519, 527], "clust_ent": 393, "clust_entity_tim": 393, "board": 393, "suggest": [393, 714], "decreas": 393, "address": [393, 397], "1866": 393, "1679": 393, "2027": 393, "142": 393, "0347": 393, "5360": 393, "2892": 393, "3145": 393, "1438": 393, "9045": 393, "8727": 393, "7952": 393, "4008": 393, "4428": 393, "0892": 393, "7881": 393, "1728": 393, "3223": 393, "1934": 393, "2747": 393, "1571": 393, "1077": [393, 710], "0525": [393, 710], "8989": 393, "0994": 393, "626": 393, "802": 393, "296": 393, "1801": 393, "087": 393, "5343": [393, 710], "6732": 393, "reliabl": 393, "theori": [393, 397], "value_count": 393, "881": [393, 394], "509": [393, 394], "486": 393, "401": 393, "399": [393, 712], "233": [393, 710], "2989": 393, "4352": 393, "116": 393, "1479": 393, "2346": 393, "8145": 393, "3247": 393, "2553": 393, "0297": [393, 394], "8469": [393, 710], "2020": 393, "0857": [393, 710], "0266": [393, 710, 712], "5892": 393, "5557": 393, "0679": [393, 710], "6513": 393, "1155": 393, "2442": 393, "0139": [393, 710], "7322": 393, "0804": [393, 710], "1350": 393, "8846": 393, "1213": 393, "6323": 393, "1174": 393, "2428": 393, "caveat": 394, "grunfeld": [394, 399], "corpor": 394, "illustr": [394, 710], "stock": 394, "capit": [394, 399, 710], "load_panda": [394, 399], "motor": [394, 399], "1935": 394, "317": 394, "3078": 394, "1936": 394, "391": 394, "4661": [394, 710], "1937": 394, "410": 394, "5387": [394, 710], "156": 394, "1938": 394, "257": 394, "2792": 394, "209": 394, "1939": 394, "330": [394, 710], "4313": 394, "203": 394, "entityeffect": [394, 397, 511], "impos": [394, 398, 710, 713, 780], "grand": [394, 398], "7667": [394, 399], "8223": [394, 399, 710], "220": [394, 399, 713], "8132": [394, 399], "1167": [394, 399], "340": [394, 399, 710], "207": [394, 399], "3100": [394, 399], "0165": [394, 399], "744": [394, 399], "2774": [394, 399], "3426": [394, 399], "1101": [394, 399, 710], "7461": [394, 399], "0879": [394, 399], "8193": 394, "8071": 394, "272": 394, "891": 394, "0750": [394, 711], "743": 394, "800": 394, "timeeffect": [394, 511], "7253": 394, "7944": 394, "7566": 394, "7856": 394, "1153": 394, "248": 394, "188": 394, "394": 394, "732": [394, 712], "6861": 394, "97": [394, 399], "278": 394, "3514": 394, "0210": [394, 711], "696": 394, "3099": 394, "3930": 394, "0912": 394, "1422": 394, "476": 394, "straight": 394, "forward": 394, "8644": 394, "4195": 394, "7616": 394, "997": [394, 710, 712], "3825": 394, "444": 394, "8597": 394, "85": [394, 712], "1746": [394, 710], "8692": 394, "3730": 394, "4323": 394, "0269": 394, "0726": 394, "4287": 394, "8643": 394, "7539": [394, 712], "8461": 394, "1071": 394, "679": 394, "2786": 394, "1900": 394, "3673": 394, "0891": 394, "348": [394, 710], "0736": 394, "1045": 394, "8179": 394, "8426": 394, "7357": 394, "1301": 394, "487": 394, "4134": [394, 710], "5654": 394, "992": 394, "828": 394, "2275": 394, "0242": 394, "3904": [394, 711], "1145": 394, "753": 394, "1037": 394, "1254": [394, 713], "detect": 395, "design": [395, 397, 398], "affin": 395, "aggreg": [395, 710], "plm": [396, 399], "analysi": [396, 399, 709, 710, 797, 810, 832, 844], "countri": [397, 711], "diverg": 397, "setup": 397, "techniqu": 397, "presenc": 397, "man": 397, "1365": 397, "wed": 397, "0270": 397, "1439": 397, "200": [397, 710], "3812": 397, "3953": 397, "113": 397, "3712": 397, "4194": 397, "560": 397, "0041": 397, "1073": 397, "0182": 397, "8992": 397, "0717": [397, 710], "0828": 397, "1864": 397, "0440": 397, "1215": 397, "3360": 397, "nt": 398, "want": 398, "lsdv": [398, 399, 509], "d_": 398, "multipli": 398, "theta_": 398, "approx1": 398, "approx0": 398, "rss_": [398, 582], "propto": 398, "imbalanc": 398, "root": [398, 454], "xx": [398, 400, 408, 416, 434, 442], "ti": 398, "ii": [398, 714, 824, 858], "belong": 398, "agre": 398, "prefix": 398, "texttt": 398, "_squar": 398, "iw": 398, "ddot": [398, 714, 759, 770, 785], "reflect": 398, "rho_": 398, "deviat": 398, "o": 398, "liner": 399, "quickli": 399, "slow": 399, "moder": 399, "nor": 399, "them": [399, 710], "rsquared_inclus": [399, 572], "inconsist": 399, "canon": 399, "etdata": 399, "838": 399, "paneleffectsresult": [399, 509], "0x2aeec70b7f0": 399, "tedata": 399, "quit": 399, "fe_b": 399, "atlant": 399, "refin": 399, "chrysler": 399, "diamond": 399, "electr": 399, "goodyear": 399, "ibm": 399, "steel": 399, "oil": 399, "westinghous": 399, "9461": 399, "9429": 399, "rmse": 399, "2995": 399, "302": 399, "6388": 399, "coef": 399, "0880": 399, "1323": 399, "2776": [399, 710, 712], "3425": 399, "94": 399, "1637": 399, "127": 399, "6652": 399, "60": [399, 712], "3834": 399, "3382": 399, "6771": 399, "2138": 399, "7520": 399, "9436": 399, "88": [399, 712], "3806": 399, "2393": 399, "4613": 399, "264": [399, 710], "8953": 399, "0871": [399, 711, 712], "7209": 399, "2801": 399, "3043": 399, "9080": 399, "66": [399, 712], "6363": [399, 710], "3788": 399, "98": 399, "7389": 399, "5338": 399, "5820": 399, "3792": 399, "8749": 399, "6852": 399, "5212": 399, "122": [399, 712], "4829": 399, "9595": 399, "6023": 399, "173": [399, 710], "3636": 399, "9660": 399, "3575": 399, "81": [399, 710], "9683": 399, "3092": 399, "0339": 399, "8942": 399, "0424": 399, "5782": 399, "2978": 399, "7219": 399, "5655": [399, 710], "entity_id": [400, 408, 416, 434, 442, 450], "extra_df": [400, 408, 416, 434, 442], "consum": [400, 408, 416, 434, 442], "irrespect": [400, 408, 416, 434, 442], "xi_t": [400, 416], "s_i": 400, "ij": [400, 710, 714, 770, 797, 820, 832, 854], "i0": 400, "group_debia": [408, 409, 716], "roger": [408, 762, 788], "intersect": 408, "driscol": [416, 500, 509, 519, 527], "kraai": [416, 500, 509, 519, 527], "n_t": 416, "_t": [416, 491], "disabl": 424, "cast": 450, "typeerror": 450, "valueerror": [450, 703], "wrong": 450, "values2d": 450, "values3d": 450, "deep": 451, "return_panel": 454, "low_memori": [454, 509], "boolean": [455, 500, 509, 519, 527], "hashabl": [457, 470, 474], "groupbi": [460, 710], "_panel": 468, "mi": [475, 710], "legaci": 475, "shim": 475, "logic": 475, "major_axi": [475, 476], "minor_axi": [475, 476], "proport": [483, 486, 491, 494, 499, 502, 507, 511, 518, 521, 526, 529, 710, 711], "not_nul": [483, 491, 499, 507, 518, 526], "coerc": [484, 486, 494, 500, 502, 509, 511, 519, 521, 527, 529], "conform": [486, 494, 502, 511, 521, 529], "numer": [486, 494, 502, 507, 511, 518, 521, 529, 871], "unstabl": [486, 494, 502, 507, 511, 518, 521, 529], "full": [486, 494, 502, 507, 511, 518, 521, 529, 536, 537, 710, 714, 781], "generate_panel_data": [486, 494, 502, 511, 521, 529], "panel_data": [486, 494, 502, 511, 521, 529], "reformat": [490, 498, 506, 516, 525, 533], "made": [491, 548, 584, 637, 672, 712], "scenario": 500, "gamma_t": 507, "gamma_i": 507, "arbitrari": [507, 710, 714, 745], "u_i": 526, "small_sampl": 527, "randomeffectsresult": 527, "entity_info": [534, 572, 626, 661], "estimated_effect": [534, 572, 626, 661], "f_statistic_robust": [534, 572, 626, 661], "loglik": [534, 572, 626, 661], "rsquared_between": [534, 572, 612, 626, 661], "rsquared_overal": [534, 572, 612, 626, 661], "rsquared_within": [534, 572, 612, 626, 661], "time_info": [534, 572, 626, 661], "plu": [543, 578, 632, 667], "fill": [546, 581, 635, 670], "rss_r": [547, 583, 636, 671], "rss_u": [547, 583, 636, 671], "df_u": [547, 583, 636, 671], "unrestrict": [547, 583, 636, 671, 714], "f_pool": 572, "included_effect": 572, "other_info": 572, "df_": 582, "panelmodelcomparison": 698, "namedtupl": [699, 706], "alia": [699, 700, 702, 704, 705], "field": [699, 700, 702, 704, 705], "occurr": 701, "sy": 703, "maxsiz": 703, "971": 706, "rng": 706, "explanatori": 706, "sequenc": 706, "seed": 706, "panelmodeldata": 706, "deriv": 706, "intention": 708, "intent": 708, "multivari": [708, 766, 792], "badi": 709, "wilei": 709, "son": 709, "2008": 709, "svetlana": 709, "spuriou": 709, "paper": 709, "baum": 709, "christoph": 709, "schaffer": 709, "steven": 709, "stillman": 709, "routin": 709, "2007": 709, "465": 709, "506": 709, "colin": 709, "jonah": 709, "gelbach": 709, "dougla": 709, "miller": 709, "multiwai": 709, "2011": 709, "238": 709, "249": 709, "pravin": 709, "cambridg": 709, "2005": 709, "adrian": 709, "vol": 709, "station": 709, "tx": [709, 710], "2009": 709, "revis": 709, "edit": [709, 710], "princeton": 709, "william": [709, 797, 810, 832, 844], "pearson": [709, 797, 810, 832, 844], "2003": [709, 797, 810, 832, 844], "henningsen": [709, 714], "hamann": 709, "systemfit": 709, "softwar": 709, "doi": 709, "dx": 709, "org": 709, "18637": 709, "jss": 709, "v023": 709, "i04": 709, "jagannathan": 709, "ravi": 709, "georgio": 709, "skoulaki": 709, "zhenyu": 709, "wang": 709, "470": 709, "481": 709, "whitnei": 709, "kenneth": 709, "631": 709, "statacorp": 709, "2013": 709, "mit": 709, "2010": [709, 710], "modern": 709, "western": 709, "pub": 709, "2012": 709, "compris": 710, "omega": [710, 714, 716, 720, 723, 726, 731, 735, 739, 759, 785, 824, 858], "epsilon_j": 710, "benefici": 710, "munnel": 710, "gdp": [710, 711], "unemploy": 710, "gf": 710, "al": 710, "fl": 710, "la": 710, "mw": 710, "il": 710, "IN": 710, "ky": 710, "mn": 710, "oh": 710, "wi": 710, "ma": 710, "de": 710, "md": 710, "nj": 710, "ny": 710, "pa": 710, "va": 710, "mt": 710, "nd": 710, "sd": 710, "wy": 710, "ne": 710, "ct": 710, "me": 710, "nh": 710, "ri": 710, "vt": 710, "ga": 710, "nc": 710, "sc": 710, "tn": 710, "wv": 710, "sw": 710, "az": 710, "nv": 710, "nm": 710, "ut": 710, "cn": 710, "ak": 710, "ia": 710, "mo": 710, "ok": 710, "wc": 710, "ca": 710, "OR": 710, "def": 710, "map_region": 710, "st_abb": 710, "map": 710, "total_emp": 710, "emp_shar": 710, "weighed_unemp": 710, "unemp": 710, "agg_data": 710, "gsp": 710, "pc": 710, "hwy": 710, "water": 710, "complex": 710, "ordereddictionari": 710, "mod_data": 710, "region_data": 710, "lngsp": 710, "lnpc": 710, "lnhwy": 710, "lnwater": 710, "lnutil": 710, "lnemp": 710, "gain": [710, 713, 714, 797, 810, 832, 844], "inspect": 710, "diag": 710, "pyplot": 710, "plt": 710, "vmax": 710, "style": 710, "3f": 710, "nbsp": 710, "447": 710, "547": 710, "525": 710, "425": 710, "763": 710, "167": 710, "325": 710, "697": 710, "489": 710, "132": 710, "565": 710, "537": 710, "343": 710, "130": 710, "505": 710, "574": 710, "037": 710, "241": 710, "322": 710, "351": 710, "058": 710, "091": 710, "783": 710, "269": 710, "388": 710, "713": 710, "366": 710, "350": 710, "298": 710, "seen": 710, "ipython": 710, "imag": 710, "display_png": 710, "system_correct": 710, "png": 710, "as_text": 710, "split": 710, "9937": 710, "9988": 710, "judg": [710, 711, 712, 820, 824, 854, 858], "dhryme": [710, 711, 712, 824, 858], "num": [710, 711, 712, 713], "310": 710, "4680": 710, "723": 710, "1424": 710, "4117": 710, "1580": 710, "4800": 710, "0780": 710, "8856": 710, "5169": 710, "6480": 710, "8987": 710, "8725": 710, "1785": 710, "0607": 710, "9399": 710, "0595": [710, 712], "2975": 710, "1898": 710, "3744": 710, "1774": 710, "4559": 710, "9237": 710, "9533": 710, "0847": 710, "252": 710, "1193": [710, 712], "5007": 710, "1334": 710, "0072": 710, "9979": 710, "1273": 710, "0389": 710, "0766": [710, 711], "0858": 710, "8929": 710, "3719": 710, "0916": 710, "2449": 710, "1312": 710, "0258": 710, "3050": 710, "3819": 710, "1195": 710, "0611": [710, 712], "2240": 710, "0261": 710, "2558": 710, "0161": 710, "5216": 710, "1107": 710, "7102": 710, "3045": 710, "7386": 710, "3439": 710, "3723": 710, "7051": 710, "0156": 710, "equation_label": [710, 711, 796, 831], "coast": 710, "9900": 710, "2862": 710, "9602": 710, "5675": 710, "5704": 710, "8100": 710, "7303": 710, "1699": 710, "8500": 710, "0643": 710, "3500": 710, "1317": 710, "1138": 710, "1569": 710, "3547": [710, 711], "3470": 710, "1733": 710, "0020": [710, 712], "6867": 710, "0895": 710, "1928": 710, "8471": 710, "8204": 710, "0696": 710, "1708": 710, "7349": 710, "4043": 710, "4180": 710, "append": 710, "886": 710, "178": 710, "190": 710, "953": 710, "003": 710, "083": 710, "077": 710, "136": [710, 712], "522": 710, "539": 710, "016": 710, "960": 710, "170": [710, 712], "347": 710, "090": 710, "070": 710, "006": 710, "463": 710, "115": 710, "180": 710, "262": 710, "079": 710, "001": 710, "294": 710, "118": [710, 712], "557": 710, "494": 710, "020": 710, "616": [710, 711, 712, 713], "311": 710, "060": 710, "659": 710, "018": 710, "162": 710, "063": 710, "641": 710, "081": 710, "281": 710, "620": 710, "008": 710, "096": 710, "612": 710, "694": 710, "062": 710, "031": 710, "405": 710, "295": 710, "321": 710, "029": 710, "stronger": 710, "violat": 710, "seem": 710, "567": 710, "002": 710, "358": 710, "805": 710, "007": 710, "028": 710, "164": 710, "075": 710, "169": [710, 712], "637": 710, "362": 710, "017": 710, "998": 710, "590": 710, "174": 710, "226": 710, "917": 710, "994": 710, "378": 710, "153": 710, "306": 710, "533": 710, "344": 710, "999": 710, "969": [710, 712], "380": 710, "855": 710, "778": 710, "673": 710, "026": 710, "986": 710, "927": 710, "043": 710, "773": 710, "111": [710, 712], "604": 710, "717": 710, "356": 710, "621": 710, "386": 710, "546": 710, "475": 710, "995": 710, "se": 710, "002124": 710, "301235": 710, "200966": 710, "142355": 710, "163546": 710, "165995": 710, "076637": 710, "085831": 710, "294855": 710, "205417": 710, "169950": 710, "091865": 710, "152601": 710, "084031": 710, "114834": 710, "048489": 710, "020407": 710, "285621": 710, "118316": 710, "131329": 710, "377570": 710, "167307": 710, "310861": 710, "080893": 710, "042818": 710, "279472": 710, "063212": 710, "104344": 710, "233403": 710, "206248": 710, "095886": 710, "101564": 710, "385885": 710, "211083": 710, "294570": 710, "090104": 710, "fring": [710, 711, 713], "benefit": [710, 711, 713], "censor": [710, 711], "fdata": 710, "441": 710, "457": 710, "annearn": 710, "hrearn": [710, 711, 713], "nrtheast": [710, 711], "northeast": 710, "nrthcen": [710, 711], "north": 710, "central": 710, "offic": 710, "annhr": 710, "ind1": 710, "ind2": 710, "ind3": 710, "ind4": 710, "ind5": 710, "ind6": 710, "ind7": 710, "ind8": 710, "ind9": 710, "vacdai": 710, "vac": 710, "sicklv": 710, "sick": 710, "pension": 710, "annben": 710, "hrben": [710, 711, 713], "annhrssq": 710, "beratio": 710, "lannhr": 710, "tenuresq": 710, "lannearn": 710, "peratio": 710, "vserat": 710, "bring": 710, "fmod_data": 710, "fmod": 710, "2087": 710, "2926": 710, "4822": 710, "6321": 710, "2153": 710, "1658": 710, "2502": 710, "4588": 710, "0684": 710, "7085": 710, "3248": 710, "5929": 710, "0758": 710, "0567": 710, "3367": 710, "1813": 710, "1870": 710, "4274": 710, "0829": 710, "3276": 710, "1843": 710, "5640": 710, "8080": 710, "4035": 710, "0026": 710, "5988": 710, "4566": 710, "5459": 710, "8365": 710, "4029": 710, "5265": 710, "6132": 710, "1508": 710, "5993": 710, "9201": 710, "0239": 710, "5501": 710, "1565": 710, "2475": [710, 712], "7145": 710, "6424": 710, "5540": 710, "1202": [710, 712], "1678": 710, "4526": 710, "6054": 710, "8844": 710, "0458": 710, "3275": 710, "7847": 710, "3938": 710, "5322": 710, "5565": 710, "8897": 710, "1453": 710, "1225": 710, "6049": 710, "0768": 710, "0082": 710, "3896": 710, "0608": 710, "3259": 710, "0093": [710, 712], "3965": 710, "0536": 710, "4011": 710, "0730": 710, "3659": 710, "0482": 710, "5839": 710, "2713": 710, "4605": 710, "0227": 710, "0653": 710, "3476": 710, "7282": 710, "1506": 710, "1052": 710, "7918": 710, "4285": 710, "1972": 710, "0380": 710, "5776": 710, "5635": 710, "1669": 710, "0909": 710, "0579": 710, "2418": 710, "0390": 710, "1547": 710, "0902": 710, "2453": 710, "2130": 710, "0517": 710, "2683": 710, "0471": 710, "6985": 710, "3606": 710, "though": 710, "typic": 710, "exog_earn": 710, "exog_ben": 710, "1685": 710, "2762": 710, "4504": 710, "5240": 710, "3246": 710, "0201": 710, "6520": 710, "3959": 710, "5000": 710, "2987": 710, "3657": 710, "6342": 710, "0212": 710, "0522": 710, "4058": 710, "6849": 710, "1234": 710, "1043": 710, "3928": 710, "8116": 710, "0049": [710, 711], "3345": 710, "8741": 710, "4305": 710, "2411": 710, "2146": 710, "3780": 710, "3095": [710, 712], "1320": 710, "5845": 710, "9368": 710, "8231": 710, "0535": 710, "5927": 710, "0791": 710, "8927": 710, "0948": 710, "9114": 710, "0130": 710, "2409": 710, "6275": 710, "3766": 710, "9259": 710, "2835": 710, "4698": 710, "2141": 710, "0433": 710, "1292": 710, "2990": 710, "via": 710, "fmod_r": 710, "2749": 710, "4532": 710, "5147": 710, "3161": 710, "0206": 710, "6428": 710, "3867": 710, "5001": 710, "3004": 710, "3658": 710, "0211": 710, "4044": 710, "6859": 710, "1233": 710, "8760": 710, "8115": 710, "5314": 710, "2342": 710, "2171": 710, "3752": 710, "3124": 710, "1191": 710, "9145": 710, "0556": 710, "2648": 710, "9947": 710, "0527": 710, "5919": 710, "0792": 710, "9004": 710, "0635": 710, "9213": 710, "8528": 710, "0492": [710, 711], "2189": 710, "0307": 710, "0677": 710, "6025": 710, "3771": 710, "9364": 710, "8627": 710, "1258": 710, "2956": 710, "fres_het": 710, "8703": 710, "9002": 710, "2297": 710, "8183": 710, "0809": 710, "3413": 710, "6586": 710, "2270": 710, "9257": 710, "5507": 710, "5819": 710, "0083": 710, "0148": 710, "2857": 710, "8647": 710, "5443": 710, "6644": 710, "5273": 710, "3110": 710, "5678": 710, "4992": 710, "4921": 710, "3002": 710, "1674": 710, "0966": 710, "6087": 710, "6111": 710, "7768": 710, "0632": 710, "0949": 710, "0376": 710, "4121": 710, "0514": 710, "3342": 710, "2760": 710, "4773": 710, "0397": [710, 712], "3975": 710, "1363": [710, 712], "2918": 710, "hac_r": 710, "0048": [710, 711], "5120": 710, "0120": [710, 712], "4933": 710, "5547": 710, "1391": 710, "3093": 710, "6907": 710, "0925": 710, "9263": 710, "4694": 710, "4270": 710, "5486": 710, "5833": 710, "2637": 710, "5875": 710, "6211": 710, "2657": 710, "4750": 710, "4065": 710, "4813": 710, "3520": 710, "0187": 710, "1887": 710, "0753": 710, "1344": 710, "1228": 710, "0866": [710, 712], "5596": 710, "0976": 710, "0064": 710, "0386": 710, "9026": 710, "5160": 710, "0318": 710, "0669": [710, 711], "9161": 710, "0705": 710, "3407": [710, 713], "2384": 710, "5148": 710, "7117": 710, "1010": 710, "3271": 710, "enter": 710, "983476381": 710, "28390328": 710, "23829810": 710, "random_clust": 710, "51": [710, 712], "clustered_r": 710, "8501": 710, "9692": 710, "1901": 710, "8579": 710, "3424": 710, "6576": 710, "2285": 710, "0926": 710, "9262": 710, "4690": [710, 711], "4267": 710, "5479": 710, "5837": 710, "2696": 710, "5759": 710, "6327": 710, "5181": 710, "0312": [710, 711], "3024": 710, "4812": 710, "4701": 710, "4083": 710, "0533": 710, "6435": 710, "0342": [710, 711], "6121": 710, "8547": 710, "4288": 710, "0145": 710, "0375": 710, "6793": 710, "7036": 710, "2777": 710, "1717": 710, "2737": 710, "4795": 710, "0317": 710, "7496": 710, "1519": 710, "equicorrel": 710, "avg_corr": 710, "ey": 710, "rho": [710, 714, 797, 832], "sigma_pr": 710, "mod_pre_sigma": 710, "res_pr": 710, "9966": 710, "9945": 710, "549": 710, "9753": 710, "8200": 710, "7883": 710, "739": 710, "1011": 710, "2727": 710, "3708": 710, "7185": 710, "5065": 710, "7087": 710, "9882": 710, "9582": 710, "3098": 710, "1134": 710, "6971": 710, "5016": 710, "1736": [710, 712], "3318": 710, "7720": 710, "6685": 710, "5190": 710, "2040": 710, "8494": 710, "1426": 710, "9557": [710, 712], "5316": 710, "1671": 710, "6466": 710, "full_cov": [710, 762, 788], "param_nam": [710, 759, 760, 770, 771, 785, 786], "underscor": 710, "gf_intercept": 710, "gf_lnpc": 710, "gf_lnhwy": 710, "gf_lnwater": 710, "gf_lnutil": 710, "gf_lnemp": 710, "gf_unemp": 710, "sw_intercept": 710, "sw_lnpc": 710, "sw_lnhwy": 710, "sw_lnwater": 710, "sw_lnutil": 710, "sw_lnemp": 710, "sw_unemp": 710, "enforc": [710, 714], "rest": 710, "wc_unemp": 710, "mt_unemp": 710, "ne_unemp": 710, "ma_unemp": 710, "so_unemp": 710, "rest0": 710, "rest1": 710, "rest2": 710, "rest3": 710, "rest4": 710, "rest5": 710, "rest6": 710, "rest7": 710, "mw_unemp": 710, "cn_unemp": 710, "add_constraint": 710, "constrained_r": 710, "005801": 710, "complic": [710, 711], "idea": 710, "singular": [710, 714], "reset_constraint": 710, "9777": 710, "9891": 710, "2732": 710, "2159": 710, "2656": 710, "2057": 710, "6963": 710, "3639": 710, "3238": 710, "4041": 710, "3103": 710, "141": 710, "2557": 710, "3649": 710, "3615": 710, "0591": 710, "0166": 710, "466": 710, "1408": 710, "6142": 710, "752": 710, "6628": 710, "939": 710, "0117": 710, "2869": 710, "2201": 710, "3034": 710, "1924": 710, "7183": 710, "capm": 710, "mv": 710, "mv_ol": 710, "multivariate_l": 710, "mv_ols_r": 710, "6564": 710, "9773": 710, "1608": 710, "2457": 710, "3736": 710, "0403": 710, "2947": 710, "0711": 710, "0276": 710, "879": 710, "0171": 710, "1251": 710, "5142": 710, "0538": 710, "019": 710, "9965": 710, "1111": [710, 711], "8787": 710, "9861": 710, "0126": 710, "376": 710, "9615": 710, "4953": 710, "8472": 710, "0162": [710, 712], "204": [710, 712], "8154": 710, "8790": 710, "5167": 710, "9851": 710, "515": 710, "9337": 710, "0366": 710, "mostli": 711, "6951": 711, "2197": 711, "1873": 711, "3775": 711, "6950": 711, "8605": 711, "0445": 711, "5974": 711, "0228": 711, "0473": [711, 712], "4326": 711, "2518": 711, "0490": 711, "1435": 711, "1559": 711, "3478": 711, "0621": [711, 712], "3074": 711, "2650": 711, "0714": 711, "7132": 711, "0867": 711, "2624": 711, "0176": 711, "1775": 711, "0586": 711, "0289": 711, "2923": 711, "3682": 711, "0474": 711, "4612": 711, "9280": 711, "4247": 711, "5260": 711, "1270": 711, "1714": 711, "0213": 711, "4600": 711, "8899": 711, "8408": 711, "1247": 711, "6551": 711, "4472": 711, "3920": 711, "1410": 711, "2539": 711, "3210": 711, "7127": 711, "4473": 711, "5894": 711, "1640": 711, "braces_formula": 711, "braces_mod": 711, "braces_r": 711, "meaningless": 711, "labeled_formula": 711, "labels_mod": 711, "labeled_r": 711, "unlabel": 711, "foral": 711, "random_weight": 711, "chisquar": 711, "weighted_mod": 711, "6674": 711, "2059": 711, "6672": 711, "4143": 711, "0407": 711, "0427": [711, 712], "6296": 711, "2628": 711, "0448": 711, "8614": 711, "1749": 711, "3507": 711, "0590": 711, "5663": 711, "2671": 711, "0358": 711, "1835": 711, "7410": 711, "3146": [711, 712], "2073": 711, "6769": 711, "3178": 711, "0968": 711, "3753": 711, "0478": 711, "8554": 711, "2817": 711, "3221": 711, "6995": 711, "1515": 711, "4928": 711, "0131": 711, "0698": 711, "9444": 711, "3543": 711, "2763": 711, "7823": 711, "6711": 711, "2769": 711, "1283": 711, "2139": 711, "5574": 711, "3546": 711, "1160": 711, "1376": 711, "2524": 711, "5693": 711, "7978": 711, "4250": 711, "5701": 711, "6617": 711, "eqnarrai": 712, "beta_0": 712, "beta_3": 712, "beta_4": 712, "beta_5": 712, "h_i": 712, "gamma_2": 712, "gamma_3": 712, "gamma_4": 712, "morz": 712, "hours_mod": 712, "hours_r": 712, "1903": 712, "1807": 712, "429": 712, "2770": 712, "0952": 712, "1261": 712, "99": 712, "195": 712, "2666": 712, "96": 712, "2806": 712, "7790": 712, "308": 712, "445": 712, "6787": 712, "7137": 712, "535": 712, "6449": 712, "1626": 712, "472": 712, "4442": 712, "700": 712, "2551": 712, "lwage_mod": 712, "lwage_r": 712, "7582": 712, "7559": 712, "1362": 712, "0875": 712, "3892": 712, "0557": 712, "0299": 712, "7501": 712, "0801": 712, "1110": 712, "4898": 712, "8666": 712, "3862": 712, "system_2sl": 712, "system_2sls_r": 712, "1276": 712, "0961": 712, "7279": 712, "system_3sl": 712, "system_3sls_r": 712, "7778": 712, "651": 712, "5456": 712, "4617": 712, "0138": 712, "7822": 712, "521": 712, "052": 712, "2870": 712, "0222": 712, "716": 712, "1563": 712, "2476": 712, "4136": 712, "4646": 712, "2405": 712, "124": 712, "2969": 712, "1872": 712, "461": 712, "968": 712, "0859": 712, "3864": 712, "0546": 712, "1171": 712, "0550": 712, "0295": [712, 713], "8622": 712, "1128": 712, "0794": 712, "4010": 712, "programmat": 712, "weaker": 712, "condition": [712, 714], "system_gmm": 712, "system_gmm_r": 712, "0121": 712, "7776": 712, "7268": 712, "5440": 712, "4626": 712, "7868": 712, "519": 712, "038": 712, "2876": 712, "1564": 712, "4149": 712, "4631": 712, "1742": 712, "2403": 712, "2925": 712, "3866": 712, "7540": 712, "meaningfulli": 712, "0345": 712, "2256": 712, "0361": 712, "027": 712, "5086": 712, "2864": 712, "768": 712, "508": 712, "0572": 712, "231": 712, "5947": 712, "227": 712, "216": 712, "0493": 712, "197": 712, "2578": 712, "5538": 712, "674": 712, "1587": 712, "1933": 712, "2618": 712, "771": 712, "69": 712, "0999": 712, "0720": 712, "0363": 712, "9840": 712, "8475": 712, "0647": 712, "133e": 712, "2298": 712, "2188": 712, "y_1": [712, 759, 770, 785], "y_2": [712, 759, 770, 785], "x_1": [712, 759, 770, 785], "epsilon_1": 712, "x_2": [712, 759, 770, 785], "substitut": 712, "epsilon_2": 712, "default_rng": 712, "20220224": 712, "50000": 712, "y2": [712, 764, 775, 790], "y1": [712, 764, 775, 790], "in_sampl": 712, "10000": 712, "oo": 712, "9992": 712, "9868": 712, "0116": 712, "9877": 712, "9970": 712, "158": 712, "9847": 712, "9809": 712, "59": 712, "9982": 712, "9637": 712, "40000": 712, "125377": 712, "024812": 712, "40001": 712, "489893": 712, "707565": 712, "40002": 712, "189191": 712, "727702": 712, "40003": 712, "081779": 712, "756181": 712, "40004": 712, "628805": 712, "227368": 712, "49995": 712, "293820": 712, "140007": 712, "49996": 712, "462017": 712, "848988": 712, "49997": 712, "698136": 712, "510755": 712, "49998": 712, "862183": 712, "732983": 712, "49999": 712, "118024": 712, "147715": 712, "y1_pred": 712, "y1_x1": 712, "y1_y2": 712, "y2_pred": 712, "y2_x2": 712, "y2_y1": 712, "pred_df": 712, "own": 713, "entri": [713, 764, 775, 790], "0757": 713, "sat": 713, "jun": 713, "2839": 713, "573": 713, "6161": 713, "9517": 713, "1163": 713, "0186": 713, "2478": 713, "0798": 713, "1528": 713, "9598": 713, "3372": 713, "0862": 713, "6390": 713, "5509": 713, "7270": 713, "5617": 713, "5743": 713, "0062": 713, "0240": 713, "0393": 713, "systemresult": [713, 762, 788], "0x282ca8f7b70": 713, "sure": [713, 785], "cccc": [714, 759, 770, 785], "fgl": [714, 759, 764, 770, 785, 790], "nk": 714, "odot": 714, "iota_": 714, "psi_": 714, "1k": 714, "2k": 714, "kk": 714, "needless": 714, "found": [714, 882], "ki": [714, 745, 753], "ji": [714, 745, 753], "widehat": 714, "immedi": 714, "breusch": [714, 797, 832], "pagan": [714, 797, 832], "ssr_": [714, 824, 858], "tss_": [714, 824, 858], "uncent": 714, "1977": 714, "iota": 714, "formul": 714, "tr": [714, 824, 858], "psi": 714, "full_sigma": [716, 731, 735, 739], "ndepend": [716, 731, 735, 739], "linearconstraint": [716, 720, 723, 726, 731, 735, 761, 772, 787], "cov_clust": 716, "group_debias_coeffici": 716, "attrdict": [718, 722, 725, 729, 733, 737, 742, 746, 750, 755, 796, 806, 831, 841], "i_n": [723, 749, 759, 785], "neqn": 752, "_ig_": 753, "w_j": 753, "nequat": 758, "empti": [759, 770, 883], "prespecifi": [759, 764, 770, 785, 790], "vertic": [759, 770, 785], "y_k": [759, 770, 785], "x_k": [759, 770, 785], "nconstraint": [760, 771, 786], "nparamet": [760, 771, 786], "_util": [761, 772, 787], "con": [761, 772, 787], "repres": [764, 775, 790], "curli": [764, 775, 790], "brace": [764, 775, 790], "encapsul": [764, 775, 790], "x1_1": [764, 775, 790], "x1_2": [764, 775], "x2_1": [764, 775, 790], "x2_2": [764, 775], "randn": [764, 775, 790], "eq1": [764, 775, 790], "eq2": [764, 775, 790], "ndep": [766, 792], "At": 766, "fir": [768, 778, 794], "assembl": [768, 778, 794, 816, 850], "eqn": [768, 778, 794, 816, 850], "beta_j": 770, "gmmsystemresult": 773, "num_param": 780, "require_panda": 780, "constrain": [780, 782, 784], "back": 781, "beta_c": 781, "system_rsquar": [796, 831], "lr": [810, 844], "sum_i": [820, 824, 854, 858], "sum_j": [820, 824, 854, 858], "denomin": [820, 854], "_ij": [824, 858], "sum__i": [824, 858], "why": 866, "critical_valu": [866, 871], "df_denom": 871, "holder": 871, "statement": 871, "kwarg": [876, 885], "shallow": 878, "itemsview": 880, "keyerror": [882, 883], "lack": 885, "valuesview": 886}, "objects": {"linearmodels.asset_pricing": [[74, 0, 0, "-", "covariance"], [74, 0, 0, "-", "model"], [74, 0, 0, "-", "results"]], "linearmodels.asset_pricing.covariance": [[0, 1, 1, "", "HeteroskedasticCovariance"], [7, 1, 1, "", "KernelCovariance"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance": [[1, 2, 1, "", "config"], [2, 2, 1, "", "cov"], [3, 2, 1, "", "inv_jacobian"], [4, 2, 1, "", "jacobian"], [5, 2, 1, "", "s"], [6, 2, 1, "", "square"]], "linearmodels.asset_pricing.covariance.KernelCovariance": [[8, 2, 1, "", "bandwidth"], [9, 2, 1, "", "config"], [10, 2, 1, "", "cov"], [11, 2, 1, "", "inv_jacobian"], [12, 2, 1, "", "jacobian"], [13, 2, 1, "", "kernel"], [14, 2, 1, "", "s"], [15, 2, 1, "", "square"]], "linearmodels.asset_pricing.model": [[16, 1, 1, "", "LinearFactorModel"], [20, 1, 1, "", "LinearFactorModelGMM"], [24, 1, 1, "", "TradedFactorModel"]], "linearmodels.asset_pricing.model.LinearFactorModel": [[17, 3, 1, "", "fit"], [18, 2, 1, "", "formula"], [19, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM": [[21, 3, 1, "", "fit"], [22, 2, 1, "", "formula"], [23, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.model.TradedFactorModel": [[25, 3, 1, "", "fit"], [26, 2, 1, "", "formula"], [27, 3, 1, "", "from_formula"]], "linearmodels.asset_pricing.results": [[28, 1, 1, "", "GMMFactorModelResults"], [49, 1, 1, "", "LinearFactorModelResults"]], "linearmodels.asset_pricing.results.GMMFactorModelResults": [[29, 2, 1, "", "alphas"], [30, 2, 1, "", "betas"], [31, 2, 1, "", "cov"], [32, 2, 1, "", "cov_estimator"], [33, 2, 1, "", "full_summary"], [34, 2, 1, "", "iterations"], [35, 2, 1, "", "j_statistic"], [36, 2, 1, "", "name"], [37, 2, 1, "", "nobs"], [38, 2, 1, "", "params"], [39, 2, 1, "", "pvalues"], [40, 2, 1, "", "residual_ss"], [41, 2, 1, "", "risk_premia"], [42, 2, 1, "", "risk_premia_se"], [43, 2, 1, "", "risk_premia_tstats"], [44, 2, 1, "", "rsquared"], [45, 2, 1, "", "std_errors"], [46, 2, 1, "", "summary"], [47, 2, 1, "", "total_ss"], [48, 2, 1, "", "tstats"]], "linearmodels.asset_pricing.results.LinearFactorModelResults": [[50, 2, 1, "", "alphas"], [51, 2, 1, "", "betas"], [52, 2, 1, "", "cov"], [53, 2, 1, "", "cov_estimator"], [54, 2, 1, "", "full_summary"], [55, 2, 1, "", "j_statistic"], [56, 2, 1, "", "name"], [57, 2, 1, "", "nobs"], [58, 2, 1, "", "params"], [59, 2, 1, "", "pvalues"], [60, 2, 1, "", "residual_ss"], [61, 2, 1, "", "risk_premia"], [62, 2, 1, "", "risk_premia_se"], [63, 2, 1, "", "risk_premia_tstats"], [64, 2, 1, "", "rsquared"], [65, 2, 1, "", "std_errors"], [66, 2, 1, "", "summary"], [67, 2, 1, "", "total_ss"], [68, 2, 1, "", "tstats"]], "linearmodels.compat": [[76, 0, 0, "-", "statsmodels"]], "linearmodels.compat.statsmodels": [[77, 1, 1, "", "Summary"]], "linearmodels.compat.statsmodels.Summary": [[78, 3, 1, "", "add_extra_txt"], [79, 3, 1, "", "add_table_2cols"], [80, 3, 1, "", "add_table_params"], [81, 3, 1, "", "as_csv"], [82, 3, 1, "", "as_html"], [83, 3, 1, "", "as_latex"], [84, 3, 1, "", "as_text"]], "linearmodels.iv": [[391, 0, 0, "-", "absorbing"], [391, 0, 0, "-", "covariance"], [391, 0, 0, "-", "data"], [391, 0, 0, "-", "gmm"], [391, 0, 0, "-", "model"], [391, 0, 0, "-", "results"]], "linearmodels.iv.absorbing": [[87, 1, 1, "", "AbsorbingLS"], [98, 1, 1, "", "AbsorbingLSResults"], [130, 1, 1, "", "AbsorbingRegressor"], [135, 1, 1, "", "Interaction"]], "linearmodels.iv.absorbing.AbsorbingLS": [[88, 2, 1, "", "absorbed_dependent"], [89, 2, 1, "", "absorbed_exog"], [90, 2, 1, "", "dependent"], [91, 2, 1, "", "exog"], [92, 3, 1, "", "fit"], [93, 2, 1, "", "has_constant"], [94, 2, 1, "", "instruments"], [95, 3, 1, "", "resids"], [96, 2, 1, "", "weights"], [97, 3, 1, "", "wresids"]], "linearmodels.iv.absorbing.AbsorbingLSResults": [[99, 2, 1, "", "absorbed_effects"], [100, 2, 1, "", "absorbed_rsquared"], [101, 3, 1, "", "conf_int"], [102, 2, 1, "", "cov"], [103, 2, 1, "", "cov_config"], [104, 2, 1, "", "cov_estimator"], [105, 2, 1, "", "cov_type"], [106, 2, 1, "", "debiased"], [107, 2, 1, "", "df_absorbed"], [108, 2, 1, "", "df_model"], [109, 2, 1, "", "df_resid"], [110, 2, 1, "", "f_statistic"], [111, 2, 1, "", "fitted_values"], [112, 2, 1, "", "has_constant"], [113, 2, 1, "", "idiosyncratic"], [114, 2, 1, "", "method"], [115, 2, 1, "", "model_ss"], [116, 2, 1, "", "nobs"], [117, 2, 1, "", "params"], [118, 2, 1, "", "pvalues"], [119, 2, 1, "", "resid_ss"], [120, 2, 1, "", "resids"], [121, 2, 1, "", "rsquared"], [122, 2, 1, "", "rsquared_adj"], [123, 2, 1, "", "s2"], [124, 2, 1, "", "std_errors"], [125, 2, 1, "", "summary"], [126, 2, 1, "", "total_ss"], [127, 2, 1, "", "tstats"], [128, 3, 1, "", "wald_test"], [129, 2, 1, "", "wresids"]], "linearmodels.iv.absorbing.AbsorbingRegressor": [[131, 2, 1, "", "approx_rank"], [132, 2, 1, "", "has_constant"], [133, 2, 1, "", "hash"], [134, 2, 1, "", "regressors"]], "linearmodels.iv.absorbing.Interaction": [[136, 2, 1, "", "cat"], [137, 2, 1, "", "cont"], [138, 3, 1, "", "drop"], [139, 3, 1, "", "from_frame"], [140, 2, 1, "", "hash"], [141, 2, 1, "", "isnull"], [142, 2, 1, "", "nobs"], [143, 2, 1, "", "sparse"]], "linearmodels.iv.covariance": [[150, 1, 1, "", "ClusteredCovariance"], [156, 1, 1, "", "HeteroskedasticCovariance"], [162, 1, 1, "", "HomoskedasticCovariance"], [168, 1, 1, "", "KernelCovariance"], [174, 4, 1, "", "kernel_optimal_bandwidth"], [175, 4, 1, "", "kernel_weight_bartlett"], [176, 4, 1, "", "kernel_weight_parzen"], [177, 4, 1, "", "kernel_weight_quadratic_spectral"]], "linearmodels.iv.covariance.ClusteredCovariance": [[151, 2, 1, "", "config"], [152, 2, 1, "", "cov"], [153, 2, 1, "", "debiased"], [154, 2, 1, "", "s"], [155, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HeteroskedasticCovariance": [[157, 2, 1, "", "config"], [158, 2, 1, "", "cov"], [159, 2, 1, "", "debiased"], [160, 2, 1, "", "s"], [161, 2, 1, "", "s2"]], "linearmodels.iv.covariance.HomoskedasticCovariance": [[163, 2, 1, "", "config"], [164, 2, 1, "", "cov"], [165, 2, 1, "", "debiased"], [166, 2, 1, "", "s"], [167, 2, 1, "", "s2"]], "linearmodels.iv.covariance.KernelCovariance": [[169, 2, 1, "", "config"], [170, 2, 1, "", "cov"], [171, 2, 1, "", "debiased"], [172, 2, 1, "", "s"], [173, 2, 1, "", "s2"]], "linearmodels.iv.data": [[178, 1, 1, "", "IVData"]], "linearmodels.iv.data.IVData": [[179, 2, 1, "", "cols"], [180, 3, 1, "", "drop"], [181, 2, 1, "", "isnull"], [182, 2, 1, "", "labels"], [183, 2, 1, "", "ndarray"], [184, 2, 1, "", "ndim"], [185, 2, 1, "", "pandas"], [186, 2, 1, "", "rows"], [187, 2, 1, "", "shape"]], "linearmodels.iv.gmm": [[188, 1, 1, "", "HeteroskedasticWeightMatrix"], [191, 1, 1, "", "HomoskedasticWeightMatrix"], [194, 1, 1, "", "IVGMMCovariance"], [200, 1, 1, "", "KernelWeightMatrix"], [204, 1, 1, "", "OneWayClusteredWeightMatrix"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix": [[189, 2, 1, "", "config"], [190, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix": [[192, 2, 1, "", "config"], [193, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.IVGMMCovariance": [[195, 2, 1, "", "config"], [196, 2, 1, "", "cov"], [197, 2, 1, "", "debiased"], [198, 2, 1, "", "s"], [199, 2, 1, "", "s2"]], "linearmodels.iv.gmm.KernelWeightMatrix": [[201, 2, 1, "", "bandwidth"], [202, 2, 1, "", "config"], [203, 3, 1, "", "weight_matrix"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix": [[205, 2, 1, "", "config"], [206, 3, 1, "", "weight_matrix"]], "linearmodels.iv.model": [[207, 1, 1, "", "IV2SLS"], [218, 1, 1, "", "IVGMM"], [229, 1, 1, "", "IVGMMCUE"], [241, 1, 1, "", "IVLIML"], [252, 1, 1, "", "_OLS"]], "linearmodels.iv.model.IV2SLS": [[208, 3, 1, "", "estimate_parameters"], [209, 3, 1, "", "fit"], [210, 2, 1, "", "formula"], [211, 3, 1, "", "from_formula"], [212, 2, 1, "", "has_constant"], [213, 2, 1, "", "isnull"], [214, 2, 1, "", "notnull"], [215, 3, 1, "", "predict"], [216, 3, 1, "", "resids"], [217, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMM": [[219, 3, 1, "", "estimate_parameters"], [220, 3, 1, "", "fit"], [221, 2, 1, "", "formula"], [222, 3, 1, "", "from_formula"], [223, 2, 1, "", "has_constant"], [224, 2, 1, "", "isnull"], [225, 2, 1, "", "notnull"], [226, 3, 1, "", "predict"], [227, 3, 1, "", "resids"], [228, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVGMMCUE": [[230, 3, 1, "", "estimate_parameters"], [231, 3, 1, "", "fit"], [232, 2, 1, "", "formula"], [233, 3, 1, "", "from_formula"], [234, 2, 1, "", "has_constant"], [235, 2, 1, "", "isnull"], [236, 3, 1, "", "j"], [237, 2, 1, "", "notnull"], [238, 3, 1, "", "predict"], [239, 3, 1, "", "resids"], [240, 3, 1, "", "wresids"]], "linearmodels.iv.model.IVLIML": [[242, 3, 1, "", "estimate_parameters"], [243, 3, 1, "", "fit"], [244, 2, 1, "", "formula"], [245, 3, 1, "", "from_formula"], [246, 2, 1, "", "has_constant"], [247, 2, 1, "", "isnull"], [248, 2, 1, "", "notnull"], [249, 3, 1, "", "predict"], [250, 3, 1, "", "resids"], [251, 3, 1, "", "wresids"]], "linearmodels.iv.model._OLS": [[253, 3, 1, "", "estimate_parameters"], [254, 3, 1, "", "fit"], [255, 2, 1, "", "formula"], [256, 3, 1, "", "from_formula"], [257, 2, 1, "", "has_constant"], [258, 2, 1, "", "isnull"], [259, 2, 1, "", "notnull"], [260, 3, 1, "", "predict"], [261, 3, 1, "", "resids"], [262, 3, 1, "", "wresids"]], "linearmodels.iv.results": [[263, 1, 1, "", "FirstStageResults"], [267, 1, 1, "", "IVGMMResults"], [305, 1, 1, "", "IVModelComparison"], [317, 1, 1, "", "IVResults"], [358, 1, 1, "", "OLSResults"], [389, 4, 1, "", "compare"]], "linearmodels.iv.results.FirstStageResults": [[264, 2, 1, "", "diagnostics"], [265, 2, 1, "", "individual"], [266, 2, 1, "", "summary"]], "linearmodels.iv.results.IVGMMResults": [[268, 3, 1, "", "c_stat"], [269, 3, 1, "", "conf_int"], [270, 2, 1, "", "cov"], [271, 2, 1, "", "cov_config"], [272, 2, 1, "", "cov_estimator"], [273, 2, 1, "", "cov_type"], [274, 2, 1, "", "debiased"], [275, 2, 1, "", "df_model"], [276, 2, 1, "", "df_resid"], [277, 2, 1, "", "f_statistic"], [278, 2, 1, "", "first_stage"], [279, 2, 1, "", "fitted_values"], [280, 2, 1, "", "has_constant"], [281, 2, 1, "", "idiosyncratic"], [282, 2, 1, "", "iterations"], [283, 2, 1, "", "j_stat"], [284, 2, 1, "", "kappa"], [285, 2, 1, "", "method"], [286, 2, 1, "", "model_ss"], [287, 2, 1, "", "nobs"], [288, 2, 1, "", "params"], [289, 3, 1, "", "predict"], [290, 2, 1, "", "pvalues"], [291, 2, 1, "", "resid_ss"], [292, 2, 1, "", "resids"], [293, 2, 1, "", "rsquared"], [294, 2, 1, "", "rsquared_adj"], [295, 2, 1, "", "s2"], [296, 2, 1, "", "std_errors"], [297, 2, 1, "", "summary"], [298, 2, 1, "", "total_ss"], [299, 2, 1, "", "tstats"], [300, 3, 1, "", "wald_test"], [301, 2, 1, "", "weight_config"], [302, 2, 1, "", "weight_matrix"], [303, 2, 1, "", "weight_type"], [304, 2, 1, "", "wresids"]], "linearmodels.iv.results.IVModelComparison": [[306, 2, 1, "", "cov_estimator"], [307, 2, 1, "", "estimator_method"], [308, 2, 1, "", "f_statistic"], [309, 2, 1, "", "nobs"], [310, 2, 1, "", "params"], [311, 2, 1, "", "pvalues"], [312, 2, 1, "", "rsquared"], [313, 2, 1, "", "rsquared_adj"], [314, 2, 1, "", "std_errors"], [315, 2, 1, "", "summary"], [316, 2, 1, "", "tstats"]], "linearmodels.iv.results.IVResults": [[318, 2, 1, "", "anderson_rubin"], [319, 2, 1, "", "basmann"], [320, 2, 1, "", "basmann_f"], [321, 3, 1, "", "conf_int"], [322, 2, 1, "", "cov"], [323, 2, 1, "", "cov_config"], [324, 2, 1, "", "cov_estimator"], [325, 2, 1, "", "cov_type"], [326, 2, 1, "", "debiased"], [327, 2, 1, "", "df_model"], [328, 2, 1, "", "df_resid"], [329, 3, 1, "", "durbin"], [330, 2, 1, "", "f_statistic"], [331, 2, 1, "", "first_stage"], [332, 2, 1, "", "fitted_values"], [333, 2, 1, "", "has_constant"], [334, 2, 1, "", "idiosyncratic"], [335, 2, 1, "", "kappa"], [336, 2, 1, "", "method"], [337, 2, 1, "", "model_ss"], [338, 2, 1, "", "nobs"], [339, 2, 1, "", "params"], [340, 3, 1, "", "predict"], [341, 2, 1, "", "pvalues"], [342, 2, 1, "", "resid_ss"], [343, 2, 1, "", "resids"], [344, 2, 1, "", "rsquared"], [345, 2, 1, "", "rsquared_adj"], [346, 2, 1, "", "s2"], [347, 2, 1, "", "sargan"], [348, 2, 1, "", "std_errors"], [349, 2, 1, "", "summary"], [350, 2, 1, "", "total_ss"], [351, 2, 1, "", "tstats"], [352, 3, 1, "", "wald_test"], [353, 2, 1, "", "wooldridge_overid"], [354, 2, 1, "", "wooldridge_regression"], [355, 2, 1, "", "wooldridge_score"], [356, 2, 1, "", "wresids"], [357, 3, 1, "", "wu_hausman"]], "linearmodels.iv.results.OLSResults": [[359, 3, 1, "", "conf_int"], [360, 2, 1, "", "cov"], [361, 2, 1, "", "cov_config"], [362, 2, 1, "", "cov_estimator"], [363, 2, 1, "", "cov_type"], [364, 2, 1, "", "debiased"], [365, 2, 1, "", "df_model"], [366, 2, 1, "", "df_resid"], [367, 2, 1, "", "f_statistic"], [368, 2, 1, "", "fitted_values"], [369, 2, 1, "", "has_constant"], [370, 2, 1, "", "idiosyncratic"], [371, 2, 1, "", "kappa"], [372, 2, 1, "", "method"], [373, 2, 1, "", "model_ss"], [374, 2, 1, "", "nobs"], [375, 2, 1, "", "params"], [376, 3, 1, "", "predict"], [377, 2, 1, "", "pvalues"], [378, 2, 1, "", "resid_ss"], [379, 2, 1, "", "resids"], [380, 2, 1, "", "rsquared"], [381, 2, 1, "", "rsquared_adj"], [382, 2, 1, "", "s2"], [383, 2, 1, "", "std_errors"], [384, 2, 1, "", "summary"], [385, 2, 1, "", "total_ss"], [386, 2, 1, "", "tstats"], [387, 3, 1, "", "wald_test"], [388, 2, 1, "", "wresids"]], "linearmodels.panel": [[707, 0, 0, "-", "covariance"], [707, 0, 0, "-", "data"], [707, 0, 0, "-", "model"], [707, 0, 0, "-", "results"], [707, 0, 0, "-", "utility"]], "linearmodels.panel.covariance": [[400, 1, 1, "", "ACCovariance"], [408, 1, 1, "", "ClusteredCovariance"], [416, 1, 1, "", "DriscollKraay"], [424, 1, 1, "", "FamaMacBethCovariance"], [434, 1, 1, "", "HeteroskedasticCovariance"], [442, 1, 1, "", "HomoskedasticCovariance"]], "linearmodels.panel.covariance.ACCovariance": [[401, 5, 1, "", "ALLOWED_KWARGS"], [402, 5, 1, "", "DEFAULT_KERNEL"], [403, 2, 1, "", "cov"], [404, 3, 1, "", "deferred_cov"], [405, 2, 1, "", "eps"], [406, 2, 1, "", "name"], [407, 2, 1, "", "s2"]], "linearmodels.panel.covariance.ClusteredCovariance": [[409, 5, 1, "", "ALLOWED_KWARGS"], [410, 5, 1, "", "DEFAULT_KERNEL"], [411, 2, 1, "", "cov"], [412, 3, 1, "", "deferred_cov"], [413, 2, 1, "", "eps"], [414, 2, 1, "", "name"], [415, 2, 1, "", "s2"]], "linearmodels.panel.covariance.DriscollKraay": [[417, 5, 1, "", "ALLOWED_KWARGS"], [418, 5, 1, "", "DEFAULT_KERNEL"], [419, 2, 1, "", "cov"], [420, 3, 1, "", "deferred_cov"], [421, 2, 1, "", "eps"], [422, 2, 1, "", "name"], [423, 2, 1, "", "s2"]], "linearmodels.panel.covariance.FamaMacBethCovariance": [[425, 5, 1, "", "ALLOWED_KWARGS"], [426, 5, 1, "", "DEFAULT_KERNEL"], [427, 2, 1, "", "all_params"], [428, 2, 1, "", "bandwidth"], [429, 2, 1, "", "cov"], [430, 3, 1, "", "deferred_cov"], [431, 2, 1, "", "eps"], [432, 2, 1, "", "name"], [433, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HeteroskedasticCovariance": [[435, 5, 1, "", "ALLOWED_KWARGS"], [436, 5, 1, "", "DEFAULT_KERNEL"], [437, 2, 1, "", "cov"], [438, 3, 1, "", "deferred_cov"], [439, 2, 1, "", "eps"], [440, 2, 1, "", "name"], [441, 2, 1, "", "s2"]], "linearmodels.panel.covariance.HomoskedasticCovariance": [[443, 5, 1, "", "ALLOWED_KWARGS"], [444, 5, 1, "", "DEFAULT_KERNEL"], [445, 2, 1, "", "cov"], [446, 3, 1, "", "deferred_cov"], [447, 2, 1, "", "eps"], [448, 2, 1, "", "name"], [449, 2, 1, "", "s2"]], "linearmodels.panel.data": [[450, 1, 1, "", "PanelData"], [475, 1, 1, "", "_Panel"]], "linearmodels.panel.data.PanelData": [[451, 3, 1, "", "copy"], [452, 3, 1, "", "count"], [453, 2, 1, "", "dataframe"], [454, 3, 1, "", "demean"], [455, 3, 1, "", "drop"], [456, 3, 1, "", "dummies"], [457, 2, 1, "", "entities"], [458, 2, 1, "", "entity_ids"], [459, 3, 1, "", "first_difference"], [460, 3, 1, "", "general_demean"], [461, 2, 1, "", "index"], [462, 2, 1, "", "isnull"], [463, 3, 1, "", "mean"], [464, 2, 1, "", "ndim"], [465, 2, 1, "", "nentity"], [466, 2, 1, "", "nobs"], [467, 2, 1, "", "nvar"], [468, 2, 1, "", "panel"], [469, 2, 1, "", "shape"], [470, 2, 1, "", "time"], [471, 2, 1, "", "time_ids"], [472, 2, 1, "", "values2d"], [473, 2, 1, "", "values3d"], [474, 2, 1, "", "vars"]], "linearmodels.panel.data._Panel": [[476, 3, 1, "", "from_array"], [477, 2, 1, "", "items"], [478, 2, 1, "", "major_axis"], [479, 2, 1, "", "minor_axis"], [480, 2, 1, "", "shape"], [481, 3, 1, "", "to_frame"], [482, 2, 1, "", "values"]], "linearmodels.panel.model": [[483, 1, 1, "", "BetweenOLS"], [491, 1, 1, "", "FamaMacBeth"], [499, 1, 1, "", "FirstDifferenceOLS"], [507, 1, 1, "", "PanelOLS"], [518, 1, 1, "", "PooledOLS"], [526, 1, 1, "", "RandomEffects"]], "linearmodels.panel.model.BetweenOLS": [[484, 3, 1, "", "fit"], [485, 2, 1, "", "formula"], [486, 3, 1, "", "from_formula"], [487, 2, 1, "", "has_constant"], [488, 2, 1, "", "not_null"], [489, 3, 1, "", "predict"], [490, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FamaMacBeth": [[492, 3, 1, "", "fit"], [493, 2, 1, "", "formula"], [494, 3, 1, "", "from_formula"], [495, 2, 1, "", "has_constant"], [496, 2, 1, "", "not_null"], [497, 3, 1, "", "predict"], [498, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.FirstDifferenceOLS": [[500, 3, 1, "", "fit"], [501, 2, 1, "", "formula"], [502, 3, 1, "", "from_formula"], [503, 2, 1, "", "has_constant"], [504, 2, 1, "", "not_null"], [505, 3, 1, "", "predict"], [506, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.PanelOLS": [[508, 2, 1, "", "entity_effects"], [509, 3, 1, "", "fit"], [510, 2, 1, "", "formula"], [511, 3, 1, "", "from_formula"], [512, 2, 1, "", "has_constant"], [513, 2, 1, "", "not_null"], [514, 2, 1, "", "other_effects"], [515, 3, 1, "", "predict"], [516, 3, 1, "", "reformat_clusters"], [517, 2, 1, "", "time_effects"]], "linearmodels.panel.model.PooledOLS": [[519, 3, 1, "", "fit"], [520, 2, 1, "", "formula"], [521, 3, 1, "", "from_formula"], [522, 2, 1, "", "has_constant"], [523, 2, 1, "", "not_null"], [524, 3, 1, "", "predict"], [525, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.model.RandomEffects": [[527, 3, 1, "", "fit"], [528, 2, 1, "", "formula"], [529, 3, 1, "", "from_formula"], [530, 2, 1, "", "has_constant"], [531, 2, 1, "", "not_null"], [532, 3, 1, "", "predict"], [533, 3, 1, "", "reformat_clusters"]], "linearmodels.panel.results": [[534, 1, 1, "", "FamaMacBethResults"], [572, 1, 1, "", "PanelEffectsResults"], [612, 1, 1, "", "PanelModelComparison"], [626, 1, 1, "", "PanelResults"], [661, 1, 1, "", "RandomEffectsResults"], [698, 4, 1, "", "compare"]], "linearmodels.panel.results.FamaMacBethResults": [[535, 2, 1, "", "all_params"], [536, 2, 1, "", "avg_adj_rsquared"], [537, 2, 1, "", "avg_rsquared"], [538, 3, 1, "", "conf_int"], [539, 2, 1, "", "corr_squared_between"], [540, 2, 1, "", "corr_squared_overall"], [541, 2, 1, "", "corr_squared_within"], [542, 2, 1, "", "cov"], [543, 2, 1, "", "df_model"], [544, 2, 1, "", "df_resid"], [545, 2, 1, "", "entity_info"], [546, 2, 1, "", "estimated_effects"], [547, 2, 1, "", "f_statistic"], [548, 2, 1, "", "f_statistic_robust"], [549, 2, 1, "", "fitted_values"], [550, 2, 1, "", "idiosyncratic"], [551, 2, 1, "", "loglik"], [552, 2, 1, "", "model_ss"], [553, 2, 1, "", "name"], [554, 2, 1, "", "nobs"], [555, 2, 1, "", "params"], [556, 3, 1, "", "predict"], [557, 2, 1, "", "pvalues"], [558, 2, 1, "", "resid_ss"], [559, 2, 1, "", "resids"], [560, 2, 1, "", "rsquared"], [561, 2, 1, "", "rsquared_between"], [562, 2, 1, "", "rsquared_overall"], [563, 2, 1, "", "rsquared_within"], [564, 2, 1, "", "s2"], [565, 2, 1, "", "std_errors"], [566, 2, 1, "", "summary"], [567, 2, 1, "", "time_info"], [568, 2, 1, "", "total_ss"], [569, 2, 1, "", "tstats"], [570, 3, 1, "", "wald_test"], [571, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelEffectsResults": [[573, 3, 1, "", "conf_int"], [574, 2, 1, "", "corr_squared_between"], [575, 2, 1, "", "corr_squared_overall"], [576, 2, 1, "", "corr_squared_within"], [577, 2, 1, "", "cov"], [578, 2, 1, "", "df_model"], [579, 2, 1, "", "df_resid"], [580, 2, 1, "", "entity_info"], [581, 2, 1, "", "estimated_effects"], [582, 2, 1, "", "f_pooled"], [583, 2, 1, "", "f_statistic"], [584, 2, 1, "", "f_statistic_robust"], [585, 2, 1, "", "fitted_values"], [586, 2, 1, "", "idiosyncratic"], [587, 2, 1, "", "included_effects"], [588, 2, 1, "", "loglik"], [589, 2, 1, "", "model_ss"], [590, 2, 1, "", "name"], [591, 2, 1, "", "nobs"], [592, 2, 1, "", "other_info"], [593, 2, 1, "", "params"], [594, 3, 1, "", "predict"], [595, 2, 1, "", "pvalues"], [596, 2, 1, "", "resid_ss"], [597, 2, 1, "", "resids"], [598, 2, 1, "", "rsquared"], [599, 2, 1, "", "rsquared_between"], [600, 2, 1, "", "rsquared_inclusive"], [601, 2, 1, "", "rsquared_overall"], [602, 2, 1, "", "rsquared_within"], [603, 2, 1, "", "s2"], [604, 2, 1, "", "std_errors"], [605, 2, 1, "", "summary"], [606, 2, 1, "", "time_info"], [607, 2, 1, "", "total_ss"], [608, 2, 1, "", "tstats"], [609, 2, 1, "", "variance_decomposition"], [610, 3, 1, "", "wald_test"], [611, 2, 1, "", "wresids"]], "linearmodels.panel.results.PanelModelComparison": [[613, 2, 1, "", "cov_estimator"], [614, 2, 1, "", "estimator_method"], [615, 2, 1, "", "f_statistic"], [616, 2, 1, "", "nobs"], [617, 2, 1, "", "params"], [618, 2, 1, "", "pvalues"], [619, 2, 1, "", "rsquared"], [620, 2, 1, "", "rsquared_between"], [621, 2, 1, "", "rsquared_overall"], [622, 2, 1, "", "rsquared_within"], [623, 2, 1, "", "std_errors"], [624, 2, 1, "", "summary"], [625, 2, 1, "", "tstats"]], "linearmodels.panel.results.PanelResults": [[627, 3, 1, "", "conf_int"], [628, 2, 1, "", "corr_squared_between"], [629, 2, 1, "", "corr_squared_overall"], [630, 2, 1, "", "corr_squared_within"], [631, 2, 1, "", "cov"], [632, 2, 1, "", "df_model"], [633, 2, 1, "", "df_resid"], [634, 2, 1, "", "entity_info"], [635, 2, 1, "", "estimated_effects"], [636, 2, 1, "", "f_statistic"], [637, 2, 1, "", "f_statistic_robust"], [638, 2, 1, "", "fitted_values"], [639, 2, 1, "", "idiosyncratic"], [640, 2, 1, "", "loglik"], [641, 2, 1, "", "model_ss"], [642, 2, 1, "", "name"], [643, 2, 1, "", "nobs"], [644, 2, 1, "", "params"], [645, 3, 1, "", "predict"], [646, 2, 1, "", "pvalues"], [647, 2, 1, "", "resid_ss"], [648, 2, 1, "", "resids"], [649, 2, 1, "", "rsquared"], [650, 2, 1, "", "rsquared_between"], [651, 2, 1, "", "rsquared_overall"], [652, 2, 1, "", "rsquared_within"], [653, 2, 1, "", "s2"], [654, 2, 1, "", "std_errors"], [655, 2, 1, "", "summary"], [656, 2, 1, "", "time_info"], [657, 2, 1, "", "total_ss"], [658, 2, 1, "", "tstats"], [659, 3, 1, "", "wald_test"], [660, 2, 1, "", "wresids"]], "linearmodels.panel.results.RandomEffectsResults": [[662, 3, 1, "", "conf_int"], [663, 2, 1, "", "corr_squared_between"], [664, 2, 1, "", "corr_squared_overall"], [665, 2, 1, "", "corr_squared_within"], [666, 2, 1, "", "cov"], [667, 2, 1, "", "df_model"], [668, 2, 1, "", "df_resid"], [669, 2, 1, "", "entity_info"], [670, 2, 1, "", "estimated_effects"], [671, 2, 1, "", "f_statistic"], [672, 2, 1, "", "f_statistic_robust"], [673, 2, 1, "", "fitted_values"], [674, 2, 1, "", "idiosyncratic"], [675, 2, 1, "", "loglik"], [676, 2, 1, "", "model_ss"], [677, 2, 1, "", "name"], [678, 2, 1, "", "nobs"], [679, 2, 1, "", "params"], [680, 3, 1, "", "predict"], [681, 2, 1, "", "pvalues"], [682, 2, 1, "", "resid_ss"], [683, 2, 1, "", "resids"], [684, 2, 1, "", "rsquared"], [685, 2, 1, "", "rsquared_between"], [686, 2, 1, "", "rsquared_overall"], [687, 2, 1, "", "rsquared_within"], [688, 2, 1, "", "s2"], [689, 2, 1, "", "std_errors"], [690, 2, 1, "", "summary"], [691, 2, 1, "", "theta"], [692, 2, 1, "", "time_info"], [693, 2, 1, "", "total_ss"], [694, 2, 1, "", "tstats"], [695, 2, 1, "", "variance_decomposition"], [696, 3, 1, "", "wald_test"], [697, 2, 1, "", "wresids"]], "linearmodels.panel.utility": [[699, 1, 1, "", "PanelModelData"], [706, 4, 1, "", "generate_panel_data"]], "linearmodels.panel.utility.PanelModelData": [[700, 5, 1, "", "clusters"], [701, 3, 1, "", "count"], [702, 5, 1, "", "data"], [703, 3, 1, "", "index"], [704, 5, 1, "", "other_effects"], [705, 5, 1, "", "weights"]], "linearmodels.shared.covariance": [[863, 4, 1, "", "cov_cluster"], [864, 4, 1, "", "cov_kernel"], [865, 4, 1, "", "group_debias_coefficient"]], "linearmodels.shared.hypotheses": [[866, 1, 1, "", "InvalidTestStatistic"], [871, 1, 1, "", "WaldTestStatistic"]], "linearmodels.shared.hypotheses.InvalidTestStatistic": [[867, 2, 1, "", "critical_values"], [868, 2, 1, "", "null"], [869, 2, 1, "", "pval"], [870, 2, 1, "", "stat"]], "linearmodels.shared.hypotheses.WaldTestStatistic": [[872, 2, 1, "", "critical_values"], [873, 2, 1, "", "null"], [874, 2, 1, "", "pval"], [875, 2, 1, "", "stat"]], "linearmodels.shared.utility": [[876, 1, 1, "", "AttrDict"]], "linearmodels.shared.utility.AttrDict": [[877, 3, 1, "", "clear"], [878, 3, 1, "", "copy"], [879, 3, 1, "", "get"], [880, 3, 1, "", "items"], [881, 3, 1, "", "keys"], [882, 3, 1, "", "pop"], [883, 3, 1, "", "popitem"], [884, 3, 1, "", "setdefault"], [885, 3, 1, "", "update"], [886, 3, 1, "", "values"]], "linearmodels.system": [[715, 0, 0, "-", "covariance"], [715, 0, 0, "-", "gmm"], [715, 0, 0, "-", "model"], [715, 0, 0, "-", "results"]], "linearmodels.system.covariance": [[716, 1, 1, "", "ClusteredCovariance"], [720, 1, 1, "", "GMMHeteroskedasticCovariance"], [723, 1, 1, "", "GMMHomoskedasticCovariance"], [726, 1, 1, "", "GMMKernelCovariance"], [731, 1, 1, "", "HeteroskedasticCovariance"], [735, 1, 1, "", "HomoskedasticCovariance"], [739, 1, 1, "", "KernelCovariance"]], "linearmodels.system.covariance.ClusteredCovariance": [[717, 2, 1, "", "cov"], [718, 2, 1, "", "cov_config"], [719, 2, 1, "", "sigma"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance": [[721, 2, 1, "", "cov"], [722, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance": [[724, 2, 1, "", "cov"], [725, 2, 1, "", "cov_config"]], "linearmodels.system.covariance.GMMKernelCovariance": [[727, 2, 1, "", "bandwidth"], [728, 2, 1, "", "cov"], [729, 2, 1, "", "cov_config"], [730, 2, 1, "", "kernel"]], "linearmodels.system.covariance.HeteroskedasticCovariance": [[732, 2, 1, "", "cov"], [733, 2, 1, "", "cov_config"], [734, 2, 1, "", "sigma"]], "linearmodels.system.covariance.HomoskedasticCovariance": [[736, 2, 1, "", "cov"], [737, 2, 1, "", "cov_config"], [738, 2, 1, "", "sigma"]], "linearmodels.system.covariance.KernelCovariance": [[740, 2, 1, "", "bandwidth"], [741, 2, 1, "", "cov"], [742, 2, 1, "", "cov_config"], [743, 2, 1, "", "kernel"], [744, 2, 1, "", "sigma"]], "linearmodels.system.gmm": [[745, 1, 1, "", "HeteroskedasticWeightMatrix"], [749, 1, 1, "", "HomoskedasticWeightMatrix"], [753, 1, 1, "", "KernelWeightMatrix"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix": [[746, 2, 1, "", "config"], [747, 3, 1, "", "sigma"], [748, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix": [[750, 2, 1, "", "config"], [751, 3, 1, "", "sigma"], [752, 3, 1, "", "weight_matrix"]], "linearmodels.system.gmm.KernelWeightMatrix": [[754, 2, 1, "", "bandwidth"], [755, 2, 1, "", "config"], [756, 2, 1, "", "kernel"], [757, 3, 1, "", "sigma"], [758, 3, 1, "", "weight_matrix"]], "linearmodels.system.model": [[759, 1, 1, "", "IV3SLS"], [770, 1, 1, "", "IVSystemGMM"], [780, 1, 1, "", "LinearConstraint"], [785, 1, 1, "", "SUR"]], "linearmodels.system.model.IV3SLS": [[760, 3, 1, "", "add_constraints"], [761, 2, 1, "", "constraints"], [762, 3, 1, "", "fit"], [763, 2, 1, "", "formula"], [764, 3, 1, "", "from_formula"], [765, 2, 1, "", "has_constant"], [766, 3, 1, "", "multivariate_iv"], [767, 2, 1, "", "param_names"], [768, 3, 1, "", "predict"], [769, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.IVSystemGMM": [[771, 3, 1, "", "add_constraints"], [772, 2, 1, "", "constraints"], [773, 3, 1, "", "fit"], [774, 2, 1, "", "formula"], [775, 3, 1, "", "from_formula"], [776, 2, 1, "", "has_constant"], [777, 2, 1, "", "param_names"], [778, 3, 1, "", "predict"], [779, 3, 1, "", "reset_constraints"]], "linearmodels.system.model.LinearConstraint": [[781, 2, 1, "", "a"], [782, 2, 1, "", "q"], [783, 2, 1, "", "r"], [784, 2, 1, "", "t"]], "linearmodels.system.model.SUR": [[786, 3, 1, "", "add_constraints"], [787, 2, 1, "", "constraints"], [788, 3, 1, "", "fit"], [789, 2, 1, "", "formula"], [790, 3, 1, "", "from_formula"], [791, 2, 1, "", "has_constant"], [792, 3, 1, "", "multivariate_ls"], [793, 2, 1, "", "param_names"], [794, 3, 1, "", "predict"], [795, 3, 1, "", "reset_constraints"]], "linearmodels.system.results": [[796, 1, 1, "", "GMMSystemResults"], [831, 1, 1, "", "SystemResults"]], "linearmodels.system.results.GMMSystemResults": [[797, 3, 1, "", "breusch_pagan"], [798, 3, 1, "", "conf_int"], [799, 2, 1, "", "cov"], [800, 2, 1, "", "cov_config"], [801, 2, 1, "", "cov_estimator"], [802, 2, 1, "", "debiased"], [803, 2, 1, "", "df_model"], [804, 2, 1, "", "df_resid"], [805, 2, 1, "", "equation_labels"], [806, 2, 1, "", "equations"], [807, 2, 1, "", "fitted_values"], [808, 2, 1, "", "iterations"], [809, 2, 1, "", "j_stat"], [810, 3, 1, "", "likelihood_ratio"], [811, 2, 1, "", "method"], [812, 2, 1, "", "model"], [813, 2, 1, "", "model_ss"], [814, 2, 1, "", "nobs"], [815, 2, 1, "", "params"], [816, 3, 1, "", "predict"], [817, 2, 1, "", "pvalues"], [818, 2, 1, "", "resid_ss"], [819, 2, 1, "", "resids"], [820, 2, 1, "", "rsquared"], [821, 2, 1, "", "sigma"], [822, 2, 1, "", "std_errors"], [823, 2, 1, "", "summary"], [824, 2, 1, "", "system_rsquared"], [825, 2, 1, "", "total_ss"], [826, 2, 1, "", "tstats"], [827, 2, 1, "", "w"], [828, 2, 1, "", "weight_config"], [829, 2, 1, "", "weight_type"], [830, 2, 1, "", "wresids"]], "linearmodels.system.results.SystemResults": [[832, 3, 1, "", "breusch_pagan"], [833, 3, 1, "", "conf_int"], [834, 2, 1, "", "cov"], [835, 2, 1, "", "cov_config"], [836, 2, 1, "", "cov_estimator"], [837, 2, 1, "", "debiased"], [838, 2, 1, "", "df_model"], [839, 2, 1, "", "df_resid"], [840, 2, 1, "", "equation_labels"], [841, 2, 1, "", "equations"], [842, 2, 1, "", "fitted_values"], [843, 2, 1, "", "iterations"], [844, 3, 1, "", "likelihood_ratio"], [845, 2, 1, "", "method"], [846, 2, 1, "", "model"], [847, 2, 1, "", "model_ss"], [848, 2, 1, "", "nobs"], [849, 2, 1, "", "params"], [850, 3, 1, "", "predict"], [851, 2, 1, "", "pvalues"], [852, 2, 1, "", "resid_ss"], [853, 2, 1, "", "resids"], [854, 2, 1, "", "rsquared"], [855, 2, 1, "", "sigma"], [856, 2, 1, "", "std_errors"], [857, 2, 1, "", "summary"], [858, 2, 1, "", "system_rsquared"], [859, 2, 1, "", "total_ss"], [860, 2, 1, "", "tstats"], [861, 2, 1, "", "wresids"]], "linearmodels": [[862, 0, 0, "-", "utility"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:property", "3": "py:method", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "property", "Python property"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"linearmodel": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886], "asset_pr": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "covari": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 74, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 390, 391, 393, 395, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 707, 710, 711, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 863, 864, 865], "heteroskedasticcovari": [0, 1, 2, 3, 4, 5, 6, 156, 157, 158, 159, 160, 161, 434, 435, 436, 437, 438, 439, 440, 441, 731, 732, 733, 734], "config": [1, 9, 151, 157, 163, 169, 189, 192, 195, 202, 205, 746, 750, 755], "cov": [2, 10, 31, 52, 102, 152, 158, 164, 170, 196, 270, 322, 360, 403, 411, 419, 429, 437, 445, 542, 577, 631, 666, 717, 721, 724, 728, 732, 736, 741, 799, 834], "inv_jacobian": [3, 11], "jacobian": [4, 12], "": [5, 14, 154, 160, 166, 172, 198], "squar": [6, 15, 390, 391, 708, 712, 714], "kernelcovari": [7, 8, 9, 10, 11, 12, 13, 14, 15, 168, 169, 170, 171, 172, 173, 739, 740, 741, 742, 743, 744], "bandwidth": [8, 201, 390, 428, 727, 740, 754], "kernel": [13, 390, 391, 710, 730, 743, 756], "model": [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 71, 73, 74, 147, 149, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 393, 394, 396, 398, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 707, 708, 711, 712, 713, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 812, 846], "linearfactormodel": [16, 17, 18, 19], "fit": [17, 21, 25, 92, 209, 220, 231, 243, 254, 484, 492, 500, 509, 519, 527, 714, 762, 773, 788], "formula": [18, 22, 26, 70, 73, 146, 147, 210, 221, 232, 244, 255, 390, 394, 398, 485, 493, 501, 510, 520, 528, 711, 712, 763, 774, 789], "from_formula": [19, 23, 27, 211, 222, 233, 245, 256, 486, 494, 502, 511, 521, 529, 764, 775, 790], "linearfactormodelgmm": [20, 21, 22, 23], "tradedfactormodel": [24, 25, 26, 27], "result": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 74, 145, 147, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 707, 715, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "gmmfactormodelresult": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "alpha": [29, 50], "beta": [30, 51], "cov_estim": [32, 53, 104, 272, 306, 324, 362, 613, 801, 836], "full_summari": [33, 54], "iter": [34, 69, 282, 710, 808, 843], "j_statist": [35, 55], "name": [36, 56, 406, 414, 422, 432, 440, 448, 553, 590, 642, 677], "nob": [37, 57, 116, 142, 287, 309, 338, 374, 466, 554, 591, 616, 643, 678, 814, 848], "param": [38, 58, 117, 288, 310, 339, 375, 555, 593, 617, 644, 679, 815, 849], "pvalu": [39, 59, 118, 290, 311, 341, 377, 557, 595, 618, 646, 681, 817, 851], "residual_ss": [40, 60], "risk_premia": [41, 61], "risk_premia_s": [42, 62], "risk_premia_tstat": [43, 63], "rsquar": [44, 64, 121, 293, 312, 344, 380, 560, 598, 619, 649, 684, 820, 854], "std_error": [45, 65, 124, 296, 314, 348, 383, 565, 604, 623, 654, 689, 822, 856], "summari": [46, 66, 76, 77, 78, 79, 80, 81, 82, 83, 84, 125, 266, 297, 315, 349, 384, 566, 605, 624, 655, 690, 823, 857], "total_ss": [47, 67, 126, 298, 350, 385, 568, 607, 657, 693, 825, 859], "tstat": [48, 68, 127, 299, 316, 351, 386, 569, 608, 625, 658, 694, 826, 860], "linearfactormodelresult": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68], "exampl": [69, 145, 146, 393, 710], "gener": [69, 390, 391, 707, 714, 715], "setup": 69, "import": [69, 70, 145], "data": [69, 70, 145, 147, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 391, 392, 393, 394, 396, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 702, 707, 708, 710, 712], "transform": [69, 70], "portfolio": [69, 70], "excess": [69, 70], "1": [69, 75], "step": 69, "estim": [69, 73, 74, 145, 146, 147, 148, 149, 390, 391, 393, 396, 398, 707, 708, 710, 711, 712, 714, 715], "us": [69, 70, 73, 147, 393, 394, 710, 711], "seemingli": [69, 714], "unrel": [69, 714], "regress": [69, 144, 145, 393, 713, 714, 715], "sur": [69, 714, 715, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795], "2": [69, 75, 395, 398, 714], "gmm": [69, 73, 145, 149, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 390, 391, 712, 714, 715, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758], "until": 69, "converg": 69, "continu": [69, 145, 390], "updat": [69, 145, 390, 885], "avail": 70, "syntax": 70, "test": [70, 145, 390, 707, 714, 862], "factor": [70, 71, 73], "onli": 70, "return": 70, "first": [70, 145, 390, 393, 394, 398], "second": 70, "compar": [70, 145, 147, 389, 393, 698], "linear": [71, 73, 74, 145, 390], "asset": [71, 74, 708], "price": [71, 74, 708], "introduct": [72, 149, 397], "mathemat": [73, 147, 390, 398], "detail": [73, 390, 398], "trade": 73, "The": [73, 393], "j": [73, 236], "statist": [73, 390, 714], "non": 73, "improv": 73, "specif": [73, 149, 712], "gl": [73, 710], "modul": [74, 391, 707, 708, 715], "refer": [74, 391, 707, 709, 715], "chang": [75, 145], "log": 75, "version": 75, "4": 75, "29": 75, "28": 75, "27": 75, "26": 75, "25": 75, "24": 75, "21": 75, "20": 75, "19": 75, "18": 75, "17": 75, "16": 75, "15": 75, "14": 75, "13": 75, "12": 75, "11": 75, "10": 75, "9": 75, "8": 75, "7": 75, "6": 75, "5": 75, "0": 75, "3": 75, "compat": [76, 77, 78, 79, 80, 81, 82, 83, 84], "statsmodel": [77, 78, 79, 80, 81, 82, 83, 84], "add_extra_txt": 78, "add_table_2col": 79, "add_table_param": 80, "as_csv": 81, "as_html": 82, "as_latex": 83, "as_text": 84, "contribut": 85, "indic": 86, "iv": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391], "absorb": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 391], "absorbingl": [87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97], "absorbed_depend": 88, "absorbed_exog": 89, "depend": 90, "exog": 91, "has_const": [93, 112, 132, 212, 223, 234, 246, 257, 280, 333, 369, 487, 495, 503, 512, 522, 530, 765, 776, 791], "instrument": [94, 145, 148, 391, 708], "resid": [95, 120, 216, 227, 239, 250, 261, 292, 343, 379, 559, 597, 648, 683, 819, 853], "weight": [96, 145, 146, 390, 391, 705, 711, 714, 715], "wresid": [97, 129, 217, 228, 240, 251, 262, 304, 356, 388, 571, 611, 660, 697, 830, 861], "absorbinglsresult": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129], "absorbed_effect": 99, "absorbed_rsquar": 100, "conf_int": [101, 269, 321, 359, 538, 573, 627, 662, 798, 833], "cov_config": [103, 271, 323, 361, 718, 722, 725, 729, 733, 737, 742, 800, 835], "cov_typ": [105, 273, 325, 363], "debias": [106, 153, 159, 165, 171, 197, 274, 326, 364, 802, 837], "df_absorb": 107, "df_model": [108, 275, 327, 365, 543, 578, 632, 667, 803, 838], "df_resid": [109, 276, 328, 366, 544, 579, 633, 668, 804, 839], "f_statist": [110, 277, 308, 330, 367, 547, 583, 615, 636, 671], "fitted_valu": [111, 279, 332, 368, 549, 585, 638, 673, 807, 842], "idiosyncrat": [113, 281, 334, 370, 550, 586, 639, 674], "method": [114, 285, 336, 372, 390, 398, 714, 715, 811, 845], "model_ss": [115, 286, 337, 373, 552, 589, 641, 676, 813, 847], "resid_ss": [119, 291, 342, 378, 558, 596, 647, 682, 818, 852], "rsquared_adj": [122, 294, 313, 345, 381], "s2": [123, 155, 161, 167, 173, 199, 295, 346, 382, 407, 415, 423, 433, 441, 449, 564, 603, 653, 688], "wald_test": [128, 300, 352, 387, 570, 610, 659, 696], "absorbingregressor": [130, 131, 132, 133, 134], "approx_rank": 131, "hash": [133, 140], "regressor": [134, 710], "interact": [135, 136, 137, 138, 139, 140, 141, 142, 143], "cat": 136, "cont": 137, "drop": [138, 180, 455], "from_fram": 139, "isnul": [141, 181, 213, 224, 235, 247, 258, 462], "spars": 143, "includ": [144, 393], "constant": [144, 390, 394], "exclud": 144, "optim": 144, "option": [144, 149, 393, 710, 711], "further": 145, "variabl": [145, 146, 147, 148, 391, 393, 708], "2sl": [145, 149, 390], "ol": [145, 147, 394, 710], "just": 145, "identifi": 145, "multipl": [145, 147], "altern": [145, 710], "matrix": 145, "structur": [145, 391, 707], "endogen": [145, 147], "exogen": 145, "singl": 145, "stage": [145, 390, 712, 714], "diagnost": [145, 146, 264], "liml": [145, 149, 390], "iv2sl": [145, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217], "basic": [146, 147, 390, 393, 710, 714], "wage": 146, "marri": 146, "women": 146, "men": 146, "smoke": 146, "birth": 146, "proxim": 146, "educ": 146, "interfac": 146, "categor": [146, 392], "post": [146, 390], "panel": [146, 392, 393, 394, 396, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708], "specifi": [147, 394, 711], "usag": [147, 710], "standard": [147, 390, 398], "mep": 147, "express": 147, "argument": 149, "cue": [149, 390], "clusteredcovari": [150, 151, 152, 153, 154, 155, 408, 409, 410, 411, 412, 413, 414, 415, 716, 717, 718, 719], "homoskedasticcovari": [162, 163, 164, 165, 166, 167, 442, 443, 444, 445, 446, 447, 448, 449, 735, 736, 737, 738], "kernel_optimal_bandwidth": 174, "todo": [174, 207, 218, 241], "kernel_weight_bartlett": 175, "kernel_weight_parzen": 176, "kernel_weight_quadratic_spectr": 177, "ivdata": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "col": 179, "label": [182, 711], "ndarrai": 183, "ndim": [184, 464], "panda": [185, 399], "row": 186, "shape": [187, 469, 480], "heteroskedasticweightmatrix": [188, 189, 190, 745, 746, 747, 748], "weight_matrix": [190, 193, 203, 206, 302, 748, 752, 758], "homoskedasticweightmatrix": [191, 192, 193, 749, 750, 751, 752], "ivgmmcovari": [194, 195, 196, 197, 198, 199], "kernelweightmatrix": [200, 201, 202, 203, 753, 754, 755, 756, 757, 758], "onewayclusteredweightmatrix": [204, 205, 206], "estimate_paramet": [208, 219, 230, 242, 253], "notnul": [214, 225, 237, 248, 259], "predict": [215, 226, 238, 249, 260, 289, 340, 376, 489, 497, 505, 515, 524, 532, 556, 594, 645, 680, 768, 778, 794, 816, 850], "ivgmm": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228], "ivgmmcu": [229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240], "ivliml": [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "_ol": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262], "firststageresult": [263, 264, 265, 266], "individu": 265, "ivgmmresult": [267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "c_stat": 268, "first_stag": [278, 331], "j_stat": [283, 809], "kappa": [284, 335, 371], "weight_config": [301, 828], "weight_typ": [303, 829], "ivmodelcomparison": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "estimator_method": [307, 614], "ivresult": [317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "anderson_rubin": 318, "basmann": 319, "basmann_f": 320, "durbin": 329, "sargan": 347, "wooldridge_overid": 353, "wooldridge_regress": 354, "wooldridge_scor": 355, "wu_hausman": 357, "olsresult": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388], "notat": [390, 714], "paramet": [390, 393, 714], "two": 390, "least": [390, 391, 708, 712, 714], "limit": 390, "inform": 390, "maximum": 390, "likelihood": 390, "k": 390, "class": 390, "moment": [390, 714, 715], "l": 390, "error": 390, "t": [390, 784], "p": 390, "valu": [390, 482, 886], "confid": 390, "interv": 390, "hypothesi": [390, 862], "analysi": [390, 392], "select": 390, "detect": 390, "format": 392, "multiindex": 392, "datafram": [392, 453], "numpi": 392, "arrai": 392, "xarrai": 392, "dataarrai": 392, "convers": 392, "string": 392, "dummi": [392, 393, 456], "load": [393, 394], "uncorrel": 393, "effect": [393, 394, 395, 398], "random": [393, 398], "between": [393, 394, 398], "other": [393, 711, 714], "handl": 393, "correl": [393, 398, 714], "fix": [393, 395, 398], "time": [393, 394, 470], "invari": 393, "v": 393, "differ": [393, 394, 398], "heteroskedast": [393, 398, 710, 714], "robust": [393, 398, 710], "cluster": [393, 395, 398, 700, 710], "entiti": [393, 394, 457], "prepar": 394, "panelol": [394, 398, 399, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517], "pool": [394, 398, 710], "implement": 395, "choic": 395, "r": [395, 398, 714, 783], "definit": 395, "randomeffect": [398, 526, 527, 528, 529, 530, 531, 532, 533], "betweenol": [398, 483, 484, 485, 486, 487, 488, 489, 490], "firstdifferenceol": [398, 499, 500, 501, 502, 503, 504, 505, 506], "pooledol": [398, 518, 519, 520, 521, 522, 523, 524, 525], "unadjust": 398, "driscol": 398, "kraai": 398, "calcul": [398, 714], "betweenr": 398, "overal": [398, 714], "within": 398, "withinr": 398, "comparison": 399, "famamacbeth": [399, 491, 492, 493, 494, 495, 496, 497, 498], "accovari": [400, 401, 402, 403, 404, 405, 406, 407], "allowed_kwarg": [401, 409, 417, 425, 435, 443], "default_kernel": [402, 410, 418, 426, 436, 444], "deferred_cov": [404, 412, 420, 430, 438, 446], "ep": [405, 413, 421, 431, 439, 447], "driscollkraai": [416, 417, 418, 419, 420, 421, 422, 423], "famamacbethcovari": [424, 425, 426, 427, 428, 429, 430, 431, 432, 433], "all_param": [427, 535], "paneldata": [450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474], "copi": [451, 878], "count": [452, 701], "demean": 454, "entity_id": 458, "first_differ": 459, "general_demean": 460, "index": [461, 703], "mean": 463, "nentiti": 465, "nvar": 467, "time_id": 471, "values2d": 472, "values3d": 473, "var": 474, "_panel": [475, 476, 477, 478, 479, 480, 481, 482], "from_arrai": 476, "item": [477, 880], "major_axi": 478, "minor_axi": 479, "to_fram": 481, "not_nul": [488, 496, 504, 513, 523, 531], "reformat_clust": [490, 498, 506, 516, 525, 533], "entity_effect": 508, "other_effect": [514, 704], "time_effect": 517, "famamacbethresult": [534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571], "avg_adj_rsquar": 536, "avg_rsquar": 537, "corr_squared_between": [539, 574, 628, 663], "corr_squared_overal": [540, 575, 629, 664], "corr_squared_within": [541, 576, 630, 665], "entity_info": [545, 580, 634, 669], "estimated_effect": [546, 581, 635, 670], "f_statistic_robust": [548, 584, 637, 672], "loglik": [551, 588, 640, 675], "rsquared_between": [561, 599, 620, 650, 685], "rsquared_overal": [562, 601, 621, 651, 686], "rsquared_within": [563, 602, 622, 652, 687], "time_info": [567, 606, 656, 692], "paneleffectsresult": [572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611], "f_pool": 582, "included_effect": 587, "other_info": 592, "rsquared_inclus": 600, "variance_decomposit": [609, 695], "panelmodelcomparison": [612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625], "panelresult": [626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660], "randomeffectsresult": [661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697], "theta": 691, "util": [699, 700, 701, 702, 703, 704, 705, 706, 862, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886], "panelmodeldata": [699, 700, 701, 702, 703, 704, 705], "generate_panel_data": 706, "plan": 708, "univari": 708, "dynam": 708, "system": [708, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "hac": 710, "roger": 710, "prespecifi": [710, 711], "residu": [710, 711], "diagon": 710, "cross": 710, "equat": [710, 712, 806, 841], "restrict": 710, "constraint": [710, 761, 772, 787], "multivari": 710, "common": 710, "dictionari": 711, "curli": 711, "brace": 711, "three": [712, 714], "3sl": [712, 714, 715], "direct": 712, "simultan": 712, "sure": 714, "memori": 714, "effici": 714, "homoskedast": 714, "measur": 714, "mcelroi": 714, "berndt": 714, "judg": 714, "dhryme": 714, "sigma": [719, 734, 738, 744, 747, 751, 757, 821, 855], "gmmheteroskedasticcovari": [720, 721, 722], "gmmhomoskedasticcovari": [723, 724, 725], "gmmkernelcovari": [726, 727, 728, 729, 730], "iv3sl": [759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769], "add_constraint": [760, 771, 786], "multivariate_iv": 766, "param_nam": [767, 777, 793], "reset_constraint": [769, 779, 795], "ivsystemgmm": [770, 771, 772, 773, 774, 775, 776, 777, 778, 779], "linearconstraint": [780, 781, 782, 783, 784], "q": 782, "multivariate_l": 792, "gmmsystemresult": [796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830], "breusch_pagan": [797, 832], "equation_label": [805, 840], "likelihood_ratio": [810, 844], "system_rsquar": [824, 858], "w": 827, "systemresult": [831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861], "contain": 862, "share": [863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886], "cov_clust": 863, "cov_kernel": 864, "group_debias_coeffici": 865, "hypothes": [866, 867, 868, 869, 870, 871, 872, 873, 874, 875], "invalidteststatist": [866, 867, 868, 869, 870], "critical_valu": [867, 872], "null": [868, 873], "pval": [869, 874], "stat": [870, 875], "waldteststatist": [871, 872, 873, 874, 875], "attrdict": [876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886], "clear": 877, "get": 879, "kei": 881, "pop": 882, "popitem": 883, "setdefault": 884}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"linearmodels.asset_pricing.results.GMMFactorModelResults.alphas": [[29, "linearmodels-asset-pricing-results-gmmfactormodelresults-alphas"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues": [[39, "linearmodels-asset-pricing-results-gmmfactormodelresults-pvalues"]], "linearmodels.asset_pricing.model.TradedFactorModel.fit": [[25, "linearmodels-asset-pricing-model-tradedfactormodel-fit"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia": [[61, "linearmodels-asset-pricing-results-linearfactormodelresults-risk-premia"]], "linearmodels.asset_pricing.covariance.KernelCovariance": [[7, "linearmodels-asset-pricing-covariance-kernelcovariance"]], "linearmodels.asset_pricing.covariance.KernelCovariance.s": [[14, "linearmodels-asset-pricing-covariance-kernelcovariance-s"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.nobs": [[37, "linearmodels-asset-pricing-results-gmmfactormodelresults-nobs"]], "linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian": [[11, "linearmodels-asset-pricing-covariance-kernelcovariance-inv-jacobian"]], "linearmodels.asset_pricing.results.LinearFactorModelResults": [[49, "linearmodels-asset-pricing-results-linearfactormodelresults"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.params": [[58, "linearmodels-asset-pricing-results-linearfactormodelresults-params"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats": [[63, "linearmodels-asset-pricing-results-linearfactormodelresults-risk-premia-tstats"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary": [[54, "linearmodels-asset-pricing-results-linearfactormodelresults-full-summary"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator": [[53, "linearmodels-asset-pricing-results-linearfactormodelresults-cov-estimator"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas": [[50, "linearmodels-asset-pricing-results-linearfactormodelresults-alphas"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se": [[62, "linearmodels-asset-pricing-results-linearfactormodelresults-risk-premia-se"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se": [[42, "linearmodels-asset-pricing-results-gmmfactormodelresults-risk-premia-se"]], "linearmodels.asset_pricing.model.TradedFactorModel": [[24, "linearmodels-asset-pricing-model-tradedfactormodel"]], "linearmodels.asset_pricing.model.LinearFactorModel.from_formula": [[19, "linearmodels-asset-pricing-model-linearfactormodel-from-formula"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss": [[40, "linearmodels-asset-pricing-results-gmmfactormodelresults-residual-ss"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square": [[6, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-square"]], "linearmodels.asset_pricing.model.LinearFactorModel": [[16, "linearmodels-asset-pricing-model-linearfactormodel"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian": [[3, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-inv-jacobian"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia": [[41, "linearmodels-asset-pricing-results-gmmfactormodelresults-risk-premia"]], "linearmodels.asset_pricing.results.GMMFactorModelResults": [[28, "linearmodels-asset-pricing-results-gmmfactormodelresults"]], "linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth": [[8, "linearmodels-asset-pricing-covariance-kernelcovariance-bandwidth"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM": [[20, "linearmodels-asset-pricing-model-linearfactormodelgmm"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.params": [[38, "linearmodels-asset-pricing-results-gmmfactormodelresults-params"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.cov": [[31, "linearmodels-asset-pricing-results-gmmfactormodelresults-cov"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit": [[21, "linearmodels-asset-pricing-model-linearfactormodelgmm-fit"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.betas": [[51, "linearmodels-asset-pricing-results-linearfactormodelresults-betas"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.cov": [[52, "linearmodels-asset-pricing-results-linearfactormodelresults-cov"]], "linearmodels.asset_pricing.model.TradedFactorModel.formula": [[26, "linearmodels-asset-pricing-model-tradedfactormodel-formula"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic": [[35, "linearmodels-asset-pricing-results-gmmfactormodelresults-j-statistic"]], "linearmodels.asset_pricing.covariance.KernelCovariance.cov": [[10, "linearmodels-asset-pricing-covariance-kernelcovariance-cov"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors": [[65, "linearmodels-asset-pricing-results-linearfactormodelresults-std-errors"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.name": [[36, "linearmodels-asset-pricing-results-gmmfactormodelresults-name"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian": [[4, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-jacobian"]], "linearmodels.asset_pricing.covariance.KernelCovariance.jacobian": [[12, "linearmodels-asset-pricing-covariance-kernelcovariance-jacobian"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared": [[64, "linearmodels-asset-pricing-results-linearfactormodelresults-rsquared"]], "linearmodels.asset_pricing.covariance.KernelCovariance.config": [[9, "linearmodels-asset-pricing-covariance-kernelcovariance-config"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss": [[47, "linearmodels-asset-pricing-results-gmmfactormodelresults-total-ss"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.iterations": [[34, "linearmodels-asset-pricing-results-gmmfactormodelresults-iterations"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic": [[55, "linearmodels-asset-pricing-results-linearfactormodelresults-j-statistic"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config": [[1, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-config"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.betas": [[30, "linearmodels-asset-pricing-results-gmmfactormodelresults-betas"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov": [[2, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-cov"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats": [[43, "linearmodels-asset-pricing-results-gmmfactormodelresults-risk-premia-tstats"]], "linearmodels.asset_pricing.model.LinearFactorModel.formula": [[18, "linearmodels-asset-pricing-model-linearfactormodel-formula"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors": [[45, "linearmodels-asset-pricing-results-gmmfactormodelresults-std-errors"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.name": [[56, "linearmodels-asset-pricing-results-linearfactormodelresults-name"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs": [[57, "linearmodels-asset-pricing-results-linearfactormodelresults-nobs"]], "linearmodels.asset_pricing.covariance.KernelCovariance.kernel": [[13, "linearmodels-asset-pricing-covariance-kernelcovariance-kernel"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary": [[33, "linearmodels-asset-pricing-results-gmmfactormodelresults-full-summary"]], "linearmodels.asset_pricing.covariance.KernelCovariance.square": [[15, "linearmodels-asset-pricing-covariance-kernelcovariance-square"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s": [[5, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance-s"]], "linearmodels.asset_pricing.model.TradedFactorModel.from_formula": [[27, "linearmodels-asset-pricing-model-tradedfactormodel-from-formula"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula": [[23, "linearmodels-asset-pricing-model-linearfactormodelgmm-from-formula"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared": [[44, "linearmodels-asset-pricing-results-gmmfactormodelresults-rsquared"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.tstats": [[48, "linearmodels-asset-pricing-results-gmmfactormodelresults-tstats"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues": [[59, "linearmodels-asset-pricing-results-linearfactormodelresults-pvalues"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss": [[60, "linearmodels-asset-pricing-results-linearfactormodelresults-residual-ss"]], "linearmodels.asset_pricing.model.LinearFactorModel.fit": [[17, "linearmodels-asset-pricing-model-linearfactormodel-fit"]], "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance": [[0, "linearmodels-asset-pricing-covariance-heteroskedasticcovariance"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.summary": [[46, "linearmodels-asset-pricing-results-gmmfactormodelresults-summary"]], "linearmodels.asset_pricing.model.LinearFactorModelGMM.formula": [[22, "linearmodels-asset-pricing-model-linearfactormodelgmm-formula"]], "linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator": [[32, "linearmodels-asset-pricing-results-gmmfactormodelresults-cov-estimator"]], "linearmodels.shared.covariance.group_debias_coefficient": [[865, "linearmodels-shared-covariance-group-debias-coefficient"]], "linearmodels.shared.utility.AttrDict.update": [[885, "linearmodels-shared-utility-attrdict-update"]], "linearmodels.shared.covariance.cov_kernel": [[864, "linearmodels-shared-covariance-cov-kernel"]], "linearmodels.shared.hypotheses.InvalidTestStatistic.pval": [[869, "linearmodels-shared-hypotheses-invalidteststatistic-pval"]], "linearmodels.shared.hypotheses.InvalidTestStatistic.stat": [[870, "linearmodels-shared-hypotheses-invalidteststatistic-stat"]], "linearmodels.shared.utility.AttrDict.copy": [[878, "linearmodels-shared-utility-attrdict-copy"]], "linearmodels.system.results.SystemResults.system_rsquared": [[858, "linearmodels-system-results-systemresults-system-rsquared"]], "linearmodels.system.results.SystemResults.total_ss": [[859, "linearmodels-system-results-systemresults-total-ss"]], "Utilities": [[862, "utilities"]], "Containers": [[862, "module-linearmodels.utility"]], "Hypothesis Testing": [[862, "hypothesis-testing"], [862, "id1"]], "linearmodels.shared.utility.AttrDict.values": [[886, "linearmodels-shared-utility-attrdict-values"]], "linearmodels.shared.hypotheses.WaldTestStatistic.pval": [[874, "linearmodels-shared-hypotheses-waldteststatistic-pval"]], "linearmodels.shared.utility.AttrDict.items": [[880, "linearmodels-shared-utility-attrdict-items"]], "linearmodels.shared.hypotheses.InvalidTestStatistic": [[866, "linearmodels-shared-hypotheses-invalidteststatistic"]], "linearmodels.shared.hypotheses.WaldTestStatistic.stat": [[875, "linearmodels-shared-hypotheses-waldteststatistic-stat"]], "linearmodels.shared.hypotheses.InvalidTestStatistic.null": [[868, "linearmodels-shared-hypotheses-invalidteststatistic-null"]], "linearmodels.shared.utility.AttrDict.pop": [[882, "linearmodels-shared-utility-attrdict-pop"]], "linearmodels.shared.hypotheses.WaldTestStatistic.critical_values": [[872, "linearmodels-shared-hypotheses-waldteststatistic-critical-values"]], "linearmodels.shared.hypotheses.WaldTestStatistic": [[871, "linearmodels-shared-hypotheses-waldteststatistic"]], "linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values": [[867, "linearmodels-shared-hypotheses-invalidteststatistic-critical-values"]], "linearmodels.shared.hypotheses.WaldTestStatistic.null": [[873, "linearmodels-shared-hypotheses-waldteststatistic-null"]], "linearmodels.system.results.SystemResults.wresids": [[861, "linearmodels-system-results-systemresults-wresids"]], "linearmodels.shared.utility.AttrDict.setdefault": [[884, "linearmodels-shared-utility-attrdict-setdefault"]], "linearmodels.shared.covariance.cov_cluster": [[863, "linearmodels-shared-covariance-cov-cluster"]], "linearmodels.shared.utility.AttrDict.get": [[879, "linearmodels-shared-utility-attrdict-get"]], "linearmodels.shared.utility.AttrDict.keys": [[881, "linearmodels-shared-utility-attrdict-keys"]], "linearmodels.system.results.SystemResults.tstats": [[860, "linearmodels-system-results-systemresults-tstats"]], "linearmodels.shared.utility.AttrDict.clear": [[877, "linearmodels-shared-utility-attrdict-clear"]], "linearmodels.shared.utility.AttrDict.popitem": [[883, "linearmodels-shared-utility-attrdict-popitem"]], "linearmodels.shared.utility.AttrDict": [[876, "linearmodels-shared-utility-attrdict"]], "linearmodels.system.model.SUR.reset_constraints": [[795, "linearmodels-system-model-sur-reset-constraints"]], "linearmodels.system.results.GMMSystemResults.debiased": [[802, "linearmodels-system-results-gmmsystemresults-debiased"]], "linearmodels.system.results.GMMSystemResults.resids": [[819, "linearmodels-system-results-gmmsystemresults-resids"]], "linearmodels.system.results.GMMSystemResults.sigma": [[821, "linearmodels-system-results-gmmsystemresults-sigma"]], "linearmodels.system.results.GMMSystemResults.resid_ss": [[818, "linearmodels-system-results-gmmsystemresults-resid-ss"]], "linearmodels.system.results.GMMSystemResults.nobs": [[814, "linearmodels-system-results-gmmsystemresults-nobs"]], "linearmodels.system.results.SystemResults.df_model": [[838, "linearmodels-system-results-systemresults-df-model"]], "linearmodels.system.results.GMMSystemResults": [[796, "linearmodels-system-results-gmmsystemresults"]], "linearmodels.system.results.GMMSystemResults.df_model": [[803, "linearmodels-system-results-gmmsystemresults-df-model"]], "linearmodels.system.results.SystemResults.params": [[849, "linearmodels-system-results-systemresults-params"]], "linearmodels.system.results.GMMSystemResults.equations": [[806, "linearmodels-system-results-gmmsystemresults-equations"]], "linearmodels.system.results.GMMSystemResults.model_ss": [[813, "linearmodels-system-results-gmmsystemresults-model-ss"]], "linearmodels.system.results.GMMSystemResults.summary": [[823, "linearmodels-system-results-gmmsystemresults-summary"]], "linearmodels.system.results.GMMSystemResults.conf_int": [[798, "linearmodels-system-results-gmmsystemresults-conf-int"]], "linearmodels.system.results.GMMSystemResults.wresids": [[830, "linearmodels-system-results-gmmsystemresults-wresids"]], "linearmodels.system.results.SystemResults.model": [[846, "linearmodels-system-results-systemresults-model"]], "linearmodels.system.results.GMMSystemResults.method": [[811, "linearmodels-system-results-gmmsystemresults-method"]], "linearmodels.system.results.GMMSystemResults.weight_type": [[829, "linearmodels-system-results-gmmsystemresults-weight-type"]], "linearmodels.system.results.SystemResults.equations": [[841, "linearmodels-system-results-systemresults-equations"]], "linearmodels.system.results.SystemResults.sigma": [[855, "linearmodels-system-results-systemresults-sigma"]], "linearmodels.system.results.GMMSystemResults.fitted_values": [[807, "linearmodels-system-results-gmmsystemresults-fitted-values"]], "linearmodels.system.results.GMMSystemResults.iterations": [[808, "linearmodels-system-results-gmmsystemresults-iterations"]], "linearmodels.system.results.SystemResults.resid_ss": [[852, "linearmodels-system-results-systemresults-resid-ss"]], "linearmodels.system.results.SystemResults.df_resid": [[839, "linearmodels-system-results-systemresults-df-resid"]], "linearmodels.system.model.SUR.predict": [[794, "linearmodels-system-model-sur-predict"]], "linearmodels.system.results.GMMSystemResults.df_resid": [[804, "linearmodels-system-results-gmmsystemresults-df-resid"]], "linearmodels.system.results.SystemResults.model_ss": [[847, "linearmodels-system-results-systemresults-model-ss"]], "linearmodels.system.results.GMMSystemResults.cov_estimator": [[801, "linearmodels-system-results-gmmsystemresults-cov-estimator"]], "linearmodels.system.results.GMMSystemResults.cov": [[799, "linearmodels-system-results-gmmsystemresults-cov"]], "linearmodels.system.results.GMMSystemResults.system_rsquared": [[824, "linearmodels-system-results-gmmsystemresults-system-rsquared"]], "linearmodels.system.results.SystemResults.predict": [[850, "linearmodels-system-results-systemresults-predict"]], "linearmodels.system.results.SystemResults.summary": [[857, "linearmodels-system-results-systemresults-summary"]], "linearmodels.system.results.SystemResults.breusch_pagan": [[832, "linearmodels-system-results-systemresults-breusch-pagan"]], "linearmodels.system.results.SystemResults.fitted_values": [[842, "linearmodels-system-results-systemresults-fitted-values"]], "linearmodels.system.results.SystemResults.conf_int": [[833, "linearmodels-system-results-systemresults-conf-int"]], "linearmodels.system.results.GMMSystemResults.pvalues": [[817, "linearmodels-system-results-gmmsystemresults-pvalues"]], "linearmodels.system.results.GMMSystemResults.predict": [[816, "linearmodels-system-results-gmmsystemresults-predict"]], "linearmodels.system.results.SystemResults.cov": [[834, "linearmodels-system-results-systemresults-cov"]], "linearmodels.system.results.GMMSystemResults.std_errors": [[822, "linearmodels-system-results-gmmsystemresults-std-errors"]], "linearmodels.system.results.SystemResults.pvalues": [[851, "linearmodels-system-results-systemresults-pvalues"]], "linearmodels.system.results.SystemResults.debiased": [[837, "linearmodels-system-results-systemresults-debiased"]], "linearmodels.system.results.GMMSystemResults.w": [[827, "linearmodels-system-results-gmmsystemresults-w"]], "linearmodels.system.results.GMMSystemResults.breusch_pagan": [[797, "linearmodels-system-results-gmmsystemresults-breusch-pagan"]], "linearmodels.system.results.SystemResults.equation_labels": [[840, "linearmodels-system-results-systemresults-equation-labels"]], "linearmodels.system.results.SystemResults.cov_estimator": [[836, "linearmodels-system-results-systemresults-cov-estimator"]], "linearmodels.system.results.SystemResults.likelihood_ratio": [[844, "linearmodels-system-results-systemresults-likelihood-ratio"]], "linearmodels.system.results.GMMSystemResults.model": [[812, "linearmodels-system-results-gmmsystemresults-model"]], "linearmodels.system.results.GMMSystemResults.params": [[815, "linearmodels-system-results-gmmsystemresults-params"]], "linearmodels.system.results.GMMSystemResults.cov_config": [[800, "linearmodels-system-results-gmmsystemresults-cov-config"]], "linearmodels.system.results.GMMSystemResults.likelihood_ratio": [[810, "linearmodels-system-results-gmmsystemresults-likelihood-ratio"]], "linearmodels.system.results.GMMSystemResults.rsquared": [[820, "linearmodels-system-results-gmmsystemresults-rsquared"]], "linearmodels.system.results.SystemResults.iterations": [[843, "linearmodels-system-results-systemresults-iterations"]], "linearmodels.system.results.GMMSystemResults.total_ss": [[825, "linearmodels-system-results-gmmsystemresults-total-ss"]], "linearmodels.system.results.GMMSystemResults.tstats": [[826, "linearmodels-system-results-gmmsystemresults-tstats"]], "linearmodels.system.results.SystemResults.nobs": [[848, "linearmodels-system-results-systemresults-nobs"]], "linearmodels.system.results.GMMSystemResults.j_stat": [[809, "linearmodels-system-results-gmmsystemresults-j-stat"]], "linearmodels.system.results.SystemResults": [[831, "linearmodels-system-results-systemresults"]], "linearmodels.system.model.SUR.param_names": [[793, "linearmodels-system-model-sur-param-names"]], "linearmodels.system.model.SUR.multivariate_ls": [[792, "linearmodels-system-model-sur-multivariate-ls"]], "linearmodels.system.results.SystemResults.std_errors": [[856, "linearmodels-system-results-systemresults-std-errors"]], "linearmodels.system.results.GMMSystemResults.equation_labels": [[805, "linearmodels-system-results-gmmsystemresults-equation-labels"]], "linearmodels.system.results.SystemResults.cov_config": [[835, "linearmodels-system-results-systemresults-cov-config"]], "linearmodels.system.results.GMMSystemResults.weight_config": [[828, "linearmodels-system-results-gmmsystemresults-weight-config"]], "linearmodels.system.results.SystemResults.rsquared": [[854, "linearmodels-system-results-systemresults-rsquared"]], "linearmodels.system.results.SystemResults.method": [[845, "linearmodels-system-results-systemresults-method"]], "linearmodels.system.results.SystemResults.resids": [[853, "linearmodels-system-results-systemresults-resids"]], "linearmodels.system.covariance.KernelCovariance.bandwidth": [[740, "linearmodels-system-covariance-kernelcovariance-bandwidth"]], "linearmodels.system.covariance.HomoskedasticCovariance": [[735, "linearmodels-system-covariance-homoskedasticcovariance"]], "linearmodels.system.covariance.HomoskedasticCovariance.cov": [[736, "linearmodels-system-covariance-homoskedasticcovariance-cov"]], "linearmodels.system.model.SUR.from_formula": [[790, "linearmodels-system-model-sur-from-formula"]], "linearmodels.system.model.IV3SLS.param_names": [[767, "linearmodels-system-model-iv3sls-param-names"]], "linearmodels.system.model.LinearConstraint.r": [[783, "linearmodels-system-model-linearconstraint-r"]], "linearmodels.system.model.IV3SLS": [[759, "linearmodels-system-model-iv3sls"]], "linearmodels.system.model.IVSystemGMM.predict": [[778, "linearmodels-system-model-ivsystemgmm-predict"]], "linearmodels.system.model.IVSystemGMM.constraints": [[772, "linearmodels-system-model-ivsystemgmm-constraints"]], "linearmodels.system.covariance.KernelCovariance.cov_config": [[742, "linearmodels-system-covariance-kernelcovariance-cov-config"]], "linearmodels.system.model.IVSystemGMM": [[770, "linearmodels-system-model-ivsystemgmm"]], "linearmodels.system.model.IVSystemGMM.from_formula": [[775, "linearmodels-system-model-ivsystemgmm-from-formula"]], "linearmodels.system.covariance.HomoskedasticCovariance.cov_config": [[737, "linearmodels-system-covariance-homoskedasticcovariance-cov-config"]], "linearmodels.system.model.LinearConstraint.a": [[781, "linearmodels-system-model-linearconstraint-a"]], "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix": [[758, "linearmodels-system-gmm-kernelweightmatrix-weight-matrix"]], "linearmodels.system.model.IVSystemGMM.reset_constraints": [[779, "linearmodels-system-model-ivsystemgmm-reset-constraints"]], "linearmodels.system.covariance.HeteroskedasticCovariance.cov_config": [[733, "linearmodels-system-covariance-heteroskedasticcovariance-cov-config"]], "linearmodels.system.model.IV3SLS.from_formula": [[764, "linearmodels-system-model-iv3sls-from-formula"]], "linearmodels.system.model.IVSystemGMM.fit": [[773, "linearmodels-system-model-ivsystemgmm-fit"]], "linearmodels.system.covariance.KernelCovariance.cov": [[741, "linearmodels-system-covariance-kernelcovariance-cov"]], "linearmodels.system.covariance.GMMKernelCovariance.bandwidth": [[727, "linearmodels-system-covariance-gmmkernelcovariance-bandwidth"]], "linearmodels.system.model.IVSystemGMM.formula": [[774, "linearmodels-system-model-ivsystemgmm-formula"]], "linearmodels.system.gmm.KernelWeightMatrix": [[753, "linearmodels-system-gmm-kernelweightmatrix"]], "linearmodels.system.covariance.KernelCovariance.kernel": [[743, "linearmodels-system-covariance-kernelcovariance-kernel"]], "linearmodels.system.covariance.GMMKernelCovariance.cov_config": [[729, "linearmodels-system-covariance-gmmkernelcovariance-cov-config"]], "linearmodels.system.model.IVSystemGMM.has_constant": [[776, "linearmodels-system-model-ivsystemgmm-has-constant"]], "linearmodels.system.model.IV3SLS.formula": [[763, "linearmodels-system-model-iv3sls-formula"]], "linearmodels.system.model.SUR.fit": [[788, "linearmodels-system-model-sur-fit"]], "linearmodels.system.model.IV3SLS.fit": [[762, "linearmodels-system-model-iv3sls-fit"]], "linearmodels.system.model.IV3SLS.predict": [[768, "linearmodels-system-model-iv3sls-predict"]], "linearmodels.system.model.LinearConstraint": [[780, "linearmodels-system-model-linearconstraint"]], "linearmodels.system.model.IV3SLS.reset_constraints": [[769, "linearmodels-system-model-iv3sls-reset-constraints"]], "linearmodels.system.covariance.HeteroskedasticCovariance.cov": [[732, "linearmodels-system-covariance-heteroskedasticcovariance-cov"]], "linearmodels.system.covariance.KernelCovariance.sigma": [[744, "linearmodels-system-covariance-kernelcovariance-sigma"]], "linearmodels.system.model.SUR.formula": [[789, "linearmodels-system-model-sur-formula"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix": [[748, "linearmodels-system-gmm-heteroskedasticweightmatrix-weight-matrix"]], "linearmodels.system.covariance.GMMKernelCovariance": [[726, "linearmodels-system-covariance-gmmkernelcovariance"]], "linearmodels.system.model.IVSystemGMM.param_names": [[777, "linearmodels-system-model-ivsystemgmm-param-names"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma": [[751, "linearmodels-system-gmm-homoskedasticweightmatrix-sigma"]], "linearmodels.system.covariance.HomoskedasticCovariance.sigma": [[738, "linearmodels-system-covariance-homoskedasticcovariance-sigma"]], "linearmodels.system.model.SUR.has_constant": [[791, "linearmodels-system-model-sur-has-constant"]], "linearmodels.system.gmm.KernelWeightMatrix.config": [[755, "linearmodels-system-gmm-kernelweightmatrix-config"]], "linearmodels.system.model.LinearConstraint.q": [[782, "linearmodels-system-model-linearconstraint-q"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix.config": [[750, "linearmodels-system-gmm-homoskedasticweightmatrix-config"]], "linearmodels.system.covariance.KernelCovariance": [[739, "linearmodels-system-covariance-kernelcovariance"]], "linearmodels.system.model.SUR": [[785, "linearmodels-system-model-sur"]], "linearmodels.system.gmm.KernelWeightMatrix.sigma": [[757, "linearmodels-system-gmm-kernelweightmatrix-sigma"]], "linearmodels.system.covariance.HeteroskedasticCovariance.sigma": [[734, "linearmodels-system-covariance-heteroskedasticcovariance-sigma"]], "linearmodels.system.model.IV3SLS.has_constant": [[765, "linearmodels-system-model-iv3sls-has-constant"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix": [[749, "linearmodels-system-gmm-homoskedasticweightmatrix"]], "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix": [[752, "linearmodels-system-gmm-homoskedasticweightmatrix-weight-matrix"]], "linearmodels.system.gmm.KernelWeightMatrix.kernel": [[756, "linearmodels-system-gmm-kernelweightmatrix-kernel"]], "linearmodels.system.model.IV3SLS.constraints": [[761, "linearmodels-system-model-iv3sls-constraints"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma": [[747, "linearmodels-system-gmm-heteroskedasticweightmatrix-sigma"]], "linearmodels.system.model.IVSystemGMM.add_constraints": [[771, "linearmodels-system-model-ivsystemgmm-add-constraints"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix": [[745, "linearmodels-system-gmm-heteroskedasticweightmatrix"]], "linearmodels.system.covariance.HeteroskedasticCovariance": [[731, "linearmodels-system-covariance-heteroskedasticcovariance"]], "linearmodels.system.gmm.KernelWeightMatrix.bandwidth": [[754, "linearmodels-system-gmm-kernelweightmatrix-bandwidth"]], "linearmodels.system.model.IV3SLS.multivariate_iv": [[766, "linearmodels-system-model-iv3sls-multivariate-iv"]], "linearmodels.system.model.LinearConstraint.t": [[784, "linearmodels-system-model-linearconstraint-t"]], "linearmodels.system.covariance.GMMKernelCovariance.cov": [[728, "linearmodels-system-covariance-gmmkernelcovariance-cov"]], "linearmodels.system.model.IV3SLS.add_constraints": [[760, "linearmodels-system-model-iv3sls-add-constraints"]], "linearmodels.system.model.SUR.add_constraints": [[786, "linearmodels-system-model-sur-add-constraints"]], "linearmodels.system.model.SUR.constraints": [[787, "linearmodels-system-model-sur-constraints"]], "linearmodels.system.gmm.HeteroskedasticWeightMatrix.config": [[746, "linearmodels-system-gmm-heteroskedasticweightmatrix-config"]], "linearmodels.system.covariance.GMMKernelCovariance.kernel": [[730, "linearmodels-system-covariance-gmmkernelcovariance-kernel"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss": [[67, "linearmodels-asset-pricing-results-linearfactormodelresults-total-ss"]], "linearmodels.iv.absorbing.AbsorbingLSResults.conf_int": [[101, "linearmodels-iv-absorbing-absorbinglsresults-conf-int"]], "linearmodels.iv.absorbing.AbsorbingLSResults.summary": [[125, "linearmodels-iv-absorbing-absorbinglsresults-summary"]], "linearmodels.iv.absorbing.AbsorbingLS.has_constant": [[93, "linearmodels-iv-absorbing-absorbingls-has-constant"]], "linearmodels.iv.absorbing.AbsorbingLSResults.tstats": [[127, "linearmodels-iv-absorbing-absorbinglsresults-tstats"]], "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared": [[121, "linearmodels-iv-absorbing-absorbinglsresults-rsquared"]], "linearmodels.iv.absorbing.AbsorbingLSResults.params": [[117, "linearmodels-iv-absorbing-absorbinglsresults-params"]], "linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss": [[119, "linearmodels-iv-absorbing-absorbinglsresults-resid-ss"]], "linearmodels.compat.statsmodels.Summary.add_extra_txt": [[78, "linearmodels-compat-statsmodels-summary-add-extra-txt"]], "linearmodels.iv.absorbing.AbsorbingLS.weights": [[96, "linearmodels-iv-absorbing-absorbingls-weights"]], "linearmodels.iv.absorbing.AbsorbingLS.wresids": [[97, "linearmodels-iv-absorbing-absorbingls-wresids"]], "linearmodels.iv.absorbing.AbsorbingLSResults.cov_type": [[105, "linearmodels-iv-absorbing-absorbinglsresults-cov-type"]], "linearmodels.iv.absorbing.AbsorbingLSResults.s2": [[123, "linearmodels-iv-absorbing-absorbinglsresults-s2"]], "linearmodels.compat.statsmodels.Summary.as_text": [[84, "linearmodels-compat-statsmodels-summary-as-text"]], "linearmodels.iv.absorbing.AbsorbingLSResults.df_model": [[108, "linearmodels-iv-absorbing-absorbinglsresults-df-model"]], "linearmodels.iv.absorbing.AbsorbingLSResults.method": [[114, "linearmodels-iv-absorbing-absorbinglsresults-method"]], "linearmodels.iv.absorbing.AbsorbingLSResults": [[98, "linearmodels-iv-absorbing-absorbinglsresults"]], "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj": [[122, "linearmodels-iv-absorbing-absorbinglsresults-rsquared-adj"]], "linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic": [[113, "linearmodels-iv-absorbing-absorbinglsresults-idiosyncratic"]], "linearmodels.compat.statsmodels.Summary.add_table_params": [[80, "linearmodels-compat-statsmodels-summary-add-table-params"]], "linearmodels.iv.absorbing.AbsorbingLS.dependent": [[90, "linearmodels-iv-absorbing-absorbingls-dependent"]], "linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values": [[111, "linearmodels-iv-absorbing-absorbinglsresults-fitted-values"]], "Using Formulas": [[70, "Using-Formulas"]], "Available Syntax": [[70, "Available-Syntax"]], "Test Portfolios and Factors": [[70, "Test-Portfolios-and-Factors"]], "Factors Only": [[70, "Factors-Only"]], "Import data and transform to be excess returns": [[70, "Import-data-and-transform-to-be-excess-returns"]], "First Syntax": [[70, "First-Syntax"]], "Second Syntax": [[70, "Second-Syntax"]], "Comparing results": [[70, "Comparing-results"], [147, "Comparing-results"], [145, "Comparing-results"]], "linearmodels.iv.absorbing.AbsorbingLSResults.cov": [[102, "linearmodels-iv-absorbing-absorbinglsresults-cov"]], "linearmodels.iv.absorbing.AbsorbingLSResults.resids": [[120, "linearmodels-iv-absorbing-absorbinglsresults-resids"]], "linearmodels.iv.absorbing.AbsorbingLS.exog": [[91, "linearmodels-iv-absorbing-absorbingls-exog"]], "linearmodels.compat.statsmodels.Summary.as_html": [[82, "linearmodels-compat-statsmodels-summary-as-html"]], "Introduction": [[72, "introduction"], [397, "introduction"], [149, "introduction"]], "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects": [[99, "linearmodels-iv-absorbing-absorbinglsresults-absorbed-effects"]], "linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic": [[110, "linearmodels-iv-absorbing-absorbinglsresults-f-statistic"]], "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog": [[89, "linearmodels-iv-absorbing-absorbingls-absorbed-exog"]], "linearmodels.iv.absorbing.AbsorbingLSResults.debiased": [[106, "linearmodels-iv-absorbing-absorbinglsresults-debiased"]], "linearmodels.iv.absorbing.AbsorbingLS.fit": [[92, "linearmodels-iv-absorbing-absorbingls-fit"]], "linearmodels.iv.absorbing.AbsorbingLSResults.nobs": [[116, "linearmodels-iv-absorbing-absorbinglsresults-nobs"]], "linearmodels.iv.absorbing.AbsorbingRegressor": [[130, "linearmodels-iv-absorbing-absorbingregressor"]], "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent": [[88, "linearmodels-iv-absorbing-absorbingls-absorbed-dependent"]], "linearmodels.iv.absorbing.AbsorbingLSResults.model_ss": [[115, "linearmodels-iv-absorbing-absorbinglsresults-model-ss"]], "Linear Factor Models for Asset Pricing": [[71, "linear-factor-models-for-asset-pricing"]], "Formulas and Mathematical Detail": [[73, "formulas-and-mathematical-detail"], [398, "formulas-and-mathematical-detail"], [390, "formulas-and-mathematical-detail"]], "Linear Factor Model for Traded Factors": [[73, "linear-factor-model-for-traded-factors"]], "The J statistic": [[73, "the-j-statistic"], [73, "id1"]], "Linear Factor Model for Non-traded Factors": [[73, "linear-factor-model-for-non-traded-factors"]], "Improved Specification using GLS": [[73, "improved-specification-using-gls"]], "GMM Estimation of Linear Factor Models": [[73, "gmm-estimation-of-linear-factor-models"]], "Module Reference": [[74, "module-reference"], [715, "module-reference"], [707, "module-reference"], [391, "module-reference"]], "Linear Asset Pricing Models": [[74, "module-linearmodels.asset_pricing.model"]], "Estimation Results": [[74, "module-linearmodels.asset_pricing.results"], [715, "module-linearmodels.system.results"], [707, "module-linearmodels.panel.results"], [391, "module-linearmodels.iv.results"]], "Linear Asset Pricing Model Covariance Estimators": [[74, "module-linearmodels.asset_pricing.covariance"]], "linearmodels.iv.absorbing.AbsorbingLS.instruments": [[94, "linearmodels-iv-absorbing-absorbingls-instruments"]], "linearmodels.iv.absorbing.AbsorbingLSResults.has_constant": [[112, "linearmodels-iv-absorbing-absorbinglsresults-has-constant"]], "linearmodels.compat.statsmodels.Summary": [[77, "linearmodels-compat-statsmodels-summary"]], "linearmodels.iv.absorbing.AbsorbingLS.resids": [[95, "linearmodels-iv-absorbing-absorbingls-resids"]], "linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed": [[107, "linearmodels-iv-absorbing-absorbinglsresults-df-absorbed"]], "linearmodels.iv.absorbing.AbsorbingLSResults.wresids": [[129, "linearmodels-iv-absorbing-absorbinglsresults-wresids"]], "Contributing": [[85, "contributing"]], "linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank": [[131, "linearmodels-iv-absorbing-absorbingregressor-approx-rank"]], "linearmodels.compat.statsmodels.Summary.as_csv": [[81, "linearmodels-compat-statsmodels-summary-as-csv"]], "linearmodels.iv.absorbing.AbsorbingLS": [[87, "linearmodels-iv-absorbing-absorbingls"]], "Change Log": [[75, "change-log"]], "Version 4.29": [[75, "version-4-29"]], "Version 4.28": [[75, "version-4-28"]], "Version 4.27": [[75, "version-4-27"]], "Version 4.26": [[75, "version-4-26"]], "Version 4.25": [[75, "version-4-25"]], "Version 4.24": [[75, "version-4-24"]], "Version 4.21": [[75, "version-4-21"]], "Version 4.20": [[75, "version-4-20"]], "Version 4.19": [[75, "version-4-19"]], "Version 4.18": [[75, "version-4-18"]], "Version 4.17": [[75, "version-4-17"]], "Version 4.16": [[75, "version-4-16"]], "Version 4.15": [[75, "version-4-15"]], "Version 4.14": [[75, "version-4-14"]], "Version 4.13": [[75, "version-4-13"]], "Version 4.12": [[75, "version-4-12"]], "Version 4.11": [[75, "version-4-11"]], "Version 4.10": [[75, "version-4-10"]], "Version 4.9": [[75, "version-4-9"]], "Version 4.8": [[75, "version-4-8"]], "Version 4.7": [[75, "version-4-7"]], "Version 4.6": [[75, "version-4-6"]], "Version 4.5": [[75, "version-4-5"]], "Version 4.0": [[75, "version-4-0"]], "Version 3.0": [[75, "version-3-0"]], "Version 2.0": [[75, "version-2-0"]], "Version 1.0": [[75, "version-1-0"]], "linearmodels.iv.absorbing.AbsorbingLSResults.pvalues": [[118, "linearmodels-iv-absorbing-absorbinglsresults-pvalues"]], "linearmodels.iv.absorbing.AbsorbingLSResults.total_ss": [[126, "linearmodels-iv-absorbing-absorbinglsresults-total-ss"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats": [[68, "linearmodels-asset-pricing-results-linearfactormodelresults-tstats"]], "linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator": [[104, "linearmodels-iv-absorbing-absorbinglsresults-cov-estimator"]], "linearmodels.iv.absorbing.AbsorbingLSResults.std_errors": [[124, "linearmodels-iv-absorbing-absorbinglsresults-std-errors"]], "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared": [[100, "linearmodels-iv-absorbing-absorbinglsresults-absorbed-rsquared"]], "linearmodels.iv.absorbing.AbsorbingLSResults.cov_config": [[103, "linearmodels-iv-absorbing-absorbinglsresults-cov-config"]], "linearmodels.asset_pricing.results.LinearFactorModelResults.summary": [[66, "linearmodels-asset-pricing-results-linearfactormodelresults-summary"]], "linearmodels.compat.statsmodels.Summary.add_table_2cols": [[79, "linearmodels-compat-statsmodels-summary-add-table-2cols"]], "linearmodels.compat.statsmodels.Summary.as_latex": [[83, "linearmodels-compat-statsmodels-summary-as-latex"]], "Compatibility": [[76, "compatibility"]], "Summaries": [[76, "module-linearmodels.compat.statsmodels"]], "linearmodels.iv.absorbing.AbsorbingLSResults.wald_test": [[128, "linearmodels-iv-absorbing-absorbinglsresults-wald-test"]], "linearmodels": [[86, "linearmodels"]], "Indices": [[86, "indices"]], "linearmodels.iv.absorbing.AbsorbingLSResults.df_resid": [[109, "linearmodels-iv-absorbing-absorbinglsresults-df-resid"]], "Examples": [[69, "Examples"], [710, "Examples"], [393, "Examples"]], "General Setup": [[69, "General-Setup"]], "Import data": [[69, "Import-data"]], "Transform the portfolios to be excesses": [[69, "Transform-the-portfolios-to-be-excesses"]], "1-Step Estimation using Seemingly Unrelated Regression (SUR)": [[69, "1-Step-Estimation-using-Seemingly-Unrelated-Regression-(SUR)"]], "2-Step Estimation": [[69, "2-Step-Estimation"]], "GMM Estimation": [[69, "GMM-Estimation"], [145, "GMM-Estimation"], [149, "gmm-estimation"]], "Iterating until convergence": [[69, "Iterating-until-convergence"]], "Continuously Updating Estimator": [[69, "Continuously-Updating-Estimator"]], "linearmodels.panel.results.RandomEffectsResults.idiosyncratic": [[674, "linearmodels-panel-results-randomeffectsresults-idiosyncratic"]], "linearmodels.panel.results.RandomEffectsResults.total_ss": [[693, "linearmodels-panel-results-randomeffectsresults-total-ss"]], "linearmodels.panel.results.RandomEffectsResults.rsquared_overall": [[686, "linearmodels-panel-results-randomeffectsresults-rsquared-overall"]], "linearmodels.panel.results.RandomEffectsResults.corr_squared_within": [[665, "linearmodels-panel-results-randomeffectsresults-corr-squared-within"]], "linearmodels.panel.results.RandomEffectsResults.estimated_effects": [[670, "linearmodels-panel-results-randomeffectsresults-estimated-effects"]], "linearmodels.panel.results.RandomEffectsResults.corr_squared_overall": [[664, "linearmodels-panel-results-randomeffectsresults-corr-squared-overall"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config": [[725, "linearmodels-system-covariance-gmmhomoskedasticcovariance-cov-config"]], "linearmodels.panel.results.RandomEffectsResults.cov": [[666, "linearmodels-panel-results-randomeffectsresults-cov"]], "linearmodels.panel.results.RandomEffectsResults.nobs": [[678, "linearmodels-panel-results-randomeffectsresults-nobs"]], "linearmodels.panel.results.RandomEffectsResults.loglik": [[675, "linearmodels-panel-results-randomeffectsresults-loglik"]], "linearmodels.panel.results.RandomEffectsResults.f_statistic": [[671, "linearmodels-panel-results-randomeffectsresults-f-statistic"]], "linearmodels.panel.utility.PanelModelData.weights": [[705, "linearmodels-panel-utility-panelmodeldata-weights"]], "linearmodels.panel.results.RandomEffectsResults.predict": [[680, "linearmodels-panel-results-randomeffectsresults-predict"]], "linearmodels.panel.results.RandomEffectsResults.wresids": [[697, "linearmodels-panel-results-randomeffectsresults-wresids"]], "System Regression Estimators": [[715, "module-linearmodels.system.model"]], "System Regression Estimator Covariance Estimation": [[715, "module-linearmodels.system.covariance"]], "SUR and 3SLS": [[715, "sur-and-3sls"]], "Generalized Method of Moments (GMM)": [[715, "generalized-method-of-moments-gmm"], [390, "generalized-method-of-moments-gmm"]], "GMM Moment Weighting": [[715, "module-linearmodels.system.gmm"]], "linearmodels.panel.results.RandomEffectsResults.corr_squared_between": [[663, "linearmodels-panel-results-randomeffectsresults-corr-squared-between"]], "linearmodels.panel.results.RandomEffectsResults.pvalues": [[681, "linearmodels-panel-results-randomeffectsresults-pvalues"]], "linearmodels.panel.results.RandomEffectsResults.rsquared_within": [[687, "linearmodels-panel-results-randomeffectsresults-rsquared-within"]], "linearmodels.panel.results.RandomEffectsResults.conf_int": [[662, "linearmodels-panel-results-randomeffectsresults-conf-int"]], "linearmodels.panel.results.compare": [[698, "linearmodels-panel-results-compare"]], "References": [[709, "references"]], "linearmodels.panel.results.RandomEffectsResults.resids": [[683, "linearmodels-panel-results-randomeffectsresults-resids"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance": [[723, "linearmodels-system-covariance-gmmhomoskedasticcovariance"]], "linearmodels.panel.utility.PanelModelData": [[699, "linearmodels-panel-utility-panelmodeldata"]], "linearmodels.system.covariance.ClusteredCovariance.sigma": [[719, "linearmodels-system-covariance-clusteredcovariance-sigma"]], "linearmodels.panel.results.RandomEffectsResults.s2": [[688, "linearmodels-panel-results-randomeffectsresults-s2"]], "linearmodels.panel.results.RandomEffectsResults.rsquared_between": [[685, "linearmodels-panel-results-randomeffectsresults-rsquared-between"]], "Data": [[710, "Data"], [712, "Data"]], "Basic Usage": [[710, "Basic-Usage"], [147, "Basic-Usage"]], "Estimation Options": [[710, "Estimation-Options"]], "Iterative GLS": [[710, "Iterative-GLS"]], "Alternative Covariance Estimators": [[710, "Alternative-Covariance-Estimators"]], "Heteroskedasticity Robust Covariance Estimation": [[710, "Heteroskedasticity-Robust-Covariance-Estimation"]], "Kernel (HAC)": [[710, "Kernel-(HAC)"]], "Clustered (Rogers)": [[710, "Clustered-(Rogers)"]], "Prespecified Residual Covariance Estimators": [[710, "Prespecified-Residual-Covariance-Estimators"]], "Diagonal Residual Covariance": [[710, "Diagonal-Residual-Covariance"]], "Cross-Equation Restrictions": [[710, "Cross-Equation-Restrictions"]], "Pooling using constraints": [[710, "Pooling-using-constraints"]], "Multivariate OLS": [[710, "Multivariate-OLS"]], "Using GLS with common regressors": [[710, "Using-GLS-with-common-regressors"]], "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov": [[724, "linearmodels-system-covariance-gmmhomoskedasticcovariance-cov"]], "linearmodels.panel.results.RandomEffectsResults.df_resid": [[668, "linearmodels-panel-results-randomeffectsresults-df-resid"]], "linearmodels.panel.results.RandomEffectsResults.theta": [[691, "linearmodels-panel-results-randomeffectsresults-theta"]], "linearmodels.panel.results.RandomEffectsResults.name": [[677, "linearmodels-panel-results-randomeffectsresults-name"]], "System Regression Models": [[713, "system-regression-models"]], "linearmodels.system.covariance.ClusteredCovariance.cov_config": [[718, "linearmodels-system-covariance-clusteredcovariance-cov-config"]], "linearmodels.panel.utility.generate_panel_data": [[706, "linearmodels-panel-utility-generate-panel-data"]], "linearmodels.panel.results.RandomEffectsResults.entity_info": [[669, "linearmodels-panel-results-randomeffectsresults-entity-info"]], "linearmodels.panel.results.RandomEffectsResults": [[661, "linearmodels-panel-results-randomeffectsresults"]], "linearmodels.panel.results.RandomEffectsResults.std_errors": [[689, "linearmodels-panel-results-randomeffectsresults-std-errors"]], "linearmodels.panel.results.RandomEffectsResults.time_info": [[692, "linearmodels-panel-results-randomeffectsresults-time-info"]], "linearmodels.panel.utility.PanelModelData.other_effects": [[704, "linearmodels-panel-utility-panelmodeldata-other-effects"]], "Models for Panel Data": [[707, "module-linearmodels.panel.model"]], "Panel Model Covariance Estimators": [[707, "module-linearmodels.panel.covariance"]], "Panel Data Structures": [[707, "module-linearmodels.panel.data"]], "Test Data Generation": [[707, "module-linearmodels.panel.utility"]], "Seemingly Unrelated Regression (SUR/SURE)": [[714, "seemingly-unrelated-regression-sur-sure"]], "Basic Notation": [[714, "basic-notation"], [714, "basic-notation-1"]], "Covariance Estimation": [[714, "covariance-estimation"]], "Other Statistics": [[714, "other-statistics"]], "Memory efficient calculations": [[714, "memory-efficient-calculations"]], "Three Stage Least Squares (3SLS)": [[714, "three-stage-least-squares-3sls"]], "System Generalized Method of Moments (GMM)": [[714, "system-generalized-method-of-moments-gmm"]], "Homoskedastic Weighting": [[714, "homoskedastic-weighting"]], "Heteroskedastic Weighting": [[714, "heteroskedastic-weighting"]], "Parameter Covariance": [[714, "parameter-covariance"]], "Testing Covariance and Correlations": [[714, "testing-covariance-and-correlations"]], "System Measures of Fit (R^{2})": [[714, "system-measures-of-fit-r-2"]], "Overall R^{2}": [[714, "overall-r-2"], [398, "overall-r-2"]], "McElroy": [[714, "mcelroy"]], "Berndt": [[714, "berndt"]], "Judge": [[714, "judge"]], "Dhrymes": [[714, "dhrymes"]], "linearmodels.panel.results.RandomEffectsResults.summary": [[690, "linearmodels-panel-results-randomeffectsresults-summary"]], "linearmodels.panel.utility.PanelModelData.data": [[702, "linearmodels-panel-utility-panelmodeldata-data"]], "linearmodels.system.covariance.ClusteredCovariance.cov": [[717, "linearmodels-system-covariance-clusteredcovariance-cov"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance": [[720, "linearmodels-system-covariance-gmmheteroskedasticcovariance"]], "linearmodels.panel.results.RandomEffectsResults.model_ss": [[676, "linearmodels-panel-results-randomeffectsresults-model-ss"]], "linearmodels.panel.results.RandomEffectsResults.variance_decomposition": [[695, "linearmodels-panel-results-randomeffectsresults-variance-decomposition"]], "Module Plans": [[708, "module-plans"]], "Univariate": [[708, "univariate"]], "Panel": [[708, "panel"]], "Least Squares Estimators": [[708, "least-squares-estimators"]], "Asset Pricing": [[708, "asset-pricing"]], "Dynamic Panel Data Models": [[708, "dynamic-panel-data-models"]], "Panel Instrumental Variable Estimators": [[708, "panel-instrumental-variable-estimators"]], "System Estimation": [[708, "system-estimation"]], "Instrumental Variable Estimators": [[708, "instrumental-variable-estimators"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config": [[722, "linearmodels-system-covariance-gmmheteroskedasticcovariance-cov-config"]], "linearmodels.panel.results.RandomEffectsResults.rsquared": [[684, "linearmodels-panel-results-randomeffectsresults-rsquared"]], "linearmodels.panel.results.RandomEffectsResults.params": [[679, "linearmodels-panel-results-randomeffectsresults-params"]], "linearmodels.panel.results.RandomEffectsResults.wald_test": [[696, "linearmodels-panel-results-randomeffectsresults-wald-test"]], "linearmodels.panel.results.RandomEffectsResults.f_statistic_robust": [[672, "linearmodels-panel-results-randomeffectsresults-f-statistic-robust"]], "Using formulas to specify models": [[711, "Using-formulas-to-specify-models"], [394, "Using-formulas-to-specify-models"], [147, "Using-formulas-to-specify-models"]], "Dictionary": [[711, "Dictionary"]], "Curly Braces": [[711, "Curly-Braces"]], "Labeled Formulas": [[711, "Labeled-Formulas"]], "Other Options": [[711, "Other-Options"], [393, "Other-Options"]], "Estimation Weights": [[711, "Estimation-Weights"]], "Prespecified Residual Covariance": [[711, "Prespecified-Residual-Covariance"]], "Three-stage Least Squares (3SLS)": [[712, "Three-stage-Least-Squares-(3SLS)"]], "Formulas": [[712, "Formulas"]], "Direct Model Specification": [[712, "Direct-Model-Specification"]], "System GMM Estimation": [[712, "System-GMM-Estimation"]], "Simultaneous Equations": [[712, "Simultaneous-Equations"]], "linearmodels.panel.utility.PanelModelData.index": [[703, "linearmodels-panel-utility-panelmodeldata-index"]], "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov": [[721, "linearmodels-system-covariance-gmmheteroskedasticcovariance-cov"]], "linearmodels.panel.results.RandomEffectsResults.fitted_values": [[673, "linearmodels-panel-results-randomeffectsresults-fitted-values"]], "linearmodels.panel.utility.PanelModelData.clusters": [[700, "linearmodels-panel-utility-panelmodeldata-clusters"]], "linearmodels.panel.results.RandomEffectsResults.df_model": [[667, "linearmodels-panel-results-randomeffectsresults-df-model"]], "linearmodels.panel.results.PanelResults.wresids": [[660, "linearmodels-panel-results-panelresults-wresids"]], "linearmodels.panel.results.RandomEffectsResults.resid_ss": [[682, "linearmodels-panel-results-randomeffectsresults-resid-ss"]], "linearmodels.system.covariance.ClusteredCovariance": [[716, "linearmodels-system-covariance-clusteredcovariance"]], "linearmodels.panel.utility.PanelModelData.count": [[701, "linearmodels-panel-utility-panelmodeldata-count"]], "linearmodels.panel.results.RandomEffectsResults.tstats": [[694, "linearmodels-panel-results-randomeffectsresults-tstats"]], "linearmodels.panel.results.PanelEffectsResults.predict": [[594, "linearmodels-panel-results-paneleffectsresults-predict"]], "linearmodels.panel.results.PanelModelComparison.std_errors": [[623, "linearmodels-panel-results-panelmodelcomparison-std-errors"]], "linearmodels.panel.results.PanelResults.s2": [[653, "linearmodels-panel-results-panelresults-s2"]], "linearmodels.panel.results.PanelModelComparison.pvalues": [[618, "linearmodels-panel-results-panelmodelcomparison-pvalues"]], "linearmodels.panel.results.PanelResults.corr_squared_overall": [[629, "linearmodels-panel-results-panelresults-corr-squared-overall"]], "linearmodels.panel.results.PanelResults.conf_int": [[627, "linearmodels-panel-results-panelresults-conf-int"]], "linearmodels.panel.results.PanelModelComparison.estimator_method": [[614, "linearmodels-panel-results-panelmodelcomparison-estimator-method"]], "linearmodels.panel.results.PanelEffectsResults.rsquared_between": [[599, "linearmodels-panel-results-paneleffectsresults-rsquared-between"]], "linearmodels.panel.results.PanelEffectsResults.rsquared_within": [[602, "linearmodels-panel-results-paneleffectsresults-rsquared-within"]], "linearmodels.panel.results.PanelResults.model_ss": [[641, "linearmodels-panel-results-panelresults-model-ss"]], "linearmodels.panel.results.PanelResults.params": [[644, "linearmodels-panel-results-panelresults-params"]], "linearmodels.panel.results.PanelResults.tstats": [[658, "linearmodels-panel-results-panelresults-tstats"]], "linearmodels.panel.results.PanelEffectsResults.tstats": [[608, "linearmodels-panel-results-paneleffectsresults-tstats"]], "linearmodels.panel.results.PanelResults.loglik": [[640, "linearmodels-panel-results-panelresults-loglik"]], "linearmodels.panel.results.PanelResults.entity_info": [[634, "linearmodels-panel-results-panelresults-entity-info"]], "linearmodels.panel.results.PanelEffectsResults.variance_decomposition": [[609, "linearmodels-panel-results-paneleffectsresults-variance-decomposition"]], "linearmodels.panel.results.PanelModelComparison.params": [[617, "linearmodels-panel-results-panelmodelcomparison-params"]], "linearmodels.panel.results.PanelResults.summary": [[655, "linearmodels-panel-results-panelresults-summary"]], "linearmodels.panel.results.PanelModelComparison.summary": [[624, "linearmodels-panel-results-panelmodelcomparison-summary"]], "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive": [[600, "linearmodels-panel-results-paneleffectsresults-rsquared-inclusive"]], "linearmodels.panel.results.PanelModelComparison.rsquared": [[619, "linearmodels-panel-results-panelmodelcomparison-rsquared"]], "linearmodels.panel.results.PanelResults.rsquared_overall": [[651, "linearmodels-panel-results-panelresults-rsquared-overall"]], "linearmodels.panel.results.PanelEffectsResults.time_info": [[606, "linearmodels-panel-results-paneleffectsresults-time-info"]], "linearmodels.panel.results.PanelEffectsResults.summary": [[605, "linearmodels-panel-results-paneleffectsresults-summary"]], "linearmodels.panel.results.PanelResults.std_errors": [[654, "linearmodels-panel-results-panelresults-std-errors"]], "linearmodels.panel.results.PanelEffectsResults.resid_ss": [[596, "linearmodels-panel-results-paneleffectsresults-resid-ss"]], "linearmodels.panel.results.PanelEffectsResults.resids": [[597, "linearmodels-panel-results-paneleffectsresults-resids"]], "linearmodels.panel.results.PanelEffectsResults.s2": [[603, "linearmodels-panel-results-paneleffectsresults-s2"]], "linearmodels.panel.results.PanelResults.fitted_values": [[638, "linearmodels-panel-results-panelresults-fitted-values"]], "linearmodels.panel.results.PanelModelComparison.cov_estimator": [[613, "linearmodels-panel-results-panelmodelcomparison-cov-estimator"]], "linearmodels.panel.results.PanelResults.predict": [[645, "linearmodels-panel-results-panelresults-predict"]], "linearmodels.panel.results.PanelModelComparison.rsquared_within": [[622, "linearmodels-panel-results-panelmodelcomparison-rsquared-within"]], "linearmodels.panel.results.PanelEffectsResults.rsquared": [[598, "linearmodels-panel-results-paneleffectsresults-rsquared"]], "linearmodels.panel.results.PanelEffectsResults.pvalues": [[595, "linearmodels-panel-results-paneleffectsresults-pvalues"]], "linearmodels.panel.results.PanelModelComparison.tstats": [[625, "linearmodels-panel-results-panelmodelcomparison-tstats"]], "linearmodels.panel.results.PanelResults.rsquared_within": [[652, "linearmodels-panel-results-panelresults-rsquared-within"]], "linearmodels.panel.results.PanelResults.estimated_effects": [[635, "linearmodels-panel-results-panelresults-estimated-effects"]], "linearmodels.panel.results.PanelModelComparison.rsquared_overall": [[621, "linearmodels-panel-results-panelmodelcomparison-rsquared-overall"]], "linearmodels.panel.results.PanelResults.corr_squared_between": [[628, "linearmodels-panel-results-panelresults-corr-squared-between"]], "linearmodels.panel.results.PanelResults.total_ss": [[657, "linearmodels-panel-results-panelresults-total-ss"]], "linearmodels.panel.results.PanelModelComparison": [[612, "linearmodels-panel-results-panelmodelcomparison"]], "linearmodels.panel.results.PanelResults.time_info": [[656, "linearmodels-panel-results-panelresults-time-info"]], "linearmodels.panel.results.PanelResults.cov": [[631, "linearmodels-panel-results-panelresults-cov"]], "linearmodels.panel.results.PanelResults.name": [[642, "linearmodels-panel-results-panelresults-name"]], "linearmodels.panel.results.PanelEffectsResults.std_errors": [[604, "linearmodels-panel-results-paneleffectsresults-std-errors"]], "linearmodels.panel.results.PanelResults.resid_ss": [[647, "linearmodels-panel-results-panelresults-resid-ss"]], "linearmodels.panel.results.PanelEffectsResults.rsquared_overall": [[601, "linearmodels-panel-results-paneleffectsresults-rsquared-overall"]], "linearmodels.panel.results.PanelResults": [[626, "linearmodels-panel-results-panelresults"]], "linearmodels.panel.results.PanelResults.pvalues": [[646, "linearmodels-panel-results-panelresults-pvalues"]], "linearmodels.panel.results.PanelEffectsResults.total_ss": [[607, "linearmodels-panel-results-paneleffectsresults-total-ss"]], "linearmodels.panel.results.PanelEffectsResults.wresids": [[611, "linearmodels-panel-results-paneleffectsresults-wresids"]], "linearmodels.panel.results.PanelModelComparison.nobs": [[616, "linearmodels-panel-results-panelmodelcomparison-nobs"]], "linearmodels.panel.results.PanelModelComparison.rsquared_between": [[620, "linearmodels-panel-results-panelmodelcomparison-rsquared-between"]], "linearmodels.panel.results.PanelResults.corr_squared_within": [[630, "linearmodels-panel-results-panelresults-corr-squared-within"]], "linearmodels.panel.results.PanelResults.f_statistic_robust": [[637, "linearmodels-panel-results-panelresults-f-statistic-robust"]], "linearmodels.panel.results.PanelResults.rsquared_between": [[650, "linearmodels-panel-results-panelresults-rsquared-between"]], "linearmodels.panel.results.PanelModelComparison.f_statistic": [[615, "linearmodels-panel-results-panelmodelcomparison-f-statistic"]], "linearmodels.panel.results.PanelResults.idiosyncratic": [[639, "linearmodels-panel-results-panelresults-idiosyncratic"]], "linearmodels.panel.results.PanelResults.resids": [[648, "linearmodels-panel-results-panelresults-resids"]], "linearmodels.panel.results.PanelResults.rsquared": [[649, "linearmodels-panel-results-panelresults-rsquared"]], "linearmodels.panel.results.PanelResults.f_statistic": [[636, "linearmodels-panel-results-panelresults-f-statistic"]], "linearmodels.panel.results.PanelEffectsResults.wald_test": [[610, "linearmodels-panel-results-paneleffectsresults-wald-test"]], "linearmodels.panel.results.PanelResults.df_resid": [[633, "linearmodels-panel-results-panelresults-df-resid"]], "linearmodels.panel.results.PanelResults.wald_test": [[659, "linearmodels-panel-results-panelresults-wald-test"]], "linearmodels.panel.results.PanelResults.df_model": [[632, "linearmodels-panel-results-panelresults-df-model"]], "linearmodels.panel.results.PanelResults.nobs": [[643, "linearmodels-panel-results-panelresults-nobs"]], "linearmodels.panel.results.FamaMacBethResults.resid_ss": [[558, "linearmodels-panel-results-famamacbethresults-resid-ss"]], "linearmodels.panel.results.PanelEffectsResults.df_model": [[578, "linearmodels-panel-results-paneleffectsresults-df-model"]], "linearmodels.panel.results.PanelEffectsResults.df_resid": [[579, "linearmodels-panel-results-paneleffectsresults-df-resid"]], "linearmodels.panel.results.PanelEffectsResults.corr_squared_overall": [[575, "linearmodels-panel-results-paneleffectsresults-corr-squared-overall"]], "linearmodels.panel.results.PanelEffectsResults.f_statistic_robust": [[584, "linearmodels-panel-results-paneleffectsresults-f-statistic-robust"]], "linearmodels.panel.model.RandomEffects.from_formula": [[529, "linearmodels-panel-model-randomeffects-from-formula"]], "linearmodels.panel.results.FamaMacBethResults.df_resid": [[544, "linearmodels-panel-results-famamacbethresults-df-resid"]], "linearmodels.panel.results.PanelEffectsResults.corr_squared_between": [[574, "linearmodels-panel-results-paneleffectsresults-corr-squared-between"]], "linearmodels.panel.results.FamaMacBethResults.rsquared_within": [[563, "linearmodels-panel-results-famamacbethresults-rsquared-within"]], "linearmodels.panel.results.FamaMacBethResults.avg_rsquared": [[537, "linearmodels-panel-results-famamacbethresults-avg-rsquared"]], "linearmodels.panel.model.RandomEffects.not_null": [[531, "linearmodels-panel-model-randomeffects-not-null"]], "linearmodels.panel.results.FamaMacBethResults.wald_test": [[570, "linearmodels-panel-results-famamacbethresults-wald-test"]], "linearmodels.panel.results.FamaMacBethResults.idiosyncratic": [[550, "linearmodels-panel-results-famamacbethresults-idiosyncratic"]], "linearmodels.panel.results.PanelEffectsResults.estimated_effects": [[581, "linearmodels-panel-results-paneleffectsresults-estimated-effects"]], "linearmodels.panel.results.FamaMacBethResults.total_ss": [[568, "linearmodels-panel-results-famamacbethresults-total-ss"]], "linearmodels.panel.results.FamaMacBethResults.pvalues": [[557, "linearmodels-panel-results-famamacbethresults-pvalues"]], "linearmodels.panel.results.FamaMacBethResults.nobs": [[554, "linearmodels-panel-results-famamacbethresults-nobs"]], "linearmodels.panel.results.FamaMacBethResults.cov": [[542, "linearmodels-panel-results-famamacbethresults-cov"]], "linearmodels.panel.results.FamaMacBethResults.f_statistic": [[547, "linearmodels-panel-results-famamacbethresults-f-statistic"]], "linearmodels.panel.results.FamaMacBethResults.conf_int": [[538, "linearmodels-panel-results-famamacbethresults-conf-int"]], "linearmodels.panel.results.FamaMacBethResults.name": [[553, "linearmodels-panel-results-famamacbethresults-name"]], "linearmodels.panel.model.RandomEffects.predict": [[532, "linearmodels-panel-model-randomeffects-predict"]], "linearmodels.panel.results.PanelEffectsResults": [[572, "linearmodels-panel-results-paneleffectsresults"]], "linearmodels.panel.results.PanelEffectsResults.idiosyncratic": [[586, "linearmodels-panel-results-paneleffectsresults-idiosyncratic"]], "linearmodels.panel.results.FamaMacBethResults.std_errors": [[565, "linearmodels-panel-results-famamacbethresults-std-errors"]], "linearmodels.panel.results.FamaMacBethResults.loglik": [[551, "linearmodels-panel-results-famamacbethresults-loglik"]], "linearmodels.panel.model.RandomEffects.formula": [[528, "linearmodels-panel-model-randomeffects-formula"]], "linearmodels.panel.results.FamaMacBethResults.resids": [[559, "linearmodels-panel-results-famamacbethresults-resids"]], "linearmodels.panel.results.PanelEffectsResults.f_pooled": [[582, "linearmodels-panel-results-paneleffectsresults-f-pooled"]], "linearmodels.panel.results.PanelEffectsResults.loglik": [[588, "linearmodels-panel-results-paneleffectsresults-loglik"]], "linearmodels.panel.results.FamaMacBethResults.rsquared": [[560, "linearmodels-panel-results-famamacbethresults-rsquared"]], "linearmodels.panel.results.PanelEffectsResults.nobs": [[591, "linearmodels-panel-results-paneleffectsresults-nobs"]], "linearmodels.panel.model.RandomEffects.reformat_clusters": [[533, "linearmodels-panel-model-randomeffects-reformat-clusters"]], "linearmodels.panel.results.PanelEffectsResults.other_info": [[592, "linearmodels-panel-results-paneleffectsresults-other-info"]], "linearmodels.panel.results.PanelEffectsResults.cov": [[577, "linearmodels-panel-results-paneleffectsresults-cov"]], "linearmodels.panel.results.FamaMacBethResults.entity_info": [[545, "linearmodels-panel-results-famamacbethresults-entity-info"]], "linearmodels.panel.results.FamaMacBethResults.estimated_effects": [[546, "linearmodels-panel-results-famamacbethresults-estimated-effects"]], "linearmodels.panel.results.FamaMacBethResults.model_ss": [[552, "linearmodels-panel-results-famamacbethresults-model-ss"]], "linearmodels.panel.results.FamaMacBethResults.s2": [[564, "linearmodels-panel-results-famamacbethresults-s2"]], "linearmodels.panel.results.FamaMacBethResults.avg_adj_rsquared": [[536, "linearmodels-panel-results-famamacbethresults-avg-adj-rsquared"]], "linearmodels.panel.results.FamaMacBethResults.wresids": [[571, "linearmodels-panel-results-famamacbethresults-wresids"]], "linearmodels.panel.results.FamaMacBethResults.time_info": [[567, "linearmodels-panel-results-famamacbethresults-time-info"]], "linearmodels.panel.results.FamaMacBethResults.predict": [[556, "linearmodels-panel-results-famamacbethresults-predict"]], "linearmodels.panel.results.FamaMacBethResults.corr_squared_overall": [[540, "linearmodels-panel-results-famamacbethresults-corr-squared-overall"]], "linearmodels.panel.results.FamaMacBethResults.params": [[555, "linearmodels-panel-results-famamacbethresults-params"]], "linearmodels.panel.results.FamaMacBethResults.df_model": [[543, "linearmodels-panel-results-famamacbethresults-df-model"]], "linearmodels.panel.results.FamaMacBethResults.corr_squared_within": [[541, "linearmodels-panel-results-famamacbethresults-corr-squared-within"]], "linearmodels.panel.results.FamaMacBethResults.rsquared_between": [[561, "linearmodels-panel-results-famamacbethresults-rsquared-between"]], "linearmodels.panel.results.PanelEffectsResults.conf_int": [[573, "linearmodels-panel-results-paneleffectsresults-conf-int"]], "linearmodels.panel.results.FamaMacBethResults.fitted_values": [[549, "linearmodels-panel-results-famamacbethresults-fitted-values"]], "linearmodels.panel.results.FamaMacBethResults.tstats": [[569, "linearmodels-panel-results-famamacbethresults-tstats"]], "linearmodels.panel.results.PanelEffectsResults.corr_squared_within": [[576, "linearmodels-panel-results-paneleffectsresults-corr-squared-within"]], "linearmodels.panel.results.PanelEffectsResults.model_ss": [[589, "linearmodels-panel-results-paneleffectsresults-model-ss"]], "linearmodels.panel.results.PanelEffectsResults.params": [[593, "linearmodels-panel-results-paneleffectsresults-params"]], "linearmodels.panel.results.PanelEffectsResults.fitted_values": [[585, "linearmodels-panel-results-paneleffectsresults-fitted-values"]], "linearmodels.panel.results.FamaMacBethResults.f_statistic_robust": [[548, "linearmodels-panel-results-famamacbethresults-f-statistic-robust"]], "linearmodels.panel.results.FamaMacBethResults.all_params": [[535, "linearmodels-panel-results-famamacbethresults-all-params"]], "linearmodels.panel.results.FamaMacBethResults.corr_squared_between": [[539, "linearmodels-panel-results-famamacbethresults-corr-squared-between"]], "linearmodels.panel.results.PanelEffectsResults.name": [[590, "linearmodels-panel-results-paneleffectsresults-name"]], "linearmodels.panel.model.RandomEffects.has_constant": [[530, "linearmodels-panel-model-randomeffects-has-constant"]], "linearmodels.panel.results.FamaMacBethResults": [[534, "linearmodels-panel-results-famamacbethresults"]], "linearmodels.panel.results.PanelEffectsResults.f_statistic": [[583, "linearmodels-panel-results-paneleffectsresults-f-statistic"]], "linearmodels.panel.results.PanelEffectsResults.entity_info": [[580, "linearmodels-panel-results-paneleffectsresults-entity-info"]], "linearmodels.panel.results.PanelEffectsResults.included_effects": [[587, "linearmodels-panel-results-paneleffectsresults-included-effects"]], "linearmodels.panel.results.FamaMacBethResults.rsquared_overall": [[562, "linearmodels-panel-results-famamacbethresults-rsquared-overall"]], "linearmodels.panel.results.FamaMacBethResults.summary": [[566, "linearmodels-panel-results-famamacbethresults-summary"]], "linearmodels.panel.model.PooledOLS.predict": [[524, "linearmodels-panel-model-pooledols-predict"]], "linearmodels.panel.data._Panel.from_array": [[476, "linearmodels-panel-data-panel-from-array"]], "linearmodels.panel.model.FirstDifferenceOLS.has_constant": [[503, "linearmodels-panel-model-firstdifferenceols-has-constant"]], "linearmodels.panel.data.PanelData.nvar": [[467, "linearmodels-panel-data-paneldata-nvar"]], "linearmodels.panel.model.PooledOLS.has_constant": [[522, "linearmodels-panel-model-pooledols-has-constant"]], "linearmodels.panel.model.FamaMacBeth.reformat_clusters": [[498, "linearmodels-panel-model-famamacbeth-reformat-clusters"]], "linearmodels.panel.model.FamaMacBeth.not_null": [[496, "linearmodels-panel-model-famamacbeth-not-null"]], "linearmodels.panel.data.PanelData.nobs": [[466, "linearmodels-panel-data-paneldata-nobs"]], "linearmodels.panel.data._Panel.minor_axis": [[479, "linearmodels-panel-data-panel-minor-axis"]], "linearmodels.panel.model.FamaMacBeth.fit": [[492, "linearmodels-panel-model-famamacbeth-fit"]], "linearmodels.panel.model.FamaMacBeth.from_formula": [[494, "linearmodels-panel-model-famamacbeth-from-formula"]], "linearmodels.panel.data.PanelData.vars": [[474, "linearmodels-panel-data-paneldata-vars"]], "linearmodels.panel.data.PanelData.time": [[470, "linearmodels-panel-data-paneldata-time"]], "linearmodels.panel.model.BetweenOLS.fit": [[484, "linearmodels-panel-model-betweenols-fit"]], "linearmodels.panel.model.BetweenOLS": [[483, "linearmodels-panel-model-betweenols"]], "linearmodels.panel.model.PanelOLS.has_constant": [[512, "linearmodels-panel-model-panelols-has-constant"]], "linearmodels.panel.data.PanelData.values3d": [[473, "linearmodels-panel-data-paneldata-values3d"]], "linearmodels.panel.data._Panel.major_axis": [[478, "linearmodels-panel-data-panel-major-axis"]], "linearmodels.panel.model.BetweenOLS.not_null": [[488, "linearmodels-panel-model-betweenols-not-null"]], "linearmodels.panel.data._Panel.shape": [[480, "linearmodels-panel-data-panel-shape"]], "linearmodels.panel.model.PanelOLS": [[507, "linearmodels-panel-model-panelols"]], "linearmodels.panel.model.FirstDifferenceOLS.predict": [[505, "linearmodels-panel-model-firstdifferenceols-predict"]], "linearmodels.panel.data.PanelData.nentity": [[465, "linearmodels-panel-data-paneldata-nentity"]], "linearmodels.panel.model.PanelOLS.predict": [[515, "linearmodels-panel-model-panelols-predict"]], "linearmodels.panel.model.PanelOLS.reformat_clusters": [[516, "linearmodels-panel-model-panelols-reformat-clusters"]], "linearmodels.panel.model.PooledOLS.formula": [[520, "linearmodels-panel-model-pooledols-formula"]], "linearmodels.panel.model.PooledOLS.reformat_clusters": [[525, "linearmodels-panel-model-pooledols-reformat-clusters"]], "linearmodels.panel.data.PanelData.shape": [[469, "linearmodels-panel-data-paneldata-shape"]], "linearmodels.panel.data._Panel.to_frame": [[481, "linearmodels-panel-data-panel-to-frame"]], "linearmodels.panel.model.FamaMacBeth.has_constant": [[495, "linearmodels-panel-model-famamacbeth-has-constant"]], "linearmodels.panel.model.PooledOLS": [[518, "linearmodels-panel-model-pooledols"]], "linearmodels.panel.model.FirstDifferenceOLS.from_formula": [[502, "linearmodels-panel-model-firstdifferenceols-from-formula"]], "linearmodels.panel.model.RandomEffects": [[526, "linearmodels-panel-model-randomeffects"]], "linearmodels.panel.model.BetweenOLS.has_constant": [[487, "linearmodels-panel-model-betweenols-has-constant"]], "linearmodels.panel.model.PanelOLS.other_effects": [[514, "linearmodels-panel-model-panelols-other-effects"]], "linearmodels.panel.model.BetweenOLS.from_formula": [[486, "linearmodels-panel-model-betweenols-from-formula"]], "linearmodels.panel.model.PanelOLS.fit": [[509, "linearmodels-panel-model-panelols-fit"]], "linearmodels.panel.model.FamaMacBeth.formula": [[493, "linearmodels-panel-model-famamacbeth-formula"]], "linearmodels.panel.model.PanelOLS.from_formula": [[511, "linearmodels-panel-model-panelols-from-formula"]], "linearmodels.panel.model.PooledOLS.not_null": [[523, "linearmodels-panel-model-pooledols-not-null"]], "linearmodels.panel.data.PanelData.isnull": [[462, "linearmodels-panel-data-paneldata-isnull"]], "linearmodels.panel.data.PanelData.time_ids": [[471, "linearmodels-panel-data-paneldata-time-ids"]], "linearmodels.panel.model.PanelOLS.time_effects": [[517, "linearmodels-panel-model-panelols-time-effects"]], "linearmodels.panel.data._Panel.items": [[477, "linearmodels-panel-data-panel-items"]], "linearmodels.panel.model.BetweenOLS.predict": [[489, "linearmodels-panel-model-betweenols-predict"]], "linearmodels.panel.model.PanelOLS.not_null": [[513, "linearmodels-panel-model-panelols-not-null"]], "linearmodels.panel.model.PooledOLS.fit": [[519, "linearmodels-panel-model-pooledols-fit"]], "linearmodels.panel.model.FirstDifferenceOLS": [[499, "linearmodels-panel-model-firstdifferenceols"]], "linearmodels.panel.model.PooledOLS.from_formula": [[521, "linearmodels-panel-model-pooledols-from-formula"]], "linearmodels.panel.data.PanelData.panel": [[468, "linearmodels-panel-data-paneldata-panel"]], "linearmodels.panel.model.BetweenOLS.formula": [[485, "linearmodels-panel-model-betweenols-formula"]], "linearmodels.panel.data._Panel.values": [[482, "linearmodels-panel-data-panel-values"]], "linearmodels.panel.model.FirstDifferenceOLS.formula": [[501, "linearmodels-panel-model-firstdifferenceols-formula"]], "linearmodels.panel.model.PanelOLS.formula": [[510, "linearmodels-panel-model-panelols-formula"]], "linearmodels.panel.model.RandomEffects.fit": [[527, "linearmodels-panel-model-randomeffects-fit"]], "linearmodels.panel.model.FamaMacBeth": [[491, "linearmodels-panel-model-famamacbeth"]], "linearmodels.panel.model.FamaMacBeth.predict": [[497, "linearmodels-panel-model-famamacbeth-predict"]], "linearmodels.panel.model.FirstDifferenceOLS.fit": [[500, "linearmodels-panel-model-firstdifferenceols-fit"]], "linearmodels.panel.data.PanelData.mean": [[463, "linearmodels-panel-data-paneldata-mean"]], "linearmodels.panel.model.PanelOLS.entity_effects": [[508, "linearmodels-panel-model-panelols-entity-effects"]], "linearmodels.panel.data.PanelData.values2d": [[472, "linearmodels-panel-data-paneldata-values2d"]], "linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters": [[506, "linearmodels-panel-model-firstdifferenceols-reformat-clusters"]], "linearmodels.panel.data._Panel": [[475, "linearmodels-panel-data-panel"]], "linearmodels.panel.model.FirstDifferenceOLS.not_null": [[504, "linearmodels-panel-model-firstdifferenceols-not-null"]], "linearmodels.panel.model.BetweenOLS.reformat_clusters": [[490, "linearmodels-panel-model-betweenols-reformat-clusters"]], "linearmodels.panel.data.PanelData.ndim": [[464, "linearmodels-panel-data-paneldata-ndim"]], "Models": [[398, "models"]], "Fixed Effect Estimation (PanelOLS)": [[398, "fixed-effect-estimation-panelols"]], "Random Effect Estimation (RandomEffects)": [[398, "random-effect-estimation-randomeffects"]], "Between Estimation (BetweenOLS)": [[398, "between-estimation-betweenols"]], "First Difference Estimation (FirstDifferenceOLS)": [[398, "first-difference-estimation-firstdifferenceols"]], "Pooled Model Estimation (PooledOLS)": [[398, "pooled-model-estimation-pooledols"]], "Covariance Estimators": [[398, "covariance-estimators"]], "Standard Covariance Estimator (unadjusted)": [[398, "standard-covariance-estimator-unadjusted"]], "Heteroskedastic Covariance Estimator (robust)": [[398, "heteroskedastic-covariance-estimator-robust"]], "Clustered Covariance Estimator": [[398, "clustered-covariance-estimator"]], "Driscoll-Kraay Covariance Estimator": [[398, "driscoll-kraay-covariance-estimator"]], "R^{2} Calculation": [[398, "r-2-calculation"]], "Between R^{2}": [[398, "between-r-2"]], "BetweenR^{2} (correlation method)": [[398, "betweenr-2-correlation-method"]], "Overall R^{2} (correlation method)": [[398, "overall-r-2-correlation-method"]], "Within R^{2}": [[398, "within-r-2"]], "WithinR^{2} (correlation method)": [[398, "withinr-2-correlation-method"]], "linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL": [[410, "linearmodels-panel-covariance-clusteredcovariance-default-kernel"]], "linearmodels.panel.data.PanelData.drop": [[455, "linearmodels-panel-data-paneldata-drop"]], "linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL": [[444, "linearmodels-panel-covariance-homoskedasticcovariance-default-kernel"]], "linearmodels.panel.covariance.FamaMacBethCovariance.name": [[432, "linearmodels-panel-covariance-famamacbethcovariance-name"]], "linearmodels.panel.covariance.DriscollKraay": [[416, "linearmodels-panel-covariance-driscollkraay"]], "linearmodels.panel.covariance.HomoskedasticCovariance.cov": [[445, "linearmodels-panel-covariance-homoskedasticcovariance-cov"]], "linearmodels.panel.covariance.DriscollKraay.name": [[422, "linearmodels-panel-covariance-driscollkraay-name"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov": [[438, "linearmodels-panel-covariance-heteroskedasticcovariance-deferred-cov"]], "linearmodels.panel.covariance.FamaMacBethCovariance.all_params": [[427, "linearmodels-panel-covariance-famamacbethcovariance-all-params"]], "linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov": [[430, "linearmodels-panel-covariance-famamacbethcovariance-deferred-cov"]], "linearmodels.panel.covariance.FamaMacBethCovariance.eps": [[431, "linearmodels-panel-covariance-famamacbethcovariance-eps"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.name": [[440, "linearmodels-panel-covariance-heteroskedasticcovariance-name"]], "linearmodels.panel.data.PanelData.entities": [[457, "linearmodels-panel-data-paneldata-entities"]], "linearmodels.panel.data.PanelData": [[450, "linearmodels-panel-data-paneldata"]], "linearmodels.panel.covariance.FamaMacBethCovariance.cov": [[429, "linearmodels-panel-covariance-famamacbethcovariance-cov"]], "linearmodels.panel.covariance.DriscollKraay.deferred_cov": [[420, "linearmodels-panel-covariance-driscollkraay-deferred-cov"]], "linearmodels.panel.covariance.DriscollKraay.cov": [[419, "linearmodels-panel-covariance-driscollkraay-cov"]], "linearmodels.panel.data.PanelData.general_demean": [[460, "linearmodels-panel-data-paneldata-general-demean"]], "Panel Data Model Estimation": [[396, "panel-data-model-estimation"]], "linearmodels.panel.covariance.ClusteredCovariance.deferred_cov": [[412, "linearmodels-panel-covariance-clusteredcovariance-deferred-cov"]], "linearmodels.panel.covariance.ACCovariance.cov": [[403, "linearmodels-panel-covariance-accovariance-cov"]], "linearmodels.panel.covariance.ACCovariance.s2": [[407, "linearmodels-panel-covariance-accovariance-s2"]], "linearmodels.panel.covariance.HeteroskedasticCovariance": [[434, "linearmodels-panel-covariance-heteroskedasticcovariance"]], "linearmodels.panel.covariance.ACCovariance": [[400, "linearmodels-panel-covariance-accovariance"]], "linearmodels.panel.covariance.DriscollKraay.eps": [[421, "linearmodels-panel-covariance-driscollkraay-eps"]], "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov": [[446, "linearmodels-panel-covariance-homoskedasticcovariance-deferred-cov"]], "linearmodels.panel.covariance.ACCovariance.deferred_cov": [[404, "linearmodels-panel-covariance-accovariance-deferred-cov"]], "linearmodels.panel.covariance.ACCovariance.eps": [[405, "linearmodels-panel-covariance-accovariance-eps"]], "linearmodels.panel.data.PanelData.copy": [[451, "linearmodels-panel-data-paneldata-copy"]], "linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS": [[409, "linearmodels-panel-covariance-clusteredcovariance-allowed-kwargs"]], "linearmodels.panel.data.PanelData.demean": [[454, "linearmodels-panel-data-paneldata-demean"]], "linearmodels.panel.covariance.HomoskedasticCovariance": [[442, "linearmodels-panel-covariance-homoskedasticcovariance"]], "linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL": [[402, "linearmodels-panel-covariance-accovariance-default-kernel"]], "Comparison with pandas PanelOLS and FamaMacBeth": [[399, "comparison-with-pandas-panelols-and-famamacbeth"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.eps": [[439, "linearmodels-panel-covariance-heteroskedasticcovariance-eps"]], "linearmodels.panel.covariance.ClusteredCovariance.s2": [[415, "linearmodels-panel-covariance-clusteredcovariance-s2"]], "linearmodels.panel.covariance.HomoskedasticCovariance.eps": [[447, "linearmodels-panel-covariance-homoskedasticcovariance-eps"]], "linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS": [[417, "linearmodels-panel-covariance-driscollkraay-allowed-kwargs"]], "linearmodels.panel.data.PanelData.dummies": [[456, "linearmodels-panel-data-paneldata-dummies"]], "linearmodels.panel.covariance.ClusteredCovariance.cov": [[411, "linearmodels-panel-covariance-clusteredcovariance-cov"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.cov": [[437, "linearmodels-panel-covariance-heteroskedasticcovariance-cov"]], "linearmodels.panel.covariance.ACCovariance.name": [[406, "linearmodels-panel-covariance-accovariance-name"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.s2": [[441, "linearmodels-panel-covariance-heteroskedasticcovariance-s2"]], "linearmodels.panel.data.PanelData.entity_ids": [[458, "linearmodels-panel-data-paneldata-entity-ids"]], "linearmodels.panel.covariance.FamaMacBethCovariance": [[424, "linearmodels-panel-covariance-famamacbethcovariance"]], "linearmodels.panel.covariance.HomoskedasticCovariance.s2": [[449, "linearmodels-panel-covariance-homoskedasticcovariance-s2"]], "linearmodels.panel.data.PanelData.dataframe": [[453, "linearmodels-panel-data-paneldata-dataframe"]], "linearmodels.panel.covariance.ClusteredCovariance.eps": [[413, "linearmodels-panel-covariance-clusteredcovariance-eps"]], "linearmodels.panel.covariance.FamaMacBethCovariance.s2": [[433, "linearmodels-panel-covariance-famamacbethcovariance-s2"]], "linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS": [[443, "linearmodels-panel-covariance-homoskedasticcovariance-allowed-kwargs"]], "linearmodels.panel.data.PanelData.index": [[461, "linearmodels-panel-data-paneldata-index"]], "linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS": [[425, "linearmodels-panel-covariance-famamacbethcovariance-allowed-kwargs"]], "linearmodels.panel.covariance.ClusteredCovariance.name": [[414, "linearmodels-panel-covariance-clusteredcovariance-name"]], "linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL": [[418, "linearmodels-panel-covariance-driscollkraay-default-kernel"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL": [[436, "linearmodels-panel-covariance-heteroskedasticcovariance-default-kernel"]], "linearmodels.panel.data.PanelData.count": [[452, "linearmodels-panel-data-paneldata-count"]], "linearmodels.panel.covariance.ClusteredCovariance": [[408, "linearmodels-panel-covariance-clusteredcovariance"]], "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth": [[428, "linearmodels-panel-covariance-famamacbethcovariance-bandwidth"]], "linearmodels.panel.data.PanelData.first_difference": [[459, "linearmodels-panel-data-paneldata-first-difference"]], "linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL": [[426, "linearmodels-panel-covariance-famamacbethcovariance-default-kernel"]], "linearmodels.panel.covariance.HomoskedasticCovariance.name": [[448, "linearmodels-panel-covariance-homoskedasticcovariance-name"]], "linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS": [[401, "linearmodels-panel-covariance-accovariance-allowed-kwargs"]], "linearmodels.panel.covariance.DriscollKraay.s2": [[423, "linearmodels-panel-covariance-driscollkraay-s2"]], "linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS": [[435, "linearmodels-panel-covariance-heteroskedasticcovariance-allowed-kwargs"]], "linearmodels.iv.results.IVModelComparison.cov_estimator": [[306, "linearmodels-iv-results-ivmodelcomparison-cov-estimator"]], "linearmodels.iv.results.IVGMMResults.j_stat": [[283, "linearmodels-iv-results-ivgmmresults-j-stat"]], "linearmodels.iv.results.IVModelComparison.rsquared": [[312, "linearmodels-iv-results-ivmodelcomparison-rsquared"]], "linearmodels.iv.results.IVResults.durbin": [[329, "linearmodels-iv-results-ivresults-durbin"]], "linearmodels.iv.results.IVGMMResults.f_statistic": [[277, "linearmodels-iv-results-ivgmmresults-f-statistic"]], "linearmodels.iv.results.IVGMMResults.cov_config": [[271, "linearmodels-iv-results-ivgmmresults-cov-config"]], "linearmodels.iv.results.IVGMMResults.rsquared_adj": [[294, "linearmodels-iv-results-ivgmmresults-rsquared-adj"]], "linearmodels.iv.results.IVGMMResults.has_constant": [[280, "linearmodels-iv-results-ivgmmresults-has-constant"]], "linearmodels.iv.results.IVGMMResults.weight_config": [[301, "linearmodels-iv-results-ivgmmresults-weight-config"]], "linearmodels.iv.results.IVModelComparison.std_errors": [[314, "linearmodels-iv-results-ivmodelcomparison-std-errors"]], "linearmodels.iv.results.IVResults.basmann_f": [[320, "linearmodels-iv-results-ivresults-basmann-f"]], "linearmodels.iv.results.IVGMMResults.fitted_values": [[279, "linearmodels-iv-results-ivgmmresults-fitted-values"]], "linearmodels.iv.results.IVResults.df_model": [[327, "linearmodels-iv-results-ivresults-df-model"]], "linearmodels.iv.results.IVResults.cov_type": [[325, "linearmodels-iv-results-ivresults-cov-type"]], "linearmodels.iv.results.IVGMMResults.cov": [[270, "linearmodels-iv-results-ivgmmresults-cov"]], "linearmodels.iv.results.IVResults.cov_config": [[323, "linearmodels-iv-results-ivresults-cov-config"]], "linearmodels.iv.results.IVModelComparison.params": [[310, "linearmodels-iv-results-ivmodelcomparison-params"]], "linearmodels.iv.results.IVGMMResults.weight_matrix": [[302, "linearmodels-iv-results-ivgmmresults-weight-matrix"]], "linearmodels.iv.results.IVGMMResults.method": [[285, "linearmodels-iv-results-ivgmmresults-method"]], "linearmodels.iv.results.IVGMMResults.params": [[288, "linearmodels-iv-results-ivgmmresults-params"]], "linearmodels.iv.results.IVModelComparison.summary": [[315, "linearmodels-iv-results-ivmodelcomparison-summary"]], "linearmodels.iv.results.IVGMMResults.df_resid": [[276, "linearmodels-iv-results-ivgmmresults-df-resid"]], "linearmodels.iv.results.IVGMMResults.wald_test": [[300, "linearmodels-iv-results-ivgmmresults-wald-test"]], "linearmodels.iv.results.IVGMMResults.first_stage": [[278, "linearmodels-iv-results-ivgmmresults-first-stage"]], "linearmodels.iv.results.IVModelComparison.estimator_method": [[307, "linearmodels-iv-results-ivmodelcomparison-estimator-method"]], "linearmodels.iv.results.IVGMMResults": [[267, "linearmodels-iv-results-ivgmmresults"]], "linearmodels.iv.results.IVModelComparison.rsquared_adj": [[313, "linearmodels-iv-results-ivmodelcomparison-rsquared-adj"]], "linearmodels.iv.results.IVGMMResults.model_ss": [[286, "linearmodels-iv-results-ivgmmresults-model-ss"]], "linearmodels.iv.results.FirstStageResults.summary": [[266, "linearmodels-iv-results-firststageresults-summary"]], "linearmodels.iv.results.IVGMMResults.tstats": [[299, "linearmodels-iv-results-ivgmmresults-tstats"]], "linearmodels.iv.results.IVGMMResults.rsquared": [[293, "linearmodels-iv-results-ivgmmresults-rsquared"]], "linearmodels.iv.results.IVGMMResults.iterations": [[282, "linearmodels-iv-results-ivgmmresults-iterations"]], "linearmodels.iv.results.IVGMMResults.summary": [[297, "linearmodels-iv-results-ivgmmresults-summary"]], "linearmodels.iv.results.IVGMMResults.resid_ss": [[291, "linearmodels-iv-results-ivgmmresults-resid-ss"]], "linearmodels.iv.results.IVResults.conf_int": [[321, "linearmodels-iv-results-ivresults-conf-int"]], "linearmodels.iv.results.IVResults.basmann": [[319, "linearmodels-iv-results-ivresults-basmann"]], "linearmodels.iv.results.IVModelComparison.pvalues": [[311, "linearmodels-iv-results-ivmodelcomparison-pvalues"]], "linearmodels.iv.results.IVModelComparison.f_statistic": [[308, "linearmodels-iv-results-ivmodelcomparison-f-statistic"]], "linearmodels.iv.results.IVGMMResults.resids": [[292, "linearmodels-iv-results-ivgmmresults-resids"]], "linearmodels.iv.results.IVResults.df_resid": [[328, "linearmodels-iv-results-ivresults-df-resid"]], "linearmodels.iv.results.IVGMMResults.pvalues": [[290, "linearmodels-iv-results-ivgmmresults-pvalues"]], "linearmodels.iv.results.IVGMMResults.weight_type": [[303, "linearmodels-iv-results-ivgmmresults-weight-type"]], "linearmodels.iv.results.IVGMMResults.kappa": [[284, "linearmodels-iv-results-ivgmmresults-kappa"]], "linearmodels.iv.results.IVModelComparison.tstats": [[316, "linearmodels-iv-results-ivmodelcomparison-tstats"]], "linearmodels.iv.results.IVGMMResults.wresids": [[304, "linearmodels-iv-results-ivgmmresults-wresids"]], "linearmodels.iv.results.IVGMMResults.df_model": [[275, "linearmodels-iv-results-ivgmmresults-df-model"]], "linearmodels.iv.results.IVGMMResults.nobs": [[287, "linearmodels-iv-results-ivgmmresults-nobs"]], "linearmodels.iv.results.IVResults.anderson_rubin": [[318, "linearmodels-iv-results-ivresults-anderson-rubin"]], "linearmodels.iv.results.IVModelComparison.nobs": [[309, "linearmodels-iv-results-ivmodelcomparison-nobs"]], "linearmodels.iv.results.IVGMMResults.idiosyncratic": [[281, "linearmodels-iv-results-ivgmmresults-idiosyncratic"]], "linearmodels.iv.results.IVGMMResults.s2": [[295, "linearmodels-iv-results-ivgmmresults-s2"]], "linearmodels.iv.results.IVResults.debiased": [[326, "linearmodels-iv-results-ivresults-debiased"]], "linearmodels.iv.results.IVModelComparison": [[305, "linearmodels-iv-results-ivmodelcomparison"]], "linearmodels.iv.results.IVGMMResults.conf_int": [[269, "linearmodels-iv-results-ivgmmresults-conf-int"]], "linearmodels.iv.results.IVResults.cov_estimator": [[324, "linearmodels-iv-results-ivresults-cov-estimator"]], "linearmodels.iv.results.IVGMMResults.total_ss": [[298, "linearmodels-iv-results-ivgmmresults-total-ss"]], "linearmodels.iv.results.IVGMMResults.cov_type": [[273, "linearmodels-iv-results-ivgmmresults-cov-type"]], "linearmodels.iv.results.IVGMMResults.c_stat": [[268, "linearmodels-iv-results-ivgmmresults-c-stat"]], "linearmodels.iv.results.IVGMMResults.cov_estimator": [[272, "linearmodels-iv-results-ivgmmresults-cov-estimator"]], "linearmodels.iv.results.IVResults.cov": [[322, "linearmodels-iv-results-ivresults-cov"]], "linearmodels.iv.results.IVGMMResults.predict": [[289, "linearmodels-iv-results-ivgmmresults-predict"]], "linearmodels.iv.results.FirstStageResults.individual": [[265, "linearmodels-iv-results-firststageresults-individual"]], "linearmodels.iv.results.FirstStageResults.diagnostics": [[264, "linearmodels-iv-results-firststageresults-diagnostics"]], "linearmodels.iv.results.IVResults": [[317, "linearmodels-iv-results-ivresults"]], "linearmodels.iv.results.IVGMMResults.debiased": [[274, "linearmodels-iv-results-ivgmmresults-debiased"]], "linearmodels.iv.results.IVGMMResults.std_errors": [[296, "linearmodels-iv-results-ivgmmresults-std-errors"]], "linearmodels.iv.model.IVGMM.has_constant": [[223, "linearmodels-iv-model-ivgmm-has-constant"]], "linearmodels.iv.gmm.IVGMMCovariance.s": [[198, "linearmodels-iv-gmm-ivgmmcovariance-s"]], "linearmodels.iv.gmm.IVGMMCovariance.s2": [[199, "linearmodels-iv-gmm-ivgmmcovariance-s2"]], "linearmodels.iv.model.IVGMMCUE": [[229, "linearmodels-iv-model-ivgmmcue"]], "linearmodels.iv.model.IVGMM.predict": [[226, "linearmodels-iv-model-ivgmm-predict"]], "linearmodels.iv.model.IV2SLS.from_formula": [[211, "linearmodels-iv-model-iv2sls-from-formula"]], "linearmodels.iv.model._OLS.notnull": [[259, "linearmodels-iv-model-ols-notnull"]], "linearmodels.iv.model.IV2SLS": [[207, "linearmodels-iv-model-iv2sls"]], "Todo": [[207, "id1"], [218, "id1"], [241, "id1"], [174, "id1"]], "linearmodels.iv.model._OLS.from_formula": [[256, "linearmodels-iv-model-ols-from-formula"]], "linearmodels.iv.results.FirstStageResults": [[263, "linearmodels-iv-results-firststageresults"]], "linearmodels.iv.model.IVGMM.notnull": [[225, "linearmodels-iv-model-ivgmm-notnull"]], "linearmodels.iv.model.IVGMM.estimate_parameters": [[219, "linearmodels-iv-model-ivgmm-estimate-parameters"]], "linearmodels.iv.model.IVGMMCUE.estimate_parameters": [[230, "linearmodels-iv-model-ivgmmcue-estimate-parameters"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config": [[205, "linearmodels-iv-gmm-onewayclusteredweightmatrix-config"]], "linearmodels.iv.model.IVGMMCUE.resids": [[239, "linearmodels-iv-model-ivgmmcue-resids"]], "linearmodels.iv.model.IVGMMCUE.j": [[236, "linearmodels-iv-model-ivgmmcue-j"]], "linearmodels.iv.model.IVGMMCUE.wresids": [[240, "linearmodels-iv-model-ivgmmcue-wresids"]], "linearmodels.iv.model.IVLIML.formula": [[244, "linearmodels-iv-model-ivliml-formula"]], "linearmodels.iv.model._OLS.fit": [[254, "linearmodels-iv-model-ols-fit"]], "linearmodels.iv.model._OLS.isnull": [[258, "linearmodels-iv-model-ols-isnull"]], "linearmodels.iv.model.IVLIML.notnull": [[248, "linearmodels-iv-model-ivliml-notnull"]], "linearmodels.iv.model.IVLIML.isnull": [[247, "linearmodels-iv-model-ivliml-isnull"]], "linearmodels.iv.model.IVLIML.estimate_parameters": [[242, "linearmodels-iv-model-ivliml-estimate-parameters"]], "linearmodels.iv.model.IVGMMCUE.has_constant": [[234, "linearmodels-iv-model-ivgmmcue-has-constant"]], "linearmodels.iv.model.IVLIML.wresids": [[251, "linearmodels-iv-model-ivliml-wresids"]], "linearmodels.iv.model.IVGMMCUE.from_formula": [[233, "linearmodels-iv-model-ivgmmcue-from-formula"]], "linearmodels.iv.model._OLS": [[252, "linearmodels-iv-model-ols"]], "linearmodels.iv.model.IV2SLS.notnull": [[214, "linearmodels-iv-model-iv2sls-notnull"]], "linearmodels.iv.gmm.KernelWeightMatrix.config": [[202, "linearmodels-iv-gmm-kernelweightmatrix-config"]], "linearmodels.iv.model.IVGMM": [[218, "linearmodels-iv-model-ivgmm"]], "linearmodels.iv.model._OLS.predict": [[260, "linearmodels-iv-model-ols-predict"]], "linearmodels.iv.model.IV2SLS.wresids": [[217, "linearmodels-iv-model-iv2sls-wresids"]], "linearmodels.iv.model.IV2SLS.resids": [[216, "linearmodels-iv-model-iv2sls-resids"]], "linearmodels.iv.model._OLS.formula": [[255, "linearmodels-iv-model-ols-formula"]], "linearmodels.iv.gmm.KernelWeightMatrix": [[200, "linearmodels-iv-gmm-kernelweightmatrix"]], "linearmodels.iv.model.IVGMMCUE.formula": [[232, "linearmodels-iv-model-ivgmmcue-formula"]], "linearmodels.iv.model.IVGMMCUE.predict": [[238, "linearmodels-iv-model-ivgmmcue-predict"]], "linearmodels.iv.model.IV2SLS.predict": [[215, "linearmodels-iv-model-iv2sls-predict"]], "linearmodels.iv.model.IVGMM.resids": [[227, "linearmodels-iv-model-ivgmm-resids"]], "linearmodels.iv.model.IVLIML.fit": [[243, "linearmodels-iv-model-ivliml-fit"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix": [[206, "linearmodels-iv-gmm-onewayclusteredweightmatrix-weight-matrix"]], "linearmodels.iv.model._OLS.wresids": [[262, "linearmodels-iv-model-ols-wresids"]], "linearmodels.iv.gmm.OneWayClusteredWeightMatrix": [[204, "linearmodels-iv-gmm-onewayclusteredweightmatrix"]], "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix": [[203, "linearmodels-iv-gmm-kernelweightmatrix-weight-matrix"]], "linearmodels.iv.model.IVGMM.isnull": [[224, "linearmodels-iv-model-ivgmm-isnull"]], "linearmodels.iv.model.IV2SLS.has_constant": [[212, "linearmodels-iv-model-iv2sls-has-constant"]], "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth": [[201, "linearmodels-iv-gmm-kernelweightmatrix-bandwidth"]], "linearmodels.iv.model.IV2SLS.formula": [[210, "linearmodels-iv-model-iv2sls-formula"]], "linearmodels.iv.model.IVGMMCUE.isnull": [[235, "linearmodels-iv-model-ivgmmcue-isnull"]], "linearmodels.iv.model.IV2SLS.isnull": [[213, "linearmodels-iv-model-iv2sls-isnull"]], "linearmodels.iv.model.IVGMM.from_formula": [[222, "linearmodels-iv-model-ivgmm-from-formula"]], "linearmodels.iv.model.IVLIML": [[241, "linearmodels-iv-model-ivliml"]], "linearmodels.iv.model._OLS.resids": [[261, "linearmodels-iv-model-ols-resids"]], "linearmodels.iv.model.IVGMMCUE.fit": [[231, "linearmodels-iv-model-ivgmmcue-fit"]], "linearmodels.iv.model.IVGMM.formula": [[221, "linearmodels-iv-model-ivgmm-formula"]], "linearmodels.iv.model.IVLIML.has_constant": [[246, "linearmodels-iv-model-ivliml-has-constant"]], "linearmodels.iv.model.IVLIML.resids": [[250, "linearmodels-iv-model-ivliml-resids"]], "linearmodels.iv.model.IVGMM.fit": [[220, "linearmodels-iv-model-ivgmm-fit"]], "linearmodels.iv.model.IVLIML.predict": [[249, "linearmodels-iv-model-ivliml-predict"]], "linearmodels.iv.model._OLS.has_constant": [[257, "linearmodels-iv-model-ols-has-constant"]], "linearmodels.iv.model.IV2SLS.fit": [[209, "linearmodels-iv-model-iv2sls-fit"]], "linearmodels.iv.model.IVLIML.from_formula": [[245, "linearmodels-iv-model-ivliml-from-formula"]], "linearmodels.iv.model._OLS.estimate_parameters": [[253, "linearmodels-iv-model-ols-estimate-parameters"]], "linearmodels.iv.model.IVGMMCUE.notnull": [[237, "linearmodels-iv-model-ivgmmcue-notnull"]], "linearmodels.iv.model.IVGMM.wresids": [[228, "linearmodels-iv-model-ivgmm-wresids"]], "linearmodels.iv.model.IV2SLS.estimate_parameters": [[208, "linearmodels-iv-model-iv2sls-estimate-parameters"]], "linearmodels.iv.results.IVResults.summary": [[349, "linearmodels-iv-results-ivresults-summary"]], "linearmodels.iv.results.OLSResults.params": [[375, "linearmodels-iv-results-olsresults-params"]], "linearmodels.iv.results.IVResults.wooldridge_score": [[355, "linearmodels-iv-results-ivresults-wooldridge-score"]], "linearmodels.iv.results.OLSResults.rsquared": [[380, "linearmodels-iv-results-olsresults-rsquared"]], "linearmodels.iv.results.OLSResults.std_errors": [[383, "linearmodels-iv-results-olsresults-std-errors"]], "linearmodels.iv.results.IVResults.rsquared_adj": [[345, "linearmodels-iv-results-ivresults-rsquared-adj"]], "linearmodels.iv.results.OLSResults.idiosyncratic": [[370, "linearmodels-iv-results-olsresults-idiosyncratic"]], "linearmodels.iv.results.OLSResults.wresids": [[388, "linearmodels-iv-results-olsresults-wresids"]], "linearmodels.iv.results.OLSResults.nobs": [[374, "linearmodels-iv-results-olsresults-nobs"]], "linearmodels.iv.results.OLSResults.tstats": [[386, "linearmodels-iv-results-olsresults-tstats"]], "linearmodels.iv.results.OLSResults": [[358, "linearmodels-iv-results-olsresults"]], "linearmodels.iv.results.IVResults.resid_ss": [[342, "linearmodels-iv-results-ivresults-resid-ss"]], "linearmodels.iv.results.IVResults.resids": [[343, "linearmodels-iv-results-ivresults-resids"]], "linearmodels.iv.results.OLSResults.conf_int": [[359, "linearmodels-iv-results-olsresults-conf-int"]], "linearmodels.iv.results.IVResults.fitted_values": [[332, "linearmodels-iv-results-ivresults-fitted-values"]], "linearmodels.iv.results.OLSResults.model_ss": [[373, "linearmodels-iv-results-olsresults-model-ss"]], "linearmodels.iv.results.IVResults.idiosyncratic": [[334, "linearmodels-iv-results-ivresults-idiosyncratic"]], "linearmodels.iv.results.OLSResults.has_constant": [[369, "linearmodels-iv-results-olsresults-has-constant"]], "linearmodels.iv.results.OLSResults.s2": [[382, "linearmodels-iv-results-olsresults-s2"]], "Data Formats for Panel Data Analysis": [[392, "Data-Formats-for-Panel-Data-Analysis"]], "MultiIndex DataFrames": [[392, "MultiIndex-DataFrames"]], "NumPy arrays": [[392, "NumPy-arrays"]], "xarray DataArrays": [[392, "xarray-DataArrays"]], "Conversion of Categorical and Strings to Dummies": [[392, "Conversion-of-Categorical-and-Strings-to-Dummies"]], "linearmodels.iv.results.OLSResults.pvalues": [[377, "linearmodels-iv-results-olsresults-pvalues"]], "linearmodels.iv.results.IVResults.wooldridge_regression": [[354, "linearmodels-iv-results-ivresults-wooldridge-regression"]], "linearmodels.iv.results.IVResults.f_statistic": [[330, "linearmodels-iv-results-ivresults-f-statistic"]], "linearmodels.iv.results.IVResults.method": [[336, "linearmodels-iv-results-ivresults-method"]], "linearmodels.iv.results.IVResults.total_ss": [[350, "linearmodels-iv-results-ivresults-total-ss"]], "linearmodels.iv.results.OLSResults.wald_test": [[387, "linearmodels-iv-results-olsresults-wald-test"]], "Instrumental Variable Estimation": [[391, "module-linearmodels.iv.model"], [148, "instrumental-variable-estimation"]], "Absorbing Least Squares": [[391, "absorbing-least-squares"]], "Instrumental Variable Covariance Estimation": [[391, "module-linearmodels.iv.covariance"]], "Kernel Weight Generators": [[391, "kernel-weight-generators"]], "GMM Weight and Covariance Estimation": [[391, "module-linearmodels.iv.gmm"]], "IV Data Structures": [[391, "module-linearmodels.iv.data"]], "Implementation Choices": [[395, "implementation-choices"]], "Clustered Covariance with Fixed Effects": [[395, "clustered-covariance-with-fixed-effects"]], "R^2 definitions": [[395, "r-2-definitions"]], "linearmodels.iv.results.IVResults.wald_test": [[352, "linearmodels-iv-results-ivresults-wald-test"]], "linearmodels.iv.results.OLSResults.cov": [[360, "linearmodels-iv-results-olsresults-cov"]], "linearmodels.iv.results.OLSResults.resid_ss": [[378, "linearmodels-iv-results-olsresults-resid-ss"]], "linearmodels.iv.results.IVResults.sargan": [[347, "linearmodels-iv-results-ivresults-sargan"]], "linearmodels.iv.results.OLSResults.cov_type": [[363, "linearmodels-iv-results-olsresults-cov-type"]], "linearmodels.iv.results.IVResults.wu_hausman": [[357, "linearmodels-iv-results-ivresults-wu-hausman"]], "linearmodels.iv.results.IVResults.params": [[339, "linearmodels-iv-results-ivresults-params"]], "linearmodels.iv.results.IVResults.model_ss": [[337, "linearmodels-iv-results-ivresults-model-ss"]], "linearmodels.iv.results.IVResults.s2": [[346, "linearmodels-iv-results-ivresults-s2"]], "linearmodels.iv.results.OLSResults.method": [[372, "linearmodels-iv-results-olsresults-method"]], "linearmodels.iv.results.IVResults.nobs": [[338, "linearmodels-iv-results-ivresults-nobs"]], "linearmodels.iv.results.IVResults.rsquared": [[344, "linearmodels-iv-results-ivresults-rsquared"]], "linearmodels.iv.results.OLSResults.rsquared_adj": [[381, "linearmodels-iv-results-olsresults-rsquared-adj"]], "linearmodels.iv.results.IVResults.kappa": [[335, "linearmodels-iv-results-ivresults-kappa"]], "linearmodels.iv.results.OLSResults.fitted_values": [[368, "linearmodels-iv-results-olsresults-fitted-values"]], "Notation": [[390, "notation"]], "Parameter Estimation": [[390, "parameter-estimation"]], "Two-stage Least Squares (2SLS)": [[390, "two-stage-least-squares-2sls"]], "Limited Information Maximum Likelihood and k-class Estimators": [[390, "limited-information-maximum-likelihood-and-k-class-estimators"]], "Continuously Updating Generalized Method of Moments (GMM-CUE)": [[390, "continuously-updating-generalized-method-of-moments-gmm-cue"]], "Basic Statistics": [[390, "basic-statistics"]], "Parameter Covariance Estimation": [[390, "parameter-covariance-estimation"]], "Two-stage LS, LIML and k-class estimators": [[390, "two-stage-ls-liml-and-k-class-estimators"]], "Standard Errors": [[390, "standard-errors"]], "T-statistics": [[390, "t-statistics"]], "P-values": [[390, "p-values"]], "Confidence Intervals": [[390, "confidence-intervals"]], "Linear Hypothesis Tests": [[390, "linear-hypothesis-tests"]], "GMM Covariance estimators": [[390, "gmm-covariance-estimators"]], "GMM Weight Estimators": [[390, "gmm-weight-estimators"]], "Post-estimation": [[390, "post-estimation"]], "2SLS and LIML Post-estimation Results": [[390, "sls-and-liml-post-estimation-results"]], "GMM Post-estimation Results": [[390, "gmm-post-estimation-results"]], "First-stage Estimation Analysis": [[390, "first-stage-estimation-analysis"]], "Kernel Weights and Bandwidth Selection": [[390, "kernel-weights-and-bandwidth-selection"]], "Constant Detection": [[390, "constant-detection"]], "linearmodels.iv.results.OLSResults.cov_config": [[361, "linearmodels-iv-results-olsresults-cov-config"]], "linearmodels.iv.results.IVResults.tstats": [[351, "linearmodels-iv-results-ivresults-tstats"]], "Loading and preparing data": [[394, "Loading-and-preparing-data"]], "PanelOLS with Entity Effects": [[394, "PanelOLS-with-Entity-Effects"]], "PanelOLS with Entity Effects and a constant": [[394, "PanelOLS-with-Entity-Effects-and-a-constant"]], "Panel with Entity and Time Effects": [[394, "Panel-with-Entity-and-Time-Effects"]], "Between OLS": [[394, "Between-OLS"]], "First Difference OLS": [[394, "First-Difference-OLS"]], "Pooled OLS": [[394, "Pooled-OLS"]], "linearmodels.iv.results.IVResults.std_errors": [[348, "linearmodels-iv-results-ivresults-std-errors"]], "linearmodels.iv.results.IVResults.first_stage": [[331, "linearmodels-iv-results-ivresults-first-stage"]], "linearmodels.iv.results.IVResults.wooldridge_overid": [[353, "linearmodels-iv-results-ivresults-wooldridge-overid"]], "linearmodels.iv.results.OLSResults.df_resid": [[366, "linearmodels-iv-results-olsresults-df-resid"]], "linearmodels.iv.results.IVResults.predict": [[340, "linearmodels-iv-results-ivresults-predict"]], "linearmodels.iv.results.OLSResults.cov_estimator": [[362, "linearmodels-iv-results-olsresults-cov-estimator"]], "linearmodels.iv.results.IVResults.pvalues": [[341, "linearmodels-iv-results-ivresults-pvalues"]], "linearmodels.iv.results.OLSResults.f_statistic": [[367, "linearmodels-iv-results-olsresults-f-statistic"]], "linearmodels.iv.results.OLSResults.df_model": [[365, "linearmodels-iv-results-olsresults-df-model"]], "linearmodels.iv.results.OLSResults.total_ss": [[385, "linearmodels-iv-results-olsresults-total-ss"]], "linearmodels.iv.results.OLSResults.debiased": [[364, "linearmodels-iv-results-olsresults-debiased"]], "linearmodels.iv.results.IVResults.has_constant": [[333, "linearmodels-iv-results-ivresults-has-constant"]], "Loading data": [[393, "Loading-data"]], "Basic regression on panel data": [[393, "Basic-regression-on-panel-data"]], "Estimating parameters with uncorrelated effects": [[393, "Estimating-parameters-with-uncorrelated-effects"]], "Random effects": [[393, "Random-effects"]], "The between estimator": [[393, "The-between-estimator"]], "Other options": [[393, "Other-options"]], "Handling correlated effects": [[393, "Handling-correlated-effects"]], "Including fixed effects": [[393, "Including-fixed-effects"]], "Time-invariant Variables": [[393, "Time-invariant-Variables"]], "Time Effects": [[393, "Time-Effects"]], "Effects vs Dummies": [[393, "Effects-vs-Dummies"]], "Other Effects": [[393, "Other-Effects"]], "Using first differences": [[393, "Using-first-differences"]], "Comparing models": [[393, "Comparing-models"]], "Covariance options": [[393, "Covariance-options"]], "Heteroskedasticity Robust Covariance": [[393, "Heteroskedasticity-Robust-Covariance"]], "Clustered by Entity": [[393, "Clustered-by-Entity"]], "Other clusters": [[393, "Other-clusters"]], "linearmodels.iv.results.compare": [[389, "linearmodels-iv-results-compare"]], "linearmodels.iv.results.OLSResults.resids": [[379, "linearmodels-iv-results-olsresults-resids"]], "linearmodels.iv.results.OLSResults.predict": [[376, "linearmodels-iv-results-olsresults-predict"]], "linearmodels.iv.results.OLSResults.kappa": [[371, "linearmodels-iv-results-olsresults-kappa"]], "linearmodels.iv.results.OLSResults.summary": [[384, "linearmodels-iv-results-olsresults-summary"]], "linearmodels.iv.results.IVResults.wresids": [[356, "linearmodels-iv-results-ivresults-wresids"]], "linearmodels.iv.covariance.HeteroskedasticCovariance.config": [[157, "linearmodels-iv-covariance-heteroskedasticcovariance-config"]], "linearmodels.iv.covariance.HeteroskedasticCovariance.s": [[160, "linearmodels-iv-covariance-heteroskedasticcovariance-s"]], "linearmodels.iv.covariance.KernelCovariance.cov": [[170, "linearmodels-iv-covariance-kernelcovariance-cov"]], "Multiple Endogenous Variables": [[147, "Multiple-Endogenous-Variables"]], "Standard formulaic": [[147, "Standard-formulaic"]], "MEPS data": [[147, "MEPS-data"]], "Estimating a model with a formula": [[147, "Estimating-a-model-with-a-formula"]], "Mathematical expression in formulas": [[147, "Mathematical-expression-in-formulas"]], "OLS": [[147, "OLS"]], "Further Examples": [[145, "Further-Examples"]], "Linear Instrumental-Variables Regression": [[145, "Linear-Instrumental-Variables-Regression"]], "Importing data": [[145, "Importing-data"]], "2SLS as OLS": [[145, "2SLS-as-OLS"]], "Just identified 2SLS": [[145, "Just-identified-2SLS"]], "Multiple Instruments": [[145, "Multiple-Instruments"]], "Alternative covariance estimators": [[145, "Alternative-covariance-estimators"]], "Changing the weighting matrix structure in GMM estimation": [[145, "Changing-the-weighting-matrix-structure-in-GMM-estimation"]], "Continuously updating GMM": [[145, "Continuously-updating-GMM"]], "Testing endogeneity": [[145, "Testing-endogeneity"]], "Exogeneity Testing": [[145, "Exogeneity-Testing"]], "Single Instrument Regressions": [[145, "Single-Instrument-Regressions"]], "First Stage Diagnostics": [[145, "First-Stage-Diagnostics"]], "LIML": [[145, "LIML"]], "IV2SLS as OLS": [[145, "IV2SLS-as-OLS"]], "linearmodels.iv.absorbing.Interaction.cont": [[137, "linearmodels-iv-absorbing-interaction-cont"]], "linearmodels.iv.covariance.ClusteredCovariance": [[150, "linearmodels-iv-covariance-clusteredcovariance"]], "linearmodels.iv.absorbing.Interaction.from_frame": [[139, "linearmodels-iv-absorbing-interaction-from-frame"]], "linearmodels.iv.covariance.HeteroskedasticCovariance": [[156, "linearmodels-iv-covariance-heteroskedasticcovariance"]], "linearmodels.iv.data.IVData.ndarray": [[183, "linearmodels-iv-data-ivdata-ndarray"]], "linearmodels.iv.absorbing.Interaction": [[135, "linearmodels-iv-absorbing-interaction"]], "linearmodels.iv.covariance.kernel_weight_quadratic_spectral": [[177, "linearmodels-iv-covariance-kernel-weight-quadratic-spectral"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix": [[190, "linearmodels-iv-gmm-heteroskedasticweightmatrix-weight-matrix"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix": [[191, "linearmodels-iv-gmm-homoskedasticweightmatrix"]], "linearmodels.iv.absorbing.Interaction.hash": [[140, "linearmodels-iv-absorbing-interaction-hash"]], "linearmodels.iv.covariance.KernelCovariance.s": [[172, "linearmodels-iv-covariance-kernelcovariance-s"]], "linearmodels.iv.data.IVData.drop": [[180, "linearmodels-iv-data-ivdata-drop"]], "linearmodels.iv.absorbing.AbsorbingRegressor.regressors": [[134, "linearmodels-iv-absorbing-absorbingregressor-regressors"]], "linearmodels.iv.covariance.HeteroskedasticCovariance.s2": [[161, "linearmodels-iv-covariance-heteroskedasticcovariance-s2"]], "linearmodels.iv.gmm.IVGMMCovariance.config": [[195, "linearmodels-iv-gmm-ivgmmcovariance-config"]], "linearmodels.iv.data.IVData.ndim": [[184, "linearmodels-iv-data-ivdata-ndim"]], "linearmodels.iv.covariance.KernelCovariance.config": [[169, "linearmodels-iv-covariance-kernelcovariance-config"]], "linearmodels.iv.covariance.HomoskedasticCovariance.s": [[166, "linearmodels-iv-covariance-homoskedasticcovariance-s"]], "linearmodels.iv.covariance.KernelCovariance.s2": [[173, "linearmodels-iv-covariance-kernelcovariance-s2"]], "linearmodels.iv.data.IVData.cols": [[179, "linearmodels-iv-data-ivdata-cols"]], "linearmodels.iv.covariance.HomoskedasticCovariance.cov": [[164, "linearmodels-iv-covariance-homoskedasticcovariance-cov"]], "linearmodels.iv.covariance.HomoskedasticCovariance.debiased": [[165, "linearmodels-iv-covariance-homoskedasticcovariance-debiased"]], "Estimators": [[149, "estimators"]], "Optional Arguments": [[149, "optional-arguments"]], "2SLS Estimation": [[149, "sls-estimation"]], "LIML Estimation": [[149, "liml-estimation"]], "GMM and GMM-CUE Estimation": [[149, "gmm-and-gmm-cue-estimation"]], "Model Estimation and Covariance Specification": [[149, "model-estimation-and-covariance-specification"]], "GMM-CUE Estimation": [[149, "gmm-cue-estimation"]], "linearmodels.iv.covariance.KernelCovariance.debiased": [[171, "linearmodels-iv-covariance-kernelcovariance-debiased"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config": [[189, "linearmodels-iv-gmm-heteroskedasticweightmatrix-config"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix": [[193, "linearmodels-iv-gmm-homoskedasticweightmatrix-weight-matrix"]], "linearmodels.iv.covariance.kernel_weight_bartlett": [[175, "linearmodels-iv-covariance-kernel-weight-bartlett"]], "linearmodels.iv.gmm.IVGMMCovariance.debiased": [[197, "linearmodels-iv-gmm-ivgmmcovariance-debiased"]], "linearmodels.iv.gmm.HeteroskedasticWeightMatrix": [[188, "linearmodels-iv-gmm-heteroskedasticweightmatrix"]], "Absorbing Regression": [[144, "Absorbing-Regression"]], "Including a constant": [[144, "Including-a-constant"]], "Excluding the constant": [[144, "Excluding-the-constant"]], "Optimization Options": [[144, "Optimization-Options"]], "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config": [[192, "linearmodels-iv-gmm-homoskedasticweightmatrix-config"]], "linearmodels.iv.covariance.ClusteredCovariance.config": [[151, "linearmodels-iv-covariance-clusteredcovariance-config"]], "linearmodels.iv.covariance.ClusteredCovariance.s2": [[155, "linearmodels-iv-covariance-clusteredcovariance-s2"]], "linearmodels.iv.absorbing.Interaction.isnull": [[141, "linearmodels-iv-absorbing-interaction-isnull"]], "linearmodels.iv.data.IVData": [[178, "linearmodels-iv-data-ivdata"]], "linearmodels.iv.covariance.kernel_weight_parzen": [[176, "linearmodels-iv-covariance-kernel-weight-parzen"]], "linearmodels.iv.covariance.HeteroskedasticCovariance.cov": [[158, "linearmodels-iv-covariance-heteroskedasticcovariance-cov"]], "linearmodels.iv.data.IVData.labels": [[182, "linearmodels-iv-data-ivdata-labels"]], "linearmodels.iv.absorbing.AbsorbingRegressor.hash": [[133, "linearmodels-iv-absorbing-absorbingregressor-hash"]], "linearmodels.iv.covariance.ClusteredCovariance.s": [[154, "linearmodels-iv-covariance-clusteredcovariance-s"]], "linearmodels.iv.data.IVData.shape": [[187, "linearmodels-iv-data-ivdata-shape"]], "linearmodels.iv.absorbing.AbsorbingRegressor.has_constant": [[132, "linearmodels-iv-absorbing-absorbingregressor-has-constant"]], "linearmodels.iv.covariance.HomoskedasticCovariance": [[162, "linearmodels-iv-covariance-homoskedasticcovariance"]], "linearmodels.iv.gmm.IVGMMCovariance.cov": [[196, "linearmodels-iv-gmm-ivgmmcovariance-cov"]], "linearmodels.iv.absorbing.Interaction.cat": [[136, "linearmodels-iv-absorbing-interaction-cat"]], "linearmodels.iv.data.IVData.isnull": [[181, "linearmodels-iv-data-ivdata-isnull"]], "Basic Examples": [[146, "Basic-Examples"]], "Wages of Married Women": [[146, "Wages-of-Married-Women"]], "Wages of Men": [[146, "Wages-of-Men"]], "Weighted IV": [[146, "Weighted-IV"]], "Smoking and birth weight": [[146, "Smoking-and-birth-weight"]], "Proximity and education": [[146, "Proximity-and-education"]], "Formula interface": [[146, "Formula-interface"]], "Categorical Variables": [[146, "Categorical-Variables"]], "Post-estimation diagnostics": [[146, "Post-estimation-diagnostics"]], "Panel IV": [[146, "Panel-IV"]], "linearmodels.iv.covariance.HomoskedasticCovariance.config": [[163, "linearmodels-iv-covariance-homoskedasticcovariance-config"]], "linearmodels.iv.covariance.HeteroskedasticCovariance.debiased": [[159, "linearmodels-iv-covariance-heteroskedasticcovariance-debiased"]], "linearmodels.iv.gmm.IVGMMCovariance": [[194, "linearmodels-iv-gmm-ivgmmcovariance"]], "linearmodels.iv.absorbing.Interaction.drop": [[138, "linearmodels-iv-absorbing-interaction-drop"]], "linearmodels.iv.covariance.kernel_optimal_bandwidth": [[174, "linearmodels-iv-covariance-kernel-optimal-bandwidth"]], "linearmodels.iv.data.IVData.rows": [[186, "linearmodels-iv-data-ivdata-rows"]], "linearmodels.iv.covariance.ClusteredCovariance.debiased": [[153, "linearmodels-iv-covariance-clusteredcovariance-debiased"]], "linearmodels.iv.absorbing.Interaction.nobs": [[142, "linearmodels-iv-absorbing-interaction-nobs"]], "linearmodels.iv.covariance.KernelCovariance": [[168, "linearmodels-iv-covariance-kernelcovariance"]], "linearmodels.iv.data.IVData.pandas": [[185, "linearmodels-iv-data-ivdata-pandas"]], "linearmodels.iv.absorbing.Interaction.sparse": [[143, "linearmodels-iv-absorbing-interaction-sparse"]], "linearmodels.iv.covariance.ClusteredCovariance.cov": [[152, "linearmodels-iv-covariance-clusteredcovariance-cov"]], "linearmodels.iv.covariance.HomoskedasticCovariance.s2": [[167, "linearmodels-iv-covariance-homoskedasticcovariance-s2"]]}, "indexentries": {"heteroskedasticcovariance (class in linearmodels.asset_pricing.covariance)": [[0, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance"]], "config (heteroskedasticcovariance property)": [[1, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.config"], [157, "linearmodels.iv.covariance.HeteroskedasticCovariance.config"]], "cov (heteroskedasticcovariance property)": [[2, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.cov"], [158, "linearmodels.iv.covariance.HeteroskedasticCovariance.cov"], [437, "linearmodels.panel.covariance.HeteroskedasticCovariance.cov"], [732, "linearmodels.system.covariance.HeteroskedasticCovariance.cov"]], "inv_jacobian (heteroskedasticcovariance property)": [[3, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.inv_jacobian"]], "jacobian (heteroskedasticcovariance property)": [[4, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.jacobian"]], "s (heteroskedasticcovariance property)": [[5, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.s"], [160, "linearmodels.iv.covariance.HeteroskedasticCovariance.s"]], "square (heteroskedasticcovariance property)": [[6, "linearmodels.asset_pricing.covariance.HeteroskedasticCovariance.square"]], "kernelcovariance (class in linearmodels.asset_pricing.covariance)": [[7, "linearmodels.asset_pricing.covariance.KernelCovariance"]], "bandwidth (kernelcovariance property)": [[8, "linearmodels.asset_pricing.covariance.KernelCovariance.bandwidth"], [740, "linearmodels.system.covariance.KernelCovariance.bandwidth"]], "config (kernelcovariance property)": [[9, "linearmodels.asset_pricing.covariance.KernelCovariance.config"], [169, "linearmodels.iv.covariance.KernelCovariance.config"]], "cov (kernelcovariance property)": [[10, "linearmodels.asset_pricing.covariance.KernelCovariance.cov"], [170, "linearmodels.iv.covariance.KernelCovariance.cov"], [741, "linearmodels.system.covariance.KernelCovariance.cov"]], "inv_jacobian (kernelcovariance property)": [[11, "linearmodels.asset_pricing.covariance.KernelCovariance.inv_jacobian"]], "jacobian (kernelcovariance property)": [[12, "linearmodels.asset_pricing.covariance.KernelCovariance.jacobian"]], "kernel (kernelcovariance property)": [[13, "linearmodels.asset_pricing.covariance.KernelCovariance.kernel"], [743, "linearmodels.system.covariance.KernelCovariance.kernel"]], "s (kernelcovariance property)": [[14, "linearmodels.asset_pricing.covariance.KernelCovariance.s"], [172, "linearmodels.iv.covariance.KernelCovariance.s"]], "square (kernelcovariance property)": [[15, "linearmodels.asset_pricing.covariance.KernelCovariance.square"]], "linearfactormodel (class in linearmodels.asset_pricing.model)": [[16, "linearmodels.asset_pricing.model.LinearFactorModel"]], "fit() (linearfactormodel method)": [[17, "linearmodels.asset_pricing.model.LinearFactorModel.fit"]], "formula (linearfactormodel property)": [[18, "linearmodels.asset_pricing.model.LinearFactorModel.formula"]], "from_formula() (linearfactormodel class method)": [[19, "linearmodels.asset_pricing.model.LinearFactorModel.from_formula"]], "linearfactormodelgmm (class in linearmodels.asset_pricing.model)": [[20, "linearmodels.asset_pricing.model.LinearFactorModelGMM"]], "fit() (linearfactormodelgmm method)": [[21, "linearmodels.asset_pricing.model.LinearFactorModelGMM.fit"]], "formula (linearfactormodelgmm property)": [[22, "linearmodels.asset_pricing.model.LinearFactorModelGMM.formula"]], "from_formula() (linearfactormodelgmm class method)": [[23, "linearmodels.asset_pricing.model.LinearFactorModelGMM.from_formula"]], "tradedfactormodel (class in linearmodels.asset_pricing.model)": [[24, "linearmodels.asset_pricing.model.TradedFactorModel"]], "fit() (tradedfactormodel method)": [[25, "linearmodels.asset_pricing.model.TradedFactorModel.fit"]], "formula (tradedfactormodel property)": [[26, "linearmodels.asset_pricing.model.TradedFactorModel.formula"]], "from_formula() (tradedfactormodel class method)": [[27, "linearmodels.asset_pricing.model.TradedFactorModel.from_formula"]], "gmmfactormodelresults (class in linearmodels.asset_pricing.results)": [[28, "linearmodels.asset_pricing.results.GMMFactorModelResults"]], "alphas (gmmfactormodelresults property)": [[29, "linearmodels.asset_pricing.results.GMMFactorModelResults.alphas"]], "betas (gmmfactormodelresults property)": [[30, "linearmodels.asset_pricing.results.GMMFactorModelResults.betas"]], "cov (gmmfactormodelresults property)": [[31, "linearmodels.asset_pricing.results.GMMFactorModelResults.cov"]], "cov_estimator (gmmfactormodelresults property)": [[32, "linearmodels.asset_pricing.results.GMMFactorModelResults.cov_estimator"]], "full_summary (gmmfactormodelresults property)": [[33, "linearmodels.asset_pricing.results.GMMFactorModelResults.full_summary"]], "iterations (gmmfactormodelresults property)": [[34, "linearmodels.asset_pricing.results.GMMFactorModelResults.iterations"]], "j_statistic (gmmfactormodelresults property)": [[35, "linearmodels.asset_pricing.results.GMMFactorModelResults.j_statistic"]], "name (gmmfactormodelresults property)": [[36, "linearmodels.asset_pricing.results.GMMFactorModelResults.name"]], "nobs (gmmfactormodelresults property)": [[37, "linearmodels.asset_pricing.results.GMMFactorModelResults.nobs"]], "params (gmmfactormodelresults property)": [[38, "linearmodels.asset_pricing.results.GMMFactorModelResults.params"]], "pvalues (gmmfactormodelresults property)": [[39, "linearmodels.asset_pricing.results.GMMFactorModelResults.pvalues"]], "residual_ss (gmmfactormodelresults property)": [[40, "linearmodels.asset_pricing.results.GMMFactorModelResults.residual_ss"]], "risk_premia (gmmfactormodelresults property)": [[41, "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia"]], "risk_premia_se (gmmfactormodelresults property)": [[42, "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_se"]], "risk_premia_tstats (gmmfactormodelresults property)": [[43, "linearmodels.asset_pricing.results.GMMFactorModelResults.risk_premia_tstats"]], "rsquared (gmmfactormodelresults property)": [[44, "linearmodels.asset_pricing.results.GMMFactorModelResults.rsquared"]], "std_errors (gmmfactormodelresults property)": [[45, "linearmodels.asset_pricing.results.GMMFactorModelResults.std_errors"]], "summary (gmmfactormodelresults property)": [[46, "linearmodels.asset_pricing.results.GMMFactorModelResults.summary"]], "total_ss (gmmfactormodelresults property)": [[47, "linearmodels.asset_pricing.results.GMMFactorModelResults.total_ss"]], "tstats (gmmfactormodelresults property)": [[48, "linearmodels.asset_pricing.results.GMMFactorModelResults.tstats"]], "linearfactormodelresults (class in linearmodels.asset_pricing.results)": [[49, "linearmodels.asset_pricing.results.LinearFactorModelResults"]], "alphas (linearfactormodelresults property)": [[50, "linearmodels.asset_pricing.results.LinearFactorModelResults.alphas"]], "betas (linearfactormodelresults property)": [[51, "linearmodels.asset_pricing.results.LinearFactorModelResults.betas"]], "cov (linearfactormodelresults property)": [[52, "linearmodels.asset_pricing.results.LinearFactorModelResults.cov"]], "cov_estimator (linearfactormodelresults property)": [[53, "linearmodels.asset_pricing.results.LinearFactorModelResults.cov_estimator"]], "full_summary (linearfactormodelresults property)": [[54, "linearmodels.asset_pricing.results.LinearFactorModelResults.full_summary"]], "j_statistic (linearfactormodelresults property)": [[55, "linearmodels.asset_pricing.results.LinearFactorModelResults.j_statistic"]], "name (linearfactormodelresults property)": [[56, "linearmodels.asset_pricing.results.LinearFactorModelResults.name"]], "nobs (linearfactormodelresults property)": [[57, "linearmodels.asset_pricing.results.LinearFactorModelResults.nobs"]], "params (linearfactormodelresults property)": [[58, "linearmodels.asset_pricing.results.LinearFactorModelResults.params"]], "pvalues (linearfactormodelresults property)": [[59, "linearmodels.asset_pricing.results.LinearFactorModelResults.pvalues"]], "residual_ss (linearfactormodelresults property)": [[60, "linearmodels.asset_pricing.results.LinearFactorModelResults.residual_ss"]], "risk_premia (linearfactormodelresults property)": [[61, "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia"]], "risk_premia_se (linearfactormodelresults property)": [[62, "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_se"]], "risk_premia_tstats (linearfactormodelresults property)": [[63, "linearmodels.asset_pricing.results.LinearFactorModelResults.risk_premia_tstats"]], "rsquared (linearfactormodelresults property)": [[64, "linearmodels.asset_pricing.results.LinearFactorModelResults.rsquared"]], "std_errors (linearfactormodelresults property)": [[65, "linearmodels.asset_pricing.results.LinearFactorModelResults.std_errors"]], "summary (linearfactormodelresults property)": [[66, "linearmodels.asset_pricing.results.LinearFactorModelResults.summary"]], "total_ss (linearfactormodelresults property)": [[67, "linearmodels.asset_pricing.results.LinearFactorModelResults.total_ss"]], "tstats (linearfactormodelresults property)": [[68, "linearmodels.asset_pricing.results.LinearFactorModelResults.tstats"]], "linearmodels.asset_pricing.covariance": [[74, "module-linearmodels.asset_pricing.covariance"]], "linearmodels.asset_pricing.model": [[74, "module-linearmodels.asset_pricing.model"]], "linearmodels.asset_pricing.results": [[74, "module-linearmodels.asset_pricing.results"]], "module": [[74, "module-linearmodels.asset_pricing.covariance"], [74, "module-linearmodels.asset_pricing.model"], [74, "module-linearmodels.asset_pricing.results"], [76, "module-linearmodels.compat.statsmodels"], [391, "module-linearmodels.iv.absorbing"], [391, "module-linearmodels.iv.covariance"], [391, "module-linearmodels.iv.data"], [391, "module-linearmodels.iv.gmm"], [391, "module-linearmodels.iv.model"], [391, "module-linearmodels.iv.results"], [707, "module-linearmodels.panel.covariance"], [707, "module-linearmodels.panel.data"], [707, "module-linearmodels.panel.model"], [707, "module-linearmodels.panel.results"], [707, "module-linearmodels.panel.utility"], [715, "module-linearmodels.system.covariance"], [715, "module-linearmodels.system.gmm"], [715, "module-linearmodels.system.model"], [715, "module-linearmodels.system.results"], [862, "module-linearmodels.utility"]], "linearmodels.compat.statsmodels": [[76, "module-linearmodels.compat.statsmodels"]], "summary (class in linearmodels.compat.statsmodels)": [[77, "linearmodels.compat.statsmodels.Summary"]], "add_extra_txt() (summary method)": [[78, "linearmodels.compat.statsmodels.Summary.add_extra_txt"]], "add_table_2cols() (summary method)": [[79, "linearmodels.compat.statsmodels.Summary.add_table_2cols"]], "add_table_params() (summary method)": [[80, "linearmodels.compat.statsmodels.Summary.add_table_params"]], "as_csv() (summary method)": [[81, "linearmodels.compat.statsmodels.Summary.as_csv"]], "as_html() (summary method)": [[82, "linearmodels.compat.statsmodels.Summary.as_html"]], "as_latex() (summary method)": [[83, "linearmodels.compat.statsmodels.Summary.as_latex"]], "as_text() (summary method)": [[84, "linearmodels.compat.statsmodels.Summary.as_text"]], "absorbingls (class in linearmodels.iv.absorbing)": [[87, "linearmodels.iv.absorbing.AbsorbingLS"]], "absorbed_dependent (absorbingls property)": [[88, "linearmodels.iv.absorbing.AbsorbingLS.absorbed_dependent"]], "absorbed_exog (absorbingls property)": [[89, "linearmodels.iv.absorbing.AbsorbingLS.absorbed_exog"]], "dependent (absorbingls property)": [[90, "linearmodels.iv.absorbing.AbsorbingLS.dependent"]], "exog (absorbingls property)": [[91, "linearmodels.iv.absorbing.AbsorbingLS.exog"]], "fit() (absorbingls method)": [[92, "linearmodels.iv.absorbing.AbsorbingLS.fit"]], "has_constant (absorbingls property)": [[93, "linearmodels.iv.absorbing.AbsorbingLS.has_constant"]], "instruments (absorbingls property)": [[94, "linearmodels.iv.absorbing.AbsorbingLS.instruments"]], "resids() (absorbingls method)": [[95, "linearmodels.iv.absorbing.AbsorbingLS.resids"]], "weights (absorbingls property)": [[96, "linearmodels.iv.absorbing.AbsorbingLS.weights"]], "wresids() (absorbingls method)": [[97, "linearmodels.iv.absorbing.AbsorbingLS.wresids"]], "absorbinglsresults (class in linearmodels.iv.absorbing)": [[98, "linearmodels.iv.absorbing.AbsorbingLSResults"]], "absorbed_effects (absorbinglsresults property)": [[99, "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_effects"]], "absorbed_rsquared (absorbinglsresults property)": [[100, "linearmodels.iv.absorbing.AbsorbingLSResults.absorbed_rsquared"]], "conf_int() (absorbinglsresults method)": [[101, "linearmodels.iv.absorbing.AbsorbingLSResults.conf_int"]], "cov (absorbinglsresults property)": [[102, "linearmodels.iv.absorbing.AbsorbingLSResults.cov"]], "cov_config (absorbinglsresults property)": [[103, "linearmodels.iv.absorbing.AbsorbingLSResults.cov_config"]], "cov_estimator (absorbinglsresults property)": [[104, "linearmodels.iv.absorbing.AbsorbingLSResults.cov_estimator"]], "cov_type (absorbinglsresults property)": [[105, "linearmodels.iv.absorbing.AbsorbingLSResults.cov_type"]], "debiased (absorbinglsresults property)": [[106, "linearmodels.iv.absorbing.AbsorbingLSResults.debiased"]], "df_absorbed (absorbinglsresults property)": [[107, "linearmodels.iv.absorbing.AbsorbingLSResults.df_absorbed"]], "df_model (absorbinglsresults property)": [[108, "linearmodels.iv.absorbing.AbsorbingLSResults.df_model"]], "df_resid (absorbinglsresults property)": [[109, "linearmodels.iv.absorbing.AbsorbingLSResults.df_resid"]], "f_statistic (absorbinglsresults property)": [[110, "linearmodels.iv.absorbing.AbsorbingLSResults.f_statistic"]], "fitted_values (absorbinglsresults property)": [[111, "linearmodels.iv.absorbing.AbsorbingLSResults.fitted_values"]], "has_constant (absorbinglsresults property)": [[112, "linearmodels.iv.absorbing.AbsorbingLSResults.has_constant"]], "idiosyncratic (absorbinglsresults property)": [[113, "linearmodels.iv.absorbing.AbsorbingLSResults.idiosyncratic"]], "method (absorbinglsresults property)": [[114, "linearmodels.iv.absorbing.AbsorbingLSResults.method"]], "model_ss (absorbinglsresults property)": [[115, "linearmodels.iv.absorbing.AbsorbingLSResults.model_ss"]], "nobs (absorbinglsresults property)": [[116, "linearmodels.iv.absorbing.AbsorbingLSResults.nobs"]], "params (absorbinglsresults property)": [[117, "linearmodels.iv.absorbing.AbsorbingLSResults.params"]], "pvalues (absorbinglsresults property)": [[118, "linearmodels.iv.absorbing.AbsorbingLSResults.pvalues"]], "resid_ss (absorbinglsresults property)": [[119, "linearmodels.iv.absorbing.AbsorbingLSResults.resid_ss"]], "resids (absorbinglsresults property)": [[120, "linearmodels.iv.absorbing.AbsorbingLSResults.resids"]], "rsquared (absorbinglsresults property)": [[121, "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared"]], "rsquared_adj (absorbinglsresults property)": [[122, "linearmodels.iv.absorbing.AbsorbingLSResults.rsquared_adj"]], "s2 (absorbinglsresults property)": [[123, "linearmodels.iv.absorbing.AbsorbingLSResults.s2"]], "std_errors (absorbinglsresults property)": [[124, "linearmodels.iv.absorbing.AbsorbingLSResults.std_errors"]], "summary (absorbinglsresults property)": [[125, "linearmodels.iv.absorbing.AbsorbingLSResults.summary"]], "total_ss (absorbinglsresults property)": [[126, "linearmodels.iv.absorbing.AbsorbingLSResults.total_ss"]], "tstats (absorbinglsresults property)": [[127, "linearmodels.iv.absorbing.AbsorbingLSResults.tstats"]], "wald_test() (absorbinglsresults method)": [[128, "linearmodels.iv.absorbing.AbsorbingLSResults.wald_test"]], "wresids (absorbinglsresults property)": [[129, "linearmodels.iv.absorbing.AbsorbingLSResults.wresids"]], "absorbingregressor (class in linearmodels.iv.absorbing)": [[130, "linearmodels.iv.absorbing.AbsorbingRegressor"]], "approx_rank (absorbingregressor property)": [[131, "linearmodels.iv.absorbing.AbsorbingRegressor.approx_rank"]], "has_constant (absorbingregressor property)": [[132, "linearmodels.iv.absorbing.AbsorbingRegressor.has_constant"]], "hash (absorbingregressor property)": [[133, "linearmodels.iv.absorbing.AbsorbingRegressor.hash"]], "regressors (absorbingregressor property)": [[134, "linearmodels.iv.absorbing.AbsorbingRegressor.regressors"]], "interaction (class in linearmodels.iv.absorbing)": [[135, "linearmodels.iv.absorbing.Interaction"]], "cat (interaction property)": [[136, "linearmodels.iv.absorbing.Interaction.cat"]], "cont (interaction property)": [[137, "linearmodels.iv.absorbing.Interaction.cont"]], "drop() (interaction method)": [[138, "linearmodels.iv.absorbing.Interaction.drop"]], "from_frame() (interaction static method)": [[139, "linearmodels.iv.absorbing.Interaction.from_frame"]], "hash (interaction property)": [[140, "linearmodels.iv.absorbing.Interaction.hash"]], "isnull (interaction property)": [[141, "linearmodels.iv.absorbing.Interaction.isnull"]], "nobs (interaction property)": [[142, "linearmodels.iv.absorbing.Interaction.nobs"]], "sparse (interaction property)": [[143, "linearmodels.iv.absorbing.Interaction.sparse"]], "clusteredcovariance (class in linearmodels.iv.covariance)": [[150, "linearmodels.iv.covariance.ClusteredCovariance"]], "config (clusteredcovariance property)": [[151, "linearmodels.iv.covariance.ClusteredCovariance.config"]], "cov (clusteredcovariance property)": [[152, "linearmodels.iv.covariance.ClusteredCovariance.cov"], [411, "linearmodels.panel.covariance.ClusteredCovariance.cov"], [717, "linearmodels.system.covariance.ClusteredCovariance.cov"]], "debiased (clusteredcovariance property)": [[153, "linearmodels.iv.covariance.ClusteredCovariance.debiased"]], "s (clusteredcovariance property)": [[154, "linearmodels.iv.covariance.ClusteredCovariance.s"]], "s2 (clusteredcovariance property)": [[155, "linearmodels.iv.covariance.ClusteredCovariance.s2"], [415, "linearmodels.panel.covariance.ClusteredCovariance.s2"]], "heteroskedasticcovariance (class in linearmodels.iv.covariance)": [[156, "linearmodels.iv.covariance.HeteroskedasticCovariance"]], "debiased (heteroskedasticcovariance property)": [[159, "linearmodels.iv.covariance.HeteroskedasticCovariance.debiased"]], "s2 (heteroskedasticcovariance property)": [[161, "linearmodels.iv.covariance.HeteroskedasticCovariance.s2"], [441, "linearmodels.panel.covariance.HeteroskedasticCovariance.s2"]], "homoskedasticcovariance (class in linearmodels.iv.covariance)": [[162, "linearmodels.iv.covariance.HomoskedasticCovariance"]], "config (homoskedasticcovariance property)": [[163, "linearmodels.iv.covariance.HomoskedasticCovariance.config"]], "cov (homoskedasticcovariance property)": [[164, "linearmodels.iv.covariance.HomoskedasticCovariance.cov"], [445, "linearmodels.panel.covariance.HomoskedasticCovariance.cov"], [736, "linearmodels.system.covariance.HomoskedasticCovariance.cov"]], "debiased (homoskedasticcovariance property)": [[165, "linearmodels.iv.covariance.HomoskedasticCovariance.debiased"]], "s (homoskedasticcovariance property)": [[166, "linearmodels.iv.covariance.HomoskedasticCovariance.s"]], "s2 (homoskedasticcovariance property)": [[167, "linearmodels.iv.covariance.HomoskedasticCovariance.s2"], [449, "linearmodels.panel.covariance.HomoskedasticCovariance.s2"]], "kernelcovariance (class in linearmodels.iv.covariance)": [[168, "linearmodels.iv.covariance.KernelCovariance"]], "debiased (kernelcovariance property)": [[171, "linearmodels.iv.covariance.KernelCovariance.debiased"]], "s2 (kernelcovariance property)": [[173, "linearmodels.iv.covariance.KernelCovariance.s2"]], "kernel_optimal_bandwidth() (in module linearmodels.iv.covariance)": [[174, "linearmodels.iv.covariance.kernel_optimal_bandwidth"]], "kernel_weight_bartlett() (in module linearmodels.iv.covariance)": [[175, "linearmodels.iv.covariance.kernel_weight_bartlett"]], "kernel_weight_parzen() (in module linearmodels.iv.covariance)": [[176, "linearmodels.iv.covariance.kernel_weight_parzen"]], "kernel_weight_quadratic_spectral() (in module linearmodels.iv.covariance)": [[177, "linearmodels.iv.covariance.kernel_weight_quadratic_spectral"]], "ivdata (class in linearmodels.iv.data)": [[178, "linearmodels.iv.data.IVData"]], "cols (ivdata property)": [[179, "linearmodels.iv.data.IVData.cols"]], "drop() (ivdata method)": [[180, "linearmodels.iv.data.IVData.drop"]], "isnull (ivdata property)": [[181, "linearmodels.iv.data.IVData.isnull"]], "labels (ivdata property)": [[182, "linearmodels.iv.data.IVData.labels"]], "ndarray (ivdata property)": [[183, "linearmodels.iv.data.IVData.ndarray"]], "ndim (ivdata property)": [[184, "linearmodels.iv.data.IVData.ndim"]], "pandas (ivdata property)": [[185, "linearmodels.iv.data.IVData.pandas"]], "rows (ivdata property)": [[186, "linearmodels.iv.data.IVData.rows"]], "shape (ivdata property)": [[187, "linearmodels.iv.data.IVData.shape"]], "heteroskedasticweightmatrix (class in linearmodels.iv.gmm)": [[188, "linearmodels.iv.gmm.HeteroskedasticWeightMatrix"]], "config (heteroskedasticweightmatrix property)": [[189, "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.config"], [746, "linearmodels.system.gmm.HeteroskedasticWeightMatrix.config"]], "weight_matrix() (heteroskedasticweightmatrix method)": [[190, "linearmodels.iv.gmm.HeteroskedasticWeightMatrix.weight_matrix"], [748, "linearmodels.system.gmm.HeteroskedasticWeightMatrix.weight_matrix"]], "homoskedasticweightmatrix (class in linearmodels.iv.gmm)": [[191, "linearmodels.iv.gmm.HomoskedasticWeightMatrix"]], "config (homoskedasticweightmatrix property)": [[192, "linearmodels.iv.gmm.HomoskedasticWeightMatrix.config"], [750, "linearmodels.system.gmm.HomoskedasticWeightMatrix.config"]], "weight_matrix() (homoskedasticweightmatrix method)": [[193, "linearmodels.iv.gmm.HomoskedasticWeightMatrix.weight_matrix"], [752, "linearmodels.system.gmm.HomoskedasticWeightMatrix.weight_matrix"]], "ivgmmcovariance (class in linearmodels.iv.gmm)": [[194, "linearmodels.iv.gmm.IVGMMCovariance"]], "config (ivgmmcovariance property)": [[195, "linearmodels.iv.gmm.IVGMMCovariance.config"]], "cov (ivgmmcovariance property)": [[196, "linearmodels.iv.gmm.IVGMMCovariance.cov"]], "debiased (ivgmmcovariance property)": [[197, "linearmodels.iv.gmm.IVGMMCovariance.debiased"]], "s (ivgmmcovariance property)": [[198, "linearmodels.iv.gmm.IVGMMCovariance.s"]], "s2 (ivgmmcovariance property)": [[199, "linearmodels.iv.gmm.IVGMMCovariance.s2"]], "kernelweightmatrix (class in linearmodels.iv.gmm)": [[200, "linearmodels.iv.gmm.KernelWeightMatrix"]], "bandwidth (kernelweightmatrix property)": [[201, "linearmodels.iv.gmm.KernelWeightMatrix.bandwidth"], [754, "linearmodels.system.gmm.KernelWeightMatrix.bandwidth"]], "config (kernelweightmatrix property)": [[202, "linearmodels.iv.gmm.KernelWeightMatrix.config"], [755, "linearmodels.system.gmm.KernelWeightMatrix.config"]], "weight_matrix() (kernelweightmatrix method)": [[203, "linearmodels.iv.gmm.KernelWeightMatrix.weight_matrix"], [758, "linearmodels.system.gmm.KernelWeightMatrix.weight_matrix"]], "onewayclusteredweightmatrix (class in linearmodels.iv.gmm)": [[204, "linearmodels.iv.gmm.OneWayClusteredWeightMatrix"]], "config (onewayclusteredweightmatrix property)": [[205, "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.config"]], "weight_matrix() (onewayclusteredweightmatrix method)": [[206, "linearmodels.iv.gmm.OneWayClusteredWeightMatrix.weight_matrix"]], "iv2sls (class in linearmodels.iv.model)": [[207, "linearmodels.iv.model.IV2SLS"]], "estimate_parameters() (iv2sls static method)": [[208, "linearmodels.iv.model.IV2SLS.estimate_parameters"]], "fit() (iv2sls method)": [[209, "linearmodels.iv.model.IV2SLS.fit"]], "formula (iv2sls property)": [[210, "linearmodels.iv.model.IV2SLS.formula"]], "from_formula() (iv2sls static method)": [[211, "linearmodels.iv.model.IV2SLS.from_formula"]], "has_constant (iv2sls property)": [[212, "linearmodels.iv.model.IV2SLS.has_constant"]], "isnull (iv2sls property)": [[213, "linearmodels.iv.model.IV2SLS.isnull"]], "notnull (iv2sls property)": [[214, "linearmodels.iv.model.IV2SLS.notnull"]], "predict() (iv2sls method)": [[215, "linearmodels.iv.model.IV2SLS.predict"]], "resids() (iv2sls method)": [[216, "linearmodels.iv.model.IV2SLS.resids"]], "wresids() (iv2sls method)": [[217, "linearmodels.iv.model.IV2SLS.wresids"]], "ivgmm (class in linearmodels.iv.model)": [[218, "linearmodels.iv.model.IVGMM"]], "estimate_parameters() (ivgmm static method)": [[219, "linearmodels.iv.model.IVGMM.estimate_parameters"]], "fit() (ivgmm method)": [[220, "linearmodels.iv.model.IVGMM.fit"]], "formula (ivgmm property)": [[221, "linearmodels.iv.model.IVGMM.formula"]], "from_formula() (ivgmm static method)": [[222, "linearmodels.iv.model.IVGMM.from_formula"]], "has_constant (ivgmm property)": [[223, "linearmodels.iv.model.IVGMM.has_constant"]], "isnull (ivgmm property)": [[224, "linearmodels.iv.model.IVGMM.isnull"]], "notnull (ivgmm property)": [[225, "linearmodels.iv.model.IVGMM.notnull"]], "predict() (ivgmm method)": [[226, "linearmodels.iv.model.IVGMM.predict"]], "resids() (ivgmm method)": [[227, "linearmodels.iv.model.IVGMM.resids"]], "wresids() (ivgmm method)": [[228, "linearmodels.iv.model.IVGMM.wresids"]], "ivgmmcue (class in linearmodels.iv.model)": [[229, "linearmodels.iv.model.IVGMMCUE"]], "estimate_parameters() (ivgmmcue method)": [[230, "linearmodels.iv.model.IVGMMCUE.estimate_parameters"]], "fit() (ivgmmcue method)": [[231, "linearmodels.iv.model.IVGMMCUE.fit"]], "formula (ivgmmcue property)": [[232, "linearmodels.iv.model.IVGMMCUE.formula"]], "from_formula() (ivgmmcue static method)": [[233, "linearmodels.iv.model.IVGMMCUE.from_formula"]], "has_constant (ivgmmcue property)": [[234, "linearmodels.iv.model.IVGMMCUE.has_constant"]], "isnull (ivgmmcue property)": [[235, "linearmodels.iv.model.IVGMMCUE.isnull"]], "j() (ivgmmcue method)": [[236, "linearmodels.iv.model.IVGMMCUE.j"]], "notnull (ivgmmcue property)": [[237, "linearmodels.iv.model.IVGMMCUE.notnull"]], "predict() (ivgmmcue method)": [[238, "linearmodels.iv.model.IVGMMCUE.predict"]], "resids() (ivgmmcue method)": [[239, "linearmodels.iv.model.IVGMMCUE.resids"]], "wresids() (ivgmmcue method)": [[240, "linearmodels.iv.model.IVGMMCUE.wresids"]], "ivliml (class in linearmodels.iv.model)": [[241, "linearmodels.iv.model.IVLIML"]], "estimate_parameters() (ivliml static method)": [[242, "linearmodels.iv.model.IVLIML.estimate_parameters"]], "fit() (ivliml method)": [[243, "linearmodels.iv.model.IVLIML.fit"]], "formula (ivliml property)": [[244, "linearmodels.iv.model.IVLIML.formula"]], "from_formula() (ivliml static method)": [[245, "linearmodels.iv.model.IVLIML.from_formula"]], "has_constant (ivliml property)": [[246, "linearmodels.iv.model.IVLIML.has_constant"]], "isnull (ivliml property)": [[247, "linearmodels.iv.model.IVLIML.isnull"]], "notnull (ivliml property)": [[248, "linearmodels.iv.model.IVLIML.notnull"]], "predict() (ivliml method)": [[249, "linearmodels.iv.model.IVLIML.predict"]], "resids() (ivliml method)": [[250, "linearmodels.iv.model.IVLIML.resids"]], "wresids() (ivliml method)": [[251, "linearmodels.iv.model.IVLIML.wresids"]], "_ols (class in linearmodels.iv.model)": [[252, "linearmodels.iv.model._OLS"]], "estimate_parameters() (_ols static method)": [[253, "linearmodels.iv.model._OLS.estimate_parameters"]], "fit() (_ols method)": [[254, "linearmodels.iv.model._OLS.fit"]], "formula (_ols property)": [[255, "linearmodels.iv.model._OLS.formula"]], "from_formula() (_ols static method)": [[256, "linearmodels.iv.model._OLS.from_formula"]], "has_constant (_ols property)": [[257, "linearmodels.iv.model._OLS.has_constant"]], "isnull (_ols property)": [[258, "linearmodels.iv.model._OLS.isnull"]], "notnull (_ols property)": [[259, "linearmodels.iv.model._OLS.notnull"]], "predict() (_ols method)": [[260, "linearmodels.iv.model._OLS.predict"]], "resids() (_ols method)": [[261, "linearmodels.iv.model._OLS.resids"]], "wresids() (_ols method)": [[262, "linearmodels.iv.model._OLS.wresids"]], "firststageresults (class in linearmodels.iv.results)": [[263, "linearmodels.iv.results.FirstStageResults"]], "diagnostics (firststageresults property)": [[264, "linearmodels.iv.results.FirstStageResults.diagnostics"]], "individual (firststageresults property)": [[265, "linearmodels.iv.results.FirstStageResults.individual"]], "summary (firststageresults property)": [[266, "linearmodels.iv.results.FirstStageResults.summary"]], "ivgmmresults (class in linearmodels.iv.results)": [[267, "linearmodels.iv.results.IVGMMResults"]], "c_stat() (ivgmmresults method)": [[268, "linearmodels.iv.results.IVGMMResults.c_stat"]], "conf_int() (ivgmmresults method)": [[269, "linearmodels.iv.results.IVGMMResults.conf_int"]], "cov (ivgmmresults property)": [[270, "linearmodels.iv.results.IVGMMResults.cov"]], "cov_config (ivgmmresults property)": [[271, "linearmodels.iv.results.IVGMMResults.cov_config"]], "cov_estimator (ivgmmresults property)": [[272, "linearmodels.iv.results.IVGMMResults.cov_estimator"]], "cov_type (ivgmmresults property)": [[273, "linearmodels.iv.results.IVGMMResults.cov_type"]], "debiased (ivgmmresults property)": [[274, "linearmodels.iv.results.IVGMMResults.debiased"]], "df_model (ivgmmresults property)": [[275, "linearmodels.iv.results.IVGMMResults.df_model"]], "df_resid (ivgmmresults property)": [[276, "linearmodels.iv.results.IVGMMResults.df_resid"]], "f_statistic (ivgmmresults property)": [[277, "linearmodels.iv.results.IVGMMResults.f_statistic"]], "first_stage (ivgmmresults property)": [[278, "linearmodels.iv.results.IVGMMResults.first_stage"]], "fitted_values (ivgmmresults property)": [[279, "linearmodels.iv.results.IVGMMResults.fitted_values"]], "has_constant (ivgmmresults property)": [[280, "linearmodels.iv.results.IVGMMResults.has_constant"]], "idiosyncratic (ivgmmresults property)": [[281, "linearmodels.iv.results.IVGMMResults.idiosyncratic"]], "iterations (ivgmmresults property)": [[282, "linearmodels.iv.results.IVGMMResults.iterations"]], "j_stat (ivgmmresults property)": [[283, "linearmodels.iv.results.IVGMMResults.j_stat"]], "kappa (ivgmmresults property)": [[284, "linearmodels.iv.results.IVGMMResults.kappa"]], "method (ivgmmresults property)": [[285, "linearmodels.iv.results.IVGMMResults.method"]], "model_ss (ivgmmresults property)": [[286, "linearmodels.iv.results.IVGMMResults.model_ss"]], "nobs (ivgmmresults property)": [[287, "linearmodels.iv.results.IVGMMResults.nobs"]], "params (ivgmmresults property)": [[288, "linearmodels.iv.results.IVGMMResults.params"]], "predict() (ivgmmresults method)": [[289, "linearmodels.iv.results.IVGMMResults.predict"]], "pvalues (ivgmmresults property)": [[290, "linearmodels.iv.results.IVGMMResults.pvalues"]], "resid_ss (ivgmmresults property)": [[291, "linearmodels.iv.results.IVGMMResults.resid_ss"]], "resids (ivgmmresults property)": [[292, "linearmodels.iv.results.IVGMMResults.resids"]], "rsquared (ivgmmresults property)": [[293, "linearmodels.iv.results.IVGMMResults.rsquared"]], "rsquared_adj (ivgmmresults property)": [[294, "linearmodels.iv.results.IVGMMResults.rsquared_adj"]], "s2 (ivgmmresults property)": [[295, "linearmodels.iv.results.IVGMMResults.s2"]], "std_errors (ivgmmresults property)": [[296, "linearmodels.iv.results.IVGMMResults.std_errors"]], "summary (ivgmmresults property)": [[297, "linearmodels.iv.results.IVGMMResults.summary"]], "total_ss (ivgmmresults property)": [[298, "linearmodels.iv.results.IVGMMResults.total_ss"]], "tstats (ivgmmresults property)": [[299, "linearmodels.iv.results.IVGMMResults.tstats"]], "wald_test() (ivgmmresults method)": [[300, "linearmodels.iv.results.IVGMMResults.wald_test"]], "weight_config (ivgmmresults property)": [[301, "linearmodels.iv.results.IVGMMResults.weight_config"]], "weight_matrix (ivgmmresults property)": [[302, "linearmodels.iv.results.IVGMMResults.weight_matrix"]], "weight_type (ivgmmresults property)": [[303, "linearmodels.iv.results.IVGMMResults.weight_type"]], "wresids (ivgmmresults property)": [[304, "linearmodels.iv.results.IVGMMResults.wresids"]], "ivmodelcomparison (class in linearmodels.iv.results)": [[305, "linearmodels.iv.results.IVModelComparison"]], "cov_estimator (ivmodelcomparison property)": [[306, "linearmodels.iv.results.IVModelComparison.cov_estimator"]], "estimator_method (ivmodelcomparison property)": [[307, "linearmodels.iv.results.IVModelComparison.estimator_method"]], "f_statistic (ivmodelcomparison property)": [[308, "linearmodels.iv.results.IVModelComparison.f_statistic"]], "nobs (ivmodelcomparison property)": [[309, "linearmodels.iv.results.IVModelComparison.nobs"]], "params (ivmodelcomparison property)": [[310, "linearmodels.iv.results.IVModelComparison.params"]], "pvalues (ivmodelcomparison property)": [[311, "linearmodels.iv.results.IVModelComparison.pvalues"]], "rsquared (ivmodelcomparison property)": [[312, "linearmodels.iv.results.IVModelComparison.rsquared"]], "rsquared_adj (ivmodelcomparison property)": [[313, "linearmodels.iv.results.IVModelComparison.rsquared_adj"]], "std_errors (ivmodelcomparison property)": [[314, "linearmodels.iv.results.IVModelComparison.std_errors"]], "summary (ivmodelcomparison property)": [[315, "linearmodels.iv.results.IVModelComparison.summary"]], "tstats (ivmodelcomparison property)": [[316, "linearmodels.iv.results.IVModelComparison.tstats"]], "ivresults (class in linearmodels.iv.results)": [[317, "linearmodels.iv.results.IVResults"]], "anderson_rubin (ivresults property)": [[318, "linearmodels.iv.results.IVResults.anderson_rubin"]], "basmann (ivresults property)": [[319, "linearmodels.iv.results.IVResults.basmann"]], "basmann_f (ivresults property)": [[320, "linearmodels.iv.results.IVResults.basmann_f"]], "conf_int() (ivresults method)": [[321, "linearmodels.iv.results.IVResults.conf_int"]], "cov (ivresults property)": [[322, "linearmodels.iv.results.IVResults.cov"]], "cov_config (ivresults property)": [[323, "linearmodels.iv.results.IVResults.cov_config"]], "cov_estimator (ivresults property)": [[324, "linearmodels.iv.results.IVResults.cov_estimator"]], "cov_type (ivresults property)": [[325, "linearmodels.iv.results.IVResults.cov_type"]], "debiased (ivresults property)": [[326, "linearmodels.iv.results.IVResults.debiased"]], "df_model (ivresults property)": [[327, "linearmodels.iv.results.IVResults.df_model"]], "df_resid (ivresults property)": [[328, "linearmodels.iv.results.IVResults.df_resid"]], "durbin() (ivresults method)": [[329, "linearmodels.iv.results.IVResults.durbin"]], "f_statistic (ivresults property)": [[330, "linearmodels.iv.results.IVResults.f_statistic"]], "first_stage (ivresults property)": [[331, "linearmodels.iv.results.IVResults.first_stage"]], "fitted_values (ivresults property)": [[332, "linearmodels.iv.results.IVResults.fitted_values"]], "has_constant (ivresults property)": [[333, "linearmodels.iv.results.IVResults.has_constant"]], "idiosyncratic (ivresults property)": [[334, "linearmodels.iv.results.IVResults.idiosyncratic"]], "kappa (ivresults property)": [[335, "linearmodels.iv.results.IVResults.kappa"]], "method (ivresults property)": [[336, "linearmodels.iv.results.IVResults.method"]], "model_ss (ivresults property)": [[337, "linearmodels.iv.results.IVResults.model_ss"]], "nobs (ivresults property)": [[338, "linearmodels.iv.results.IVResults.nobs"]], "params (ivresults property)": [[339, "linearmodels.iv.results.IVResults.params"]], "predict() (ivresults method)": [[340, "linearmodels.iv.results.IVResults.predict"]], "pvalues (ivresults property)": [[341, "linearmodels.iv.results.IVResults.pvalues"]], "resid_ss (ivresults property)": [[342, "linearmodels.iv.results.IVResults.resid_ss"]], "resids (ivresults property)": [[343, "linearmodels.iv.results.IVResults.resids"]], "rsquared (ivresults property)": [[344, "linearmodels.iv.results.IVResults.rsquared"]], "rsquared_adj (ivresults property)": [[345, "linearmodels.iv.results.IVResults.rsquared_adj"]], "s2 (ivresults property)": [[346, "linearmodels.iv.results.IVResults.s2"]], "sargan (ivresults property)": [[347, "linearmodels.iv.results.IVResults.sargan"]], "std_errors (ivresults property)": [[348, "linearmodels.iv.results.IVResults.std_errors"]], "summary (ivresults property)": [[349, "linearmodels.iv.results.IVResults.summary"]], "total_ss (ivresults property)": [[350, "linearmodels.iv.results.IVResults.total_ss"]], "tstats (ivresults property)": [[351, "linearmodels.iv.results.IVResults.tstats"]], "wald_test() (ivresults method)": [[352, "linearmodels.iv.results.IVResults.wald_test"]], "wooldridge_overid (ivresults property)": [[353, "linearmodels.iv.results.IVResults.wooldridge_overid"]], "wooldridge_regression (ivresults property)": [[354, "linearmodels.iv.results.IVResults.wooldridge_regression"]], "wooldridge_score (ivresults property)": [[355, "linearmodels.iv.results.IVResults.wooldridge_score"]], "wresids (ivresults property)": [[356, "linearmodels.iv.results.IVResults.wresids"]], "wu_hausman() (ivresults method)": [[357, "linearmodels.iv.results.IVResults.wu_hausman"]], "olsresults (class in linearmodels.iv.results)": [[358, "linearmodels.iv.results.OLSResults"]], "conf_int() (olsresults method)": [[359, "linearmodels.iv.results.OLSResults.conf_int"]], "cov (olsresults property)": [[360, "linearmodels.iv.results.OLSResults.cov"]], "cov_config (olsresults property)": [[361, "linearmodels.iv.results.OLSResults.cov_config"]], "cov_estimator (olsresults property)": [[362, "linearmodels.iv.results.OLSResults.cov_estimator"]], "cov_type (olsresults property)": [[363, "linearmodels.iv.results.OLSResults.cov_type"]], "debiased (olsresults property)": [[364, "linearmodels.iv.results.OLSResults.debiased"]], "df_model (olsresults property)": [[365, "linearmodels.iv.results.OLSResults.df_model"]], "df_resid (olsresults property)": [[366, "linearmodels.iv.results.OLSResults.df_resid"]], "f_statistic (olsresults property)": [[367, "linearmodels.iv.results.OLSResults.f_statistic"]], "fitted_values (olsresults property)": [[368, "linearmodels.iv.results.OLSResults.fitted_values"]], "has_constant (olsresults property)": [[369, "linearmodels.iv.results.OLSResults.has_constant"]], "idiosyncratic (olsresults property)": [[370, "linearmodels.iv.results.OLSResults.idiosyncratic"]], "kappa (olsresults property)": [[371, "linearmodels.iv.results.OLSResults.kappa"]], "method (olsresults property)": [[372, "linearmodels.iv.results.OLSResults.method"]], "model_ss (olsresults property)": [[373, "linearmodels.iv.results.OLSResults.model_ss"]], "nobs (olsresults property)": [[374, "linearmodels.iv.results.OLSResults.nobs"]], "params (olsresults property)": [[375, "linearmodels.iv.results.OLSResults.params"]], "predict() (olsresults method)": [[376, "linearmodels.iv.results.OLSResults.predict"]], "pvalues (olsresults property)": [[377, "linearmodels.iv.results.OLSResults.pvalues"]], "resid_ss (olsresults property)": [[378, "linearmodels.iv.results.OLSResults.resid_ss"]], "resids (olsresults property)": [[379, "linearmodels.iv.results.OLSResults.resids"]], "rsquared (olsresults property)": [[380, "linearmodels.iv.results.OLSResults.rsquared"]], "rsquared_adj (olsresults property)": [[381, "linearmodels.iv.results.OLSResults.rsquared_adj"]], "s2 (olsresults property)": [[382, "linearmodels.iv.results.OLSResults.s2"]], "std_errors (olsresults property)": [[383, "linearmodels.iv.results.OLSResults.std_errors"]], "summary (olsresults property)": [[384, "linearmodels.iv.results.OLSResults.summary"]], "total_ss (olsresults property)": [[385, "linearmodels.iv.results.OLSResults.total_ss"]], "tstats (olsresults property)": [[386, "linearmodels.iv.results.OLSResults.tstats"]], "wald_test() (olsresults method)": [[387, "linearmodels.iv.results.OLSResults.wald_test"]], "wresids (olsresults property)": [[388, "linearmodels.iv.results.OLSResults.wresids"]], "compare() (in module linearmodels.iv.results)": [[389, "linearmodels.iv.results.compare"]], "linearmodels.iv.absorbing": [[391, "module-linearmodels.iv.absorbing"]], "linearmodels.iv.covariance": [[391, "module-linearmodels.iv.covariance"]], "linearmodels.iv.data": [[391, "module-linearmodels.iv.data"]], "linearmodels.iv.gmm": [[391, "module-linearmodels.iv.gmm"]], "linearmodels.iv.model": [[391, "module-linearmodels.iv.model"]], "linearmodels.iv.results": [[391, "module-linearmodels.iv.results"]], "accovariance (class in linearmodels.panel.covariance)": [[400, "linearmodels.panel.covariance.ACCovariance"]], "allowed_kwargs (accovariance attribute)": [[401, "linearmodels.panel.covariance.ACCovariance.ALLOWED_KWARGS"]], "default_kernel (accovariance attribute)": [[402, "linearmodels.panel.covariance.ACCovariance.DEFAULT_KERNEL"]], "cov (accovariance property)": [[403, "linearmodels.panel.covariance.ACCovariance.cov"]], "deferred_cov() (accovariance method)": [[404, "linearmodels.panel.covariance.ACCovariance.deferred_cov"]], "eps (accovariance property)": [[405, "linearmodels.panel.covariance.ACCovariance.eps"]], "name (accovariance property)": [[406, "linearmodels.panel.covariance.ACCovariance.name"]], "s2 (accovariance property)": [[407, "linearmodels.panel.covariance.ACCovariance.s2"]], "clusteredcovariance (class in linearmodels.panel.covariance)": [[408, "linearmodels.panel.covariance.ClusteredCovariance"]], "allowed_kwargs (clusteredcovariance attribute)": [[409, "linearmodels.panel.covariance.ClusteredCovariance.ALLOWED_KWARGS"]], "default_kernel (clusteredcovariance attribute)": [[410, "linearmodels.panel.covariance.ClusteredCovariance.DEFAULT_KERNEL"]], "deferred_cov() (clusteredcovariance method)": [[412, "linearmodels.panel.covariance.ClusteredCovariance.deferred_cov"]], "eps (clusteredcovariance property)": [[413, "linearmodels.panel.covariance.ClusteredCovariance.eps"]], "name (clusteredcovariance property)": [[414, "linearmodels.panel.covariance.ClusteredCovariance.name"]], "driscollkraay (class in linearmodels.panel.covariance)": [[416, "linearmodels.panel.covariance.DriscollKraay"]], "allowed_kwargs (driscollkraay attribute)": [[417, "linearmodels.panel.covariance.DriscollKraay.ALLOWED_KWARGS"]], "default_kernel (driscollkraay attribute)": [[418, "linearmodels.panel.covariance.DriscollKraay.DEFAULT_KERNEL"]], "cov (driscollkraay property)": [[419, "linearmodels.panel.covariance.DriscollKraay.cov"]], "deferred_cov() (driscollkraay method)": [[420, "linearmodels.panel.covariance.DriscollKraay.deferred_cov"]], "eps (driscollkraay property)": [[421, "linearmodels.panel.covariance.DriscollKraay.eps"]], "name (driscollkraay property)": [[422, "linearmodels.panel.covariance.DriscollKraay.name"]], "s2 (driscollkraay property)": [[423, "linearmodels.panel.covariance.DriscollKraay.s2"]], "famamacbethcovariance (class in linearmodels.panel.covariance)": [[424, "linearmodels.panel.covariance.FamaMacBethCovariance"]], "allowed_kwargs (famamacbethcovariance attribute)": [[425, "linearmodels.panel.covariance.FamaMacBethCovariance.ALLOWED_KWARGS"]], "default_kernel (famamacbethcovariance attribute)": [[426, "linearmodels.panel.covariance.FamaMacBethCovariance.DEFAULT_KERNEL"]], "all_params (famamacbethcovariance property)": [[427, "linearmodels.panel.covariance.FamaMacBethCovariance.all_params"]], "bandwidth (famamacbethcovariance property)": [[428, "linearmodels.panel.covariance.FamaMacBethCovariance.bandwidth"]], "cov (famamacbethcovariance property)": [[429, "linearmodels.panel.covariance.FamaMacBethCovariance.cov"]], "deferred_cov() (famamacbethcovariance method)": [[430, "linearmodels.panel.covariance.FamaMacBethCovariance.deferred_cov"]], "eps (famamacbethcovariance property)": [[431, "linearmodels.panel.covariance.FamaMacBethCovariance.eps"]], "name (famamacbethcovariance property)": [[432, "linearmodels.panel.covariance.FamaMacBethCovariance.name"]], "s2 (famamacbethcovariance property)": [[433, "linearmodels.panel.covariance.FamaMacBethCovariance.s2"]], "heteroskedasticcovariance (class in linearmodels.panel.covariance)": [[434, "linearmodels.panel.covariance.HeteroskedasticCovariance"]], "allowed_kwargs (heteroskedasticcovariance attribute)": [[435, "linearmodels.panel.covariance.HeteroskedasticCovariance.ALLOWED_KWARGS"]], "default_kernel (heteroskedasticcovariance attribute)": [[436, "linearmodels.panel.covariance.HeteroskedasticCovariance.DEFAULT_KERNEL"]], "deferred_cov() (heteroskedasticcovariance method)": [[438, "linearmodels.panel.covariance.HeteroskedasticCovariance.deferred_cov"]], "eps (heteroskedasticcovariance property)": [[439, "linearmodels.panel.covariance.HeteroskedasticCovariance.eps"]], "name (heteroskedasticcovariance property)": [[440, "linearmodels.panel.covariance.HeteroskedasticCovariance.name"]], "homoskedasticcovariance (class in linearmodels.panel.covariance)": [[442, "linearmodels.panel.covariance.HomoskedasticCovariance"]], "allowed_kwargs (homoskedasticcovariance attribute)": [[443, "linearmodels.panel.covariance.HomoskedasticCovariance.ALLOWED_KWARGS"]], "default_kernel (homoskedasticcovariance attribute)": [[444, "linearmodels.panel.covariance.HomoskedasticCovariance.DEFAULT_KERNEL"]], "deferred_cov() (homoskedasticcovariance method)": [[446, "linearmodels.panel.covariance.HomoskedasticCovariance.deferred_cov"]], "eps (homoskedasticcovariance property)": [[447, "linearmodels.panel.covariance.HomoskedasticCovariance.eps"]], "name (homoskedasticcovariance property)": [[448, "linearmodels.panel.covariance.HomoskedasticCovariance.name"]], "paneldata (class in linearmodels.panel.data)": [[450, "linearmodels.panel.data.PanelData"]], "copy() (paneldata method)": [[451, "linearmodels.panel.data.PanelData.copy"]], "count() (paneldata method)": [[452, "linearmodels.panel.data.PanelData.count"]], "dataframe (paneldata property)": [[453, "linearmodels.panel.data.PanelData.dataframe"]], "demean() (paneldata method)": [[454, "linearmodels.panel.data.PanelData.demean"]], "drop() (paneldata method)": [[455, "linearmodels.panel.data.PanelData.drop"]], "dummies() (paneldata method)": [[456, "linearmodels.panel.data.PanelData.dummies"]], "entities (paneldata property)": [[457, "linearmodels.panel.data.PanelData.entities"]], "entity_ids (paneldata property)": [[458, "linearmodels.panel.data.PanelData.entity_ids"]], "first_difference() (paneldata method)": [[459, "linearmodels.panel.data.PanelData.first_difference"]], "general_demean() (paneldata method)": [[460, "linearmodels.panel.data.PanelData.general_demean"]], "index (paneldata property)": [[461, "linearmodels.panel.data.PanelData.index"]], "isnull (paneldata property)": [[462, "linearmodels.panel.data.PanelData.isnull"]], "mean() (paneldata method)": [[463, "linearmodels.panel.data.PanelData.mean"]], "ndim (paneldata property)": [[464, "linearmodels.panel.data.PanelData.ndim"]], "nentity (paneldata property)": [[465, "linearmodels.panel.data.PanelData.nentity"]], "nobs (paneldata property)": [[466, "linearmodels.panel.data.PanelData.nobs"]], "nvar (paneldata property)": [[467, "linearmodels.panel.data.PanelData.nvar"]], "panel (paneldata property)": [[468, "linearmodels.panel.data.PanelData.panel"]], "shape (paneldata property)": [[469, "linearmodels.panel.data.PanelData.shape"]], "time (paneldata property)": [[470, "linearmodels.panel.data.PanelData.time"]], "time_ids (paneldata property)": [[471, "linearmodels.panel.data.PanelData.time_ids"]], "values2d (paneldata property)": [[472, "linearmodels.panel.data.PanelData.values2d"]], "values3d (paneldata property)": [[473, "linearmodels.panel.data.PanelData.values3d"]], "vars (paneldata property)": [[474, "linearmodels.panel.data.PanelData.vars"]], "_panel (class in linearmodels.panel.data)": [[475, "linearmodels.panel.data._Panel"]], "from_array() (_panel class method)": [[476, "linearmodels.panel.data._Panel.from_array"]], "items (_panel property)": [[477, "linearmodels.panel.data._Panel.items"]], "major_axis (_panel property)": [[478, "linearmodels.panel.data._Panel.major_axis"]], "minor_axis (_panel property)": [[479, "linearmodels.panel.data._Panel.minor_axis"]], "shape (_panel property)": [[480, "linearmodels.panel.data._Panel.shape"]], "to_frame() (_panel method)": [[481, "linearmodels.panel.data._Panel.to_frame"]], "values (_panel property)": [[482, "linearmodels.panel.data._Panel.values"]], "betweenols (class in linearmodels.panel.model)": [[483, "linearmodels.panel.model.BetweenOLS"]], "fit() (betweenols method)": [[484, "linearmodels.panel.model.BetweenOLS.fit"]], "formula (betweenols property)": [[485, "linearmodels.panel.model.BetweenOLS.formula"]], "from_formula() (betweenols class method)": [[486, "linearmodels.panel.model.BetweenOLS.from_formula"]], "has_constant (betweenols property)": [[487, "linearmodels.panel.model.BetweenOLS.has_constant"]], "not_null (betweenols property)": [[488, "linearmodels.panel.model.BetweenOLS.not_null"]], "predict() (betweenols method)": [[489, "linearmodels.panel.model.BetweenOLS.predict"]], "reformat_clusters() (betweenols method)": [[490, "linearmodels.panel.model.BetweenOLS.reformat_clusters"]], "famamacbeth (class in linearmodels.panel.model)": [[491, "linearmodels.panel.model.FamaMacBeth"]], "fit() (famamacbeth method)": [[492, "linearmodels.panel.model.FamaMacBeth.fit"]], "formula (famamacbeth property)": [[493, "linearmodels.panel.model.FamaMacBeth.formula"]], "from_formula() (famamacbeth class method)": [[494, "linearmodels.panel.model.FamaMacBeth.from_formula"]], "has_constant (famamacbeth property)": [[495, "linearmodels.panel.model.FamaMacBeth.has_constant"]], "not_null (famamacbeth property)": [[496, "linearmodels.panel.model.FamaMacBeth.not_null"]], "predict() (famamacbeth method)": [[497, "linearmodels.panel.model.FamaMacBeth.predict"]], "reformat_clusters() (famamacbeth method)": [[498, "linearmodels.panel.model.FamaMacBeth.reformat_clusters"]], "firstdifferenceols (class in linearmodels.panel.model)": [[499, "linearmodels.panel.model.FirstDifferenceOLS"]], "fit() (firstdifferenceols method)": [[500, "linearmodels.panel.model.FirstDifferenceOLS.fit"]], "formula (firstdifferenceols property)": [[501, "linearmodels.panel.model.FirstDifferenceOLS.formula"]], "from_formula() (firstdifferenceols class method)": [[502, "linearmodels.panel.model.FirstDifferenceOLS.from_formula"]], "has_constant (firstdifferenceols property)": [[503, "linearmodels.panel.model.FirstDifferenceOLS.has_constant"]], "not_null (firstdifferenceols property)": [[504, "linearmodels.panel.model.FirstDifferenceOLS.not_null"]], "predict() (firstdifferenceols method)": [[505, "linearmodels.panel.model.FirstDifferenceOLS.predict"]], "reformat_clusters() (firstdifferenceols method)": [[506, "linearmodels.panel.model.FirstDifferenceOLS.reformat_clusters"]], "panelols (class in linearmodels.panel.model)": [[507, "linearmodels.panel.model.PanelOLS"]], "entity_effects (panelols property)": [[508, "linearmodels.panel.model.PanelOLS.entity_effects"]], "fit() (panelols method)": [[509, "linearmodels.panel.model.PanelOLS.fit"]], "formula (panelols property)": [[510, "linearmodels.panel.model.PanelOLS.formula"]], "from_formula() (panelols class method)": [[511, "linearmodels.panel.model.PanelOLS.from_formula"]], "has_constant (panelols property)": [[512, "linearmodels.panel.model.PanelOLS.has_constant"]], "not_null (panelols property)": [[513, "linearmodels.panel.model.PanelOLS.not_null"]], "other_effects (panelols property)": [[514, "linearmodels.panel.model.PanelOLS.other_effects"]], "predict() (panelols method)": [[515, "linearmodels.panel.model.PanelOLS.predict"]], "reformat_clusters() (panelols method)": [[516, "linearmodels.panel.model.PanelOLS.reformat_clusters"]], "time_effects (panelols property)": [[517, "linearmodels.panel.model.PanelOLS.time_effects"]], "pooledols (class in linearmodels.panel.model)": [[518, "linearmodels.panel.model.PooledOLS"]], "fit() (pooledols method)": [[519, "linearmodels.panel.model.PooledOLS.fit"]], "formula (pooledols property)": [[520, "linearmodels.panel.model.PooledOLS.formula"]], "from_formula() (pooledols class method)": [[521, "linearmodels.panel.model.PooledOLS.from_formula"]], "has_constant (pooledols property)": [[522, "linearmodels.panel.model.PooledOLS.has_constant"]], "not_null (pooledols property)": [[523, "linearmodels.panel.model.PooledOLS.not_null"]], "predict() (pooledols method)": [[524, "linearmodels.panel.model.PooledOLS.predict"]], "reformat_clusters() (pooledols method)": [[525, "linearmodels.panel.model.PooledOLS.reformat_clusters"]], "randomeffects (class in linearmodels.panel.model)": [[526, "linearmodels.panel.model.RandomEffects"]], "fit() (randomeffects method)": [[527, "linearmodels.panel.model.RandomEffects.fit"]], "formula (randomeffects property)": [[528, "linearmodels.panel.model.RandomEffects.formula"]], "from_formula() (randomeffects class method)": [[529, "linearmodels.panel.model.RandomEffects.from_formula"]], "has_constant (randomeffects property)": [[530, "linearmodels.panel.model.RandomEffects.has_constant"]], "not_null (randomeffects property)": [[531, "linearmodels.panel.model.RandomEffects.not_null"]], "predict() (randomeffects method)": [[532, "linearmodels.panel.model.RandomEffects.predict"]], "reformat_clusters() (randomeffects method)": [[533, "linearmodels.panel.model.RandomEffects.reformat_clusters"]], "famamacbethresults (class in linearmodels.panel.results)": [[534, "linearmodels.panel.results.FamaMacBethResults"]], "all_params (famamacbethresults property)": [[535, "linearmodels.panel.results.FamaMacBethResults.all_params"]], "avg_adj_rsquared (famamacbethresults property)": [[536, "linearmodels.panel.results.FamaMacBethResults.avg_adj_rsquared"]], "avg_rsquared (famamacbethresults property)": [[537, "linearmodels.panel.results.FamaMacBethResults.avg_rsquared"]], "conf_int() (famamacbethresults method)": [[538, "linearmodels.panel.results.FamaMacBethResults.conf_int"]], "corr_squared_between (famamacbethresults property)": [[539, "linearmodels.panel.results.FamaMacBethResults.corr_squared_between"]], "corr_squared_overall (famamacbethresults property)": [[540, "linearmodels.panel.results.FamaMacBethResults.corr_squared_overall"]], "corr_squared_within (famamacbethresults property)": [[541, "linearmodels.panel.results.FamaMacBethResults.corr_squared_within"]], "cov (famamacbethresults property)": [[542, "linearmodels.panel.results.FamaMacBethResults.cov"]], "df_model (famamacbethresults property)": [[543, "linearmodels.panel.results.FamaMacBethResults.df_model"]], "df_resid (famamacbethresults property)": [[544, "linearmodels.panel.results.FamaMacBethResults.df_resid"]], "entity_info (famamacbethresults property)": [[545, "linearmodels.panel.results.FamaMacBethResults.entity_info"]], "estimated_effects (famamacbethresults property)": [[546, "linearmodels.panel.results.FamaMacBethResults.estimated_effects"]], "f_statistic (famamacbethresults property)": [[547, "linearmodels.panel.results.FamaMacBethResults.f_statistic"]], "f_statistic_robust (famamacbethresults property)": [[548, "linearmodels.panel.results.FamaMacBethResults.f_statistic_robust"]], "fitted_values (famamacbethresults property)": [[549, "linearmodels.panel.results.FamaMacBethResults.fitted_values"]], "idiosyncratic (famamacbethresults property)": [[550, "linearmodels.panel.results.FamaMacBethResults.idiosyncratic"]], "loglik (famamacbethresults property)": [[551, "linearmodels.panel.results.FamaMacBethResults.loglik"]], "model_ss (famamacbethresults property)": [[552, "linearmodels.panel.results.FamaMacBethResults.model_ss"]], "name (famamacbethresults property)": [[553, "linearmodels.panel.results.FamaMacBethResults.name"]], "nobs (famamacbethresults property)": [[554, "linearmodels.panel.results.FamaMacBethResults.nobs"]], "params (famamacbethresults property)": [[555, "linearmodels.panel.results.FamaMacBethResults.params"]], "predict() (famamacbethresults method)": [[556, "linearmodels.panel.results.FamaMacBethResults.predict"]], "pvalues (famamacbethresults property)": [[557, "linearmodels.panel.results.FamaMacBethResults.pvalues"]], "resid_ss (famamacbethresults property)": [[558, "linearmodels.panel.results.FamaMacBethResults.resid_ss"]], "resids (famamacbethresults property)": [[559, "linearmodels.panel.results.FamaMacBethResults.resids"]], "rsquared (famamacbethresults property)": [[560, "linearmodels.panel.results.FamaMacBethResults.rsquared"]], "rsquared_between (famamacbethresults property)": [[561, "linearmodels.panel.results.FamaMacBethResults.rsquared_between"]], "rsquared_overall (famamacbethresults property)": [[562, "linearmodels.panel.results.FamaMacBethResults.rsquared_overall"]], "rsquared_within (famamacbethresults property)": [[563, "linearmodels.panel.results.FamaMacBethResults.rsquared_within"]], "s2 (famamacbethresults property)": [[564, "linearmodels.panel.results.FamaMacBethResults.s2"]], "std_errors (famamacbethresults property)": [[565, "linearmodels.panel.results.FamaMacBethResults.std_errors"]], "summary (famamacbethresults property)": [[566, "linearmodels.panel.results.FamaMacBethResults.summary"]], "time_info (famamacbethresults property)": [[567, "linearmodels.panel.results.FamaMacBethResults.time_info"]], "total_ss (famamacbethresults property)": [[568, "linearmodels.panel.results.FamaMacBethResults.total_ss"]], "tstats (famamacbethresults property)": [[569, "linearmodels.panel.results.FamaMacBethResults.tstats"]], "wald_test() (famamacbethresults method)": [[570, "linearmodels.panel.results.FamaMacBethResults.wald_test"]], "wresids (famamacbethresults property)": [[571, "linearmodels.panel.results.FamaMacBethResults.wresids"]], "paneleffectsresults (class in linearmodels.panel.results)": [[572, "linearmodels.panel.results.PanelEffectsResults"]], "conf_int() (paneleffectsresults method)": [[573, "linearmodels.panel.results.PanelEffectsResults.conf_int"]], "corr_squared_between (paneleffectsresults property)": [[574, "linearmodels.panel.results.PanelEffectsResults.corr_squared_between"]], "corr_squared_overall (paneleffectsresults property)": [[575, "linearmodels.panel.results.PanelEffectsResults.corr_squared_overall"]], "corr_squared_within (paneleffectsresults property)": [[576, "linearmodels.panel.results.PanelEffectsResults.corr_squared_within"]], "cov (paneleffectsresults property)": [[577, "linearmodels.panel.results.PanelEffectsResults.cov"]], "df_model (paneleffectsresults property)": [[578, "linearmodels.panel.results.PanelEffectsResults.df_model"]], "df_resid (paneleffectsresults property)": [[579, "linearmodels.panel.results.PanelEffectsResults.df_resid"]], "entity_info (paneleffectsresults property)": [[580, "linearmodels.panel.results.PanelEffectsResults.entity_info"]], "estimated_effects (paneleffectsresults property)": [[581, "linearmodels.panel.results.PanelEffectsResults.estimated_effects"]], "f_pooled (paneleffectsresults property)": [[582, "linearmodels.panel.results.PanelEffectsResults.f_pooled"]], "f_statistic (paneleffectsresults property)": [[583, "linearmodels.panel.results.PanelEffectsResults.f_statistic"]], "f_statistic_robust (paneleffectsresults property)": [[584, "linearmodels.panel.results.PanelEffectsResults.f_statistic_robust"]], "fitted_values (paneleffectsresults property)": [[585, "linearmodels.panel.results.PanelEffectsResults.fitted_values"]], "idiosyncratic (paneleffectsresults property)": [[586, "linearmodels.panel.results.PanelEffectsResults.idiosyncratic"]], "included_effects (paneleffectsresults property)": [[587, "linearmodels.panel.results.PanelEffectsResults.included_effects"]], "loglik (paneleffectsresults property)": [[588, "linearmodels.panel.results.PanelEffectsResults.loglik"]], "model_ss (paneleffectsresults property)": [[589, "linearmodels.panel.results.PanelEffectsResults.model_ss"]], "name (paneleffectsresults property)": [[590, "linearmodels.panel.results.PanelEffectsResults.name"]], "nobs (paneleffectsresults property)": [[591, "linearmodels.panel.results.PanelEffectsResults.nobs"]], "other_info (paneleffectsresults property)": [[592, "linearmodels.panel.results.PanelEffectsResults.other_info"]], "params (paneleffectsresults property)": [[593, "linearmodels.panel.results.PanelEffectsResults.params"]], "predict() (paneleffectsresults method)": [[594, "linearmodels.panel.results.PanelEffectsResults.predict"]], "pvalues (paneleffectsresults property)": [[595, "linearmodels.panel.results.PanelEffectsResults.pvalues"]], "resid_ss (paneleffectsresults property)": [[596, "linearmodels.panel.results.PanelEffectsResults.resid_ss"]], "resids (paneleffectsresults property)": [[597, "linearmodels.panel.results.PanelEffectsResults.resids"]], "rsquared (paneleffectsresults property)": [[598, "linearmodels.panel.results.PanelEffectsResults.rsquared"]], "rsquared_between (paneleffectsresults property)": [[599, "linearmodels.panel.results.PanelEffectsResults.rsquared_between"]], "rsquared_inclusive (paneleffectsresults property)": [[600, "linearmodels.panel.results.PanelEffectsResults.rsquared_inclusive"]], "rsquared_overall (paneleffectsresults property)": [[601, "linearmodels.panel.results.PanelEffectsResults.rsquared_overall"]], "rsquared_within (paneleffectsresults property)": [[602, "linearmodels.panel.results.PanelEffectsResults.rsquared_within"]], "s2 (paneleffectsresults property)": [[603, "linearmodels.panel.results.PanelEffectsResults.s2"]], "std_errors (paneleffectsresults property)": [[604, "linearmodels.panel.results.PanelEffectsResults.std_errors"]], "summary (paneleffectsresults property)": [[605, "linearmodels.panel.results.PanelEffectsResults.summary"]], "time_info (paneleffectsresults property)": [[606, "linearmodels.panel.results.PanelEffectsResults.time_info"]], "total_ss (paneleffectsresults property)": [[607, "linearmodels.panel.results.PanelEffectsResults.total_ss"]], "tstats (paneleffectsresults property)": [[608, "linearmodels.panel.results.PanelEffectsResults.tstats"]], "variance_decomposition (paneleffectsresults property)": [[609, "linearmodels.panel.results.PanelEffectsResults.variance_decomposition"]], "wald_test() (paneleffectsresults method)": [[610, "linearmodels.panel.results.PanelEffectsResults.wald_test"]], "wresids (paneleffectsresults property)": [[611, "linearmodels.panel.results.PanelEffectsResults.wresids"]], "panelmodelcomparison (class in linearmodels.panel.results)": [[612, "linearmodels.panel.results.PanelModelComparison"]], "cov_estimator (panelmodelcomparison property)": [[613, "linearmodels.panel.results.PanelModelComparison.cov_estimator"]], "estimator_method (panelmodelcomparison property)": [[614, "linearmodels.panel.results.PanelModelComparison.estimator_method"]], "f_statistic (panelmodelcomparison property)": [[615, "linearmodels.panel.results.PanelModelComparison.f_statistic"]], "nobs (panelmodelcomparison property)": [[616, "linearmodels.panel.results.PanelModelComparison.nobs"]], "params (panelmodelcomparison property)": [[617, "linearmodels.panel.results.PanelModelComparison.params"]], "pvalues (panelmodelcomparison property)": [[618, "linearmodels.panel.results.PanelModelComparison.pvalues"]], "rsquared (panelmodelcomparison property)": [[619, "linearmodels.panel.results.PanelModelComparison.rsquared"]], "rsquared_between (panelmodelcomparison property)": [[620, "linearmodels.panel.results.PanelModelComparison.rsquared_between"]], "rsquared_overall (panelmodelcomparison property)": [[621, "linearmodels.panel.results.PanelModelComparison.rsquared_overall"]], "rsquared_within (panelmodelcomparison property)": [[622, "linearmodels.panel.results.PanelModelComparison.rsquared_within"]], "std_errors (panelmodelcomparison property)": [[623, "linearmodels.panel.results.PanelModelComparison.std_errors"]], "summary (panelmodelcomparison property)": [[624, "linearmodels.panel.results.PanelModelComparison.summary"]], "tstats (panelmodelcomparison property)": [[625, "linearmodels.panel.results.PanelModelComparison.tstats"]], "panelresults (class in linearmodels.panel.results)": [[626, "linearmodels.panel.results.PanelResults"]], "conf_int() (panelresults method)": [[627, "linearmodels.panel.results.PanelResults.conf_int"]], "corr_squared_between (panelresults property)": [[628, "linearmodels.panel.results.PanelResults.corr_squared_between"]], "corr_squared_overall (panelresults property)": [[629, "linearmodels.panel.results.PanelResults.corr_squared_overall"]], "corr_squared_within (panelresults property)": [[630, "linearmodels.panel.results.PanelResults.corr_squared_within"]], "cov (panelresults property)": [[631, "linearmodels.panel.results.PanelResults.cov"]], "df_model (panelresults property)": [[632, "linearmodels.panel.results.PanelResults.df_model"]], "df_resid (panelresults property)": [[633, "linearmodels.panel.results.PanelResults.df_resid"]], "entity_info (panelresults property)": [[634, "linearmodels.panel.results.PanelResults.entity_info"]], "estimated_effects (panelresults property)": [[635, "linearmodels.panel.results.PanelResults.estimated_effects"]], "f_statistic (panelresults property)": [[636, "linearmodels.panel.results.PanelResults.f_statistic"]], "f_statistic_robust (panelresults property)": [[637, "linearmodels.panel.results.PanelResults.f_statistic_robust"]], "fitted_values (panelresults property)": [[638, "linearmodels.panel.results.PanelResults.fitted_values"]], "idiosyncratic (panelresults property)": [[639, "linearmodels.panel.results.PanelResults.idiosyncratic"]], "loglik (panelresults property)": [[640, "linearmodels.panel.results.PanelResults.loglik"]], "model_ss (panelresults property)": [[641, "linearmodels.panel.results.PanelResults.model_ss"]], "name (panelresults property)": [[642, "linearmodels.panel.results.PanelResults.name"]], "nobs (panelresults property)": [[643, "linearmodels.panel.results.PanelResults.nobs"]], "params (panelresults property)": [[644, "linearmodels.panel.results.PanelResults.params"]], "predict() (panelresults method)": [[645, "linearmodels.panel.results.PanelResults.predict"]], "pvalues (panelresults property)": [[646, "linearmodels.panel.results.PanelResults.pvalues"]], "resid_ss (panelresults property)": [[647, "linearmodels.panel.results.PanelResults.resid_ss"]], "resids (panelresults property)": [[648, "linearmodels.panel.results.PanelResults.resids"]], "rsquared (panelresults property)": [[649, "linearmodels.panel.results.PanelResults.rsquared"]], "rsquared_between (panelresults property)": [[650, "linearmodels.panel.results.PanelResults.rsquared_between"]], "rsquared_overall (panelresults property)": [[651, "linearmodels.panel.results.PanelResults.rsquared_overall"]], "rsquared_within (panelresults property)": [[652, "linearmodels.panel.results.PanelResults.rsquared_within"]], "s2 (panelresults property)": [[653, "linearmodels.panel.results.PanelResults.s2"]], "std_errors (panelresults property)": [[654, "linearmodels.panel.results.PanelResults.std_errors"]], "summary (panelresults property)": [[655, "linearmodels.panel.results.PanelResults.summary"]], "time_info (panelresults property)": [[656, "linearmodels.panel.results.PanelResults.time_info"]], "total_ss (panelresults property)": [[657, "linearmodels.panel.results.PanelResults.total_ss"]], "tstats (panelresults property)": [[658, "linearmodels.panel.results.PanelResults.tstats"]], "wald_test() (panelresults method)": [[659, "linearmodels.panel.results.PanelResults.wald_test"]], "wresids (panelresults property)": [[660, "linearmodels.panel.results.PanelResults.wresids"]], "randomeffectsresults (class in linearmodels.panel.results)": [[661, "linearmodels.panel.results.RandomEffectsResults"]], "conf_int() (randomeffectsresults method)": [[662, "linearmodels.panel.results.RandomEffectsResults.conf_int"]], "corr_squared_between (randomeffectsresults property)": [[663, "linearmodels.panel.results.RandomEffectsResults.corr_squared_between"]], "corr_squared_overall (randomeffectsresults property)": [[664, "linearmodels.panel.results.RandomEffectsResults.corr_squared_overall"]], "corr_squared_within (randomeffectsresults property)": [[665, "linearmodels.panel.results.RandomEffectsResults.corr_squared_within"]], "cov (randomeffectsresults property)": [[666, "linearmodels.panel.results.RandomEffectsResults.cov"]], "df_model (randomeffectsresults property)": [[667, "linearmodels.panel.results.RandomEffectsResults.df_model"]], "df_resid (randomeffectsresults property)": [[668, "linearmodels.panel.results.RandomEffectsResults.df_resid"]], "entity_info (randomeffectsresults property)": [[669, "linearmodels.panel.results.RandomEffectsResults.entity_info"]], "estimated_effects (randomeffectsresults property)": [[670, "linearmodels.panel.results.RandomEffectsResults.estimated_effects"]], "f_statistic (randomeffectsresults property)": [[671, "linearmodels.panel.results.RandomEffectsResults.f_statistic"]], "f_statistic_robust (randomeffectsresults property)": [[672, "linearmodels.panel.results.RandomEffectsResults.f_statistic_robust"]], "fitted_values (randomeffectsresults property)": [[673, "linearmodels.panel.results.RandomEffectsResults.fitted_values"]], "idiosyncratic (randomeffectsresults property)": [[674, "linearmodels.panel.results.RandomEffectsResults.idiosyncratic"]], "loglik (randomeffectsresults property)": [[675, "linearmodels.panel.results.RandomEffectsResults.loglik"]], "model_ss (randomeffectsresults property)": [[676, "linearmodels.panel.results.RandomEffectsResults.model_ss"]], "name (randomeffectsresults property)": [[677, "linearmodels.panel.results.RandomEffectsResults.name"]], "nobs (randomeffectsresults property)": [[678, "linearmodels.panel.results.RandomEffectsResults.nobs"]], "params (randomeffectsresults property)": [[679, "linearmodels.panel.results.RandomEffectsResults.params"]], "predict() (randomeffectsresults method)": [[680, "linearmodels.panel.results.RandomEffectsResults.predict"]], "pvalues (randomeffectsresults property)": [[681, "linearmodels.panel.results.RandomEffectsResults.pvalues"]], "resid_ss (randomeffectsresults property)": [[682, "linearmodels.panel.results.RandomEffectsResults.resid_ss"]], "resids (randomeffectsresults property)": [[683, "linearmodels.panel.results.RandomEffectsResults.resids"]], "rsquared (randomeffectsresults property)": [[684, "linearmodels.panel.results.RandomEffectsResults.rsquared"]], "rsquared_between (randomeffectsresults property)": [[685, "linearmodels.panel.results.RandomEffectsResults.rsquared_between"]], "rsquared_overall (randomeffectsresults property)": [[686, "linearmodels.panel.results.RandomEffectsResults.rsquared_overall"]], "rsquared_within (randomeffectsresults property)": [[687, "linearmodels.panel.results.RandomEffectsResults.rsquared_within"]], "s2 (randomeffectsresults property)": [[688, "linearmodels.panel.results.RandomEffectsResults.s2"]], "std_errors (randomeffectsresults property)": [[689, "linearmodels.panel.results.RandomEffectsResults.std_errors"]], "summary (randomeffectsresults property)": [[690, "linearmodels.panel.results.RandomEffectsResults.summary"]], "theta (randomeffectsresults property)": [[691, "linearmodels.panel.results.RandomEffectsResults.theta"]], "time_info (randomeffectsresults property)": [[692, "linearmodels.panel.results.RandomEffectsResults.time_info"]], "total_ss (randomeffectsresults property)": [[693, "linearmodels.panel.results.RandomEffectsResults.total_ss"]], "tstats (randomeffectsresults property)": [[694, "linearmodels.panel.results.RandomEffectsResults.tstats"]], "variance_decomposition (randomeffectsresults property)": [[695, "linearmodels.panel.results.RandomEffectsResults.variance_decomposition"]], "wald_test() (randomeffectsresults method)": [[696, "linearmodels.panel.results.RandomEffectsResults.wald_test"]], "wresids (randomeffectsresults property)": [[697, "linearmodels.panel.results.RandomEffectsResults.wresids"]], "compare() (in module linearmodels.panel.results)": [[698, "linearmodels.panel.results.compare"]], "panelmodeldata (class in linearmodels.panel.utility)": [[699, "linearmodels.panel.utility.PanelModelData"]], "clusters (panelmodeldata attribute)": [[700, "linearmodels.panel.utility.PanelModelData.clusters"]], "count() (panelmodeldata method)": [[701, "linearmodels.panel.utility.PanelModelData.count"]], "data (panelmodeldata attribute)": [[702, "linearmodels.panel.utility.PanelModelData.data"]], "index() (panelmodeldata method)": [[703, "linearmodels.panel.utility.PanelModelData.index"]], "other_effects (panelmodeldata attribute)": [[704, "linearmodels.panel.utility.PanelModelData.other_effects"]], "weights (panelmodeldata attribute)": [[705, "linearmodels.panel.utility.PanelModelData.weights"]], "generate_panel_data() (in module linearmodels.panel.utility)": [[706, "linearmodels.panel.utility.generate_panel_data"]], "linearmodels.panel.covariance": [[707, "module-linearmodels.panel.covariance"]], "linearmodels.panel.data": [[707, "module-linearmodels.panel.data"]], "linearmodels.panel.model": [[707, "module-linearmodels.panel.model"]], "linearmodels.panel.results": [[707, "module-linearmodels.panel.results"]], "linearmodels.panel.utility": [[707, "module-linearmodels.panel.utility"]], "linearmodels.system.covariance": [[715, "module-linearmodels.system.covariance"]], "linearmodels.system.gmm": [[715, "module-linearmodels.system.gmm"]], "linearmodels.system.model": [[715, "module-linearmodels.system.model"]], "linearmodels.system.results": [[715, "module-linearmodels.system.results"]], "clusteredcovariance (class in linearmodels.system.covariance)": [[716, "linearmodels.system.covariance.ClusteredCovariance"]], "cov_config (clusteredcovariance property)": [[718, "linearmodels.system.covariance.ClusteredCovariance.cov_config"]], "sigma (clusteredcovariance property)": [[719, "linearmodels.system.covariance.ClusteredCovariance.sigma"]], "gmmheteroskedasticcovariance (class in linearmodels.system.covariance)": [[720, "linearmodels.system.covariance.GMMHeteroskedasticCovariance"]], "cov (gmmheteroskedasticcovariance property)": [[721, "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov"]], "cov_config (gmmheteroskedasticcovariance property)": [[722, "linearmodels.system.covariance.GMMHeteroskedasticCovariance.cov_config"]], "gmmhomoskedasticcovariance (class in linearmodels.system.covariance)": [[723, "linearmodels.system.covariance.GMMHomoskedasticCovariance"]], "cov (gmmhomoskedasticcovariance property)": [[724, "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov"]], "cov_config (gmmhomoskedasticcovariance property)": [[725, "linearmodels.system.covariance.GMMHomoskedasticCovariance.cov_config"]], "gmmkernelcovariance (class in linearmodels.system.covariance)": [[726, "linearmodels.system.covariance.GMMKernelCovariance"]], "bandwidth (gmmkernelcovariance property)": [[727, "linearmodels.system.covariance.GMMKernelCovariance.bandwidth"]], "cov (gmmkernelcovariance property)": [[728, "linearmodels.system.covariance.GMMKernelCovariance.cov"]], "cov_config (gmmkernelcovariance property)": [[729, "linearmodels.system.covariance.GMMKernelCovariance.cov_config"]], "kernel (gmmkernelcovariance property)": [[730, "linearmodels.system.covariance.GMMKernelCovariance.kernel"]], "heteroskedasticcovariance (class in linearmodels.system.covariance)": [[731, "linearmodels.system.covariance.HeteroskedasticCovariance"]], "cov_config (heteroskedasticcovariance property)": [[733, "linearmodels.system.covariance.HeteroskedasticCovariance.cov_config"]], "sigma (heteroskedasticcovariance property)": [[734, "linearmodels.system.covariance.HeteroskedasticCovariance.sigma"]], "homoskedasticcovariance (class in linearmodels.system.covariance)": [[735, "linearmodels.system.covariance.HomoskedasticCovariance"]], "cov_config (homoskedasticcovariance property)": [[737, "linearmodels.system.covariance.HomoskedasticCovariance.cov_config"]], "sigma (homoskedasticcovariance property)": [[738, "linearmodels.system.covariance.HomoskedasticCovariance.sigma"]], "kernelcovariance (class in linearmodels.system.covariance)": [[739, "linearmodels.system.covariance.KernelCovariance"]], "cov_config (kernelcovariance property)": [[742, "linearmodels.system.covariance.KernelCovariance.cov_config"]], "sigma (kernelcovariance property)": [[744, "linearmodels.system.covariance.KernelCovariance.sigma"]], "heteroskedasticweightmatrix (class in linearmodels.system.gmm)": [[745, "linearmodels.system.gmm.HeteroskedasticWeightMatrix"]], "sigma() (heteroskedasticweightmatrix method)": [[747, "linearmodels.system.gmm.HeteroskedasticWeightMatrix.sigma"]], "homoskedasticweightmatrix (class in linearmodels.system.gmm)": [[749, "linearmodels.system.gmm.HomoskedasticWeightMatrix"]], "sigma() (homoskedasticweightmatrix method)": [[751, "linearmodels.system.gmm.HomoskedasticWeightMatrix.sigma"]], "kernelweightmatrix (class in linearmodels.system.gmm)": [[753, "linearmodels.system.gmm.KernelWeightMatrix"]], "kernel (kernelweightmatrix property)": [[756, "linearmodels.system.gmm.KernelWeightMatrix.kernel"]], "sigma() (kernelweightmatrix method)": [[757, "linearmodels.system.gmm.KernelWeightMatrix.sigma"]], "iv3sls (class in linearmodels.system.model)": [[759, "linearmodels.system.model.IV3SLS"]], "add_constraints() (iv3sls method)": [[760, "linearmodels.system.model.IV3SLS.add_constraints"]], "constraints (iv3sls property)": [[761, "linearmodels.system.model.IV3SLS.constraints"]], "fit() (iv3sls method)": [[762, "linearmodels.system.model.IV3SLS.fit"]], "formula (iv3sls property)": [[763, "linearmodels.system.model.IV3SLS.formula"]], "from_formula() (iv3sls class method)": [[764, "linearmodels.system.model.IV3SLS.from_formula"]], "has_constant (iv3sls property)": [[765, "linearmodels.system.model.IV3SLS.has_constant"]], "multivariate_iv() (iv3sls class method)": [[766, "linearmodels.system.model.IV3SLS.multivariate_iv"]], "param_names (iv3sls property)": [[767, "linearmodels.system.model.IV3SLS.param_names"]], "predict() (iv3sls method)": [[768, "linearmodels.system.model.IV3SLS.predict"]], "reset_constraints() (iv3sls method)": [[769, "linearmodels.system.model.IV3SLS.reset_constraints"]], "ivsystemgmm (class in linearmodels.system.model)": [[770, "linearmodels.system.model.IVSystemGMM"]], "add_constraints() (ivsystemgmm method)": [[771, "linearmodels.system.model.IVSystemGMM.add_constraints"]], "constraints (ivsystemgmm property)": [[772, "linearmodels.system.model.IVSystemGMM.constraints"]], "fit() (ivsystemgmm method)": [[773, "linearmodels.system.model.IVSystemGMM.fit"]], "formula (ivsystemgmm property)": [[774, "linearmodels.system.model.IVSystemGMM.formula"]], "from_formula() (ivsystemgmm class method)": [[775, "linearmodels.system.model.IVSystemGMM.from_formula"]], "has_constant (ivsystemgmm property)": [[776, "linearmodels.system.model.IVSystemGMM.has_constant"]], "param_names (ivsystemgmm property)": [[777, "linearmodels.system.model.IVSystemGMM.param_names"]], "predict() (ivsystemgmm method)": [[778, "linearmodels.system.model.IVSystemGMM.predict"]], "reset_constraints() (ivsystemgmm method)": [[779, "linearmodels.system.model.IVSystemGMM.reset_constraints"]], "linearconstraint (class in linearmodels.system.model)": [[780, "linearmodels.system.model.LinearConstraint"]], "a (linearconstraint property)": [[781, "linearmodels.system.model.LinearConstraint.a"]], "q (linearconstraint property)": [[782, "linearmodels.system.model.LinearConstraint.q"]], "r (linearconstraint property)": [[783, "linearmodels.system.model.LinearConstraint.r"]], "t (linearconstraint property)": [[784, "linearmodels.system.model.LinearConstraint.t"]], "sur (class in linearmodels.system.model)": [[785, "linearmodels.system.model.SUR"]], "add_constraints() (sur method)": [[786, "linearmodels.system.model.SUR.add_constraints"]], "constraints (sur property)": [[787, "linearmodels.system.model.SUR.constraints"]], "fit() (sur method)": [[788, "linearmodels.system.model.SUR.fit"]], "formula (sur property)": [[789, "linearmodels.system.model.SUR.formula"]], "from_formula() (sur class method)": [[790, "linearmodels.system.model.SUR.from_formula"]], "has_constant (sur property)": [[791, "linearmodels.system.model.SUR.has_constant"]], "multivariate_ls() (sur class method)": [[792, "linearmodels.system.model.SUR.multivariate_ls"]], "param_names (sur property)": [[793, "linearmodels.system.model.SUR.param_names"]], "predict() (sur method)": [[794, "linearmodels.system.model.SUR.predict"]], "reset_constraints() (sur method)": [[795, "linearmodels.system.model.SUR.reset_constraints"]], "gmmsystemresults (class in linearmodels.system.results)": [[796, "linearmodels.system.results.GMMSystemResults"]], "breusch_pagan() (gmmsystemresults method)": [[797, "linearmodels.system.results.GMMSystemResults.breusch_pagan"]], "conf_int() (gmmsystemresults method)": [[798, "linearmodels.system.results.GMMSystemResults.conf_int"]], "cov (gmmsystemresults property)": [[799, "linearmodels.system.results.GMMSystemResults.cov"]], "cov_config (gmmsystemresults property)": [[800, "linearmodels.system.results.GMMSystemResults.cov_config"]], "cov_estimator (gmmsystemresults property)": [[801, "linearmodels.system.results.GMMSystemResults.cov_estimator"]], "debiased (gmmsystemresults property)": [[802, "linearmodels.system.results.GMMSystemResults.debiased"]], "df_model (gmmsystemresults property)": [[803, "linearmodels.system.results.GMMSystemResults.df_model"]], "df_resid (gmmsystemresults property)": [[804, "linearmodels.system.results.GMMSystemResults.df_resid"]], "equation_labels (gmmsystemresults property)": [[805, "linearmodels.system.results.GMMSystemResults.equation_labels"]], "equations (gmmsystemresults property)": [[806, "linearmodels.system.results.GMMSystemResults.equations"]], "fitted_values (gmmsystemresults property)": [[807, "linearmodels.system.results.GMMSystemResults.fitted_values"]], "iterations (gmmsystemresults property)": [[808, "linearmodels.system.results.GMMSystemResults.iterations"]], "j_stat (gmmsystemresults property)": [[809, "linearmodels.system.results.GMMSystemResults.j_stat"]], "likelihood_ratio() (gmmsystemresults method)": [[810, "linearmodels.system.results.GMMSystemResults.likelihood_ratio"]], "method (gmmsystemresults property)": [[811, "linearmodels.system.results.GMMSystemResults.method"]], "model (gmmsystemresults property)": [[812, "linearmodels.system.results.GMMSystemResults.model"]], "model_ss (gmmsystemresults property)": [[813, "linearmodels.system.results.GMMSystemResults.model_ss"]], "nobs (gmmsystemresults property)": [[814, "linearmodels.system.results.GMMSystemResults.nobs"]], "params (gmmsystemresults property)": [[815, "linearmodels.system.results.GMMSystemResults.params"]], "predict() (gmmsystemresults method)": [[816, "linearmodels.system.results.GMMSystemResults.predict"]], "pvalues (gmmsystemresults property)": [[817, "linearmodels.system.results.GMMSystemResults.pvalues"]], "resid_ss (gmmsystemresults property)": [[818, "linearmodels.system.results.GMMSystemResults.resid_ss"]], "resids (gmmsystemresults property)": [[819, "linearmodels.system.results.GMMSystemResults.resids"]], "rsquared (gmmsystemresults property)": [[820, "linearmodels.system.results.GMMSystemResults.rsquared"]], "sigma (gmmsystemresults property)": [[821, "linearmodels.system.results.GMMSystemResults.sigma"]], "std_errors (gmmsystemresults property)": [[822, "linearmodels.system.results.GMMSystemResults.std_errors"]], "summary (gmmsystemresults property)": [[823, "linearmodels.system.results.GMMSystemResults.summary"]], "system_rsquared (gmmsystemresults property)": [[824, "linearmodels.system.results.GMMSystemResults.system_rsquared"]], "total_ss (gmmsystemresults property)": [[825, "linearmodels.system.results.GMMSystemResults.total_ss"]], "tstats (gmmsystemresults property)": [[826, "linearmodels.system.results.GMMSystemResults.tstats"]], "w (gmmsystemresults property)": [[827, "linearmodels.system.results.GMMSystemResults.w"]], "weight_config (gmmsystemresults property)": [[828, "linearmodels.system.results.GMMSystemResults.weight_config"]], "weight_type (gmmsystemresults property)": [[829, "linearmodels.system.results.GMMSystemResults.weight_type"]], "wresids (gmmsystemresults property)": [[830, "linearmodels.system.results.GMMSystemResults.wresids"]], "systemresults (class in linearmodels.system.results)": [[831, "linearmodels.system.results.SystemResults"]], "breusch_pagan() (systemresults method)": [[832, "linearmodels.system.results.SystemResults.breusch_pagan"]], "conf_int() (systemresults method)": [[833, "linearmodels.system.results.SystemResults.conf_int"]], "cov (systemresults property)": [[834, "linearmodels.system.results.SystemResults.cov"]], "cov_config (systemresults property)": [[835, "linearmodels.system.results.SystemResults.cov_config"]], "cov_estimator (systemresults property)": [[836, "linearmodels.system.results.SystemResults.cov_estimator"]], "debiased (systemresults property)": [[837, "linearmodels.system.results.SystemResults.debiased"]], "df_model (systemresults property)": [[838, "linearmodels.system.results.SystemResults.df_model"]], "df_resid (systemresults property)": [[839, "linearmodels.system.results.SystemResults.df_resid"]], "equation_labels (systemresults property)": [[840, "linearmodels.system.results.SystemResults.equation_labels"]], "equations (systemresults property)": [[841, "linearmodels.system.results.SystemResults.equations"]], "fitted_values (systemresults property)": [[842, "linearmodels.system.results.SystemResults.fitted_values"]], "iterations (systemresults property)": [[843, "linearmodels.system.results.SystemResults.iterations"]], "likelihood_ratio() (systemresults method)": [[844, "linearmodels.system.results.SystemResults.likelihood_ratio"]], "method (systemresults property)": [[845, "linearmodels.system.results.SystemResults.method"]], "model (systemresults property)": [[846, "linearmodels.system.results.SystemResults.model"]], "model_ss (systemresults property)": [[847, "linearmodels.system.results.SystemResults.model_ss"]], "nobs (systemresults property)": [[848, "linearmodels.system.results.SystemResults.nobs"]], "params (systemresults property)": [[849, "linearmodels.system.results.SystemResults.params"]], "predict() (systemresults method)": [[850, "linearmodels.system.results.SystemResults.predict"]], "pvalues (systemresults property)": [[851, "linearmodels.system.results.SystemResults.pvalues"]], "resid_ss (systemresults property)": [[852, "linearmodels.system.results.SystemResults.resid_ss"]], "resids (systemresults property)": [[853, "linearmodels.system.results.SystemResults.resids"]], "rsquared (systemresults property)": [[854, "linearmodels.system.results.SystemResults.rsquared"]], "sigma (systemresults property)": [[855, "linearmodels.system.results.SystemResults.sigma"]], "std_errors (systemresults property)": [[856, "linearmodels.system.results.SystemResults.std_errors"]], "summary (systemresults property)": [[857, "linearmodels.system.results.SystemResults.summary"]], "system_rsquared (systemresults property)": [[858, "linearmodels.system.results.SystemResults.system_rsquared"]], "total_ss (systemresults property)": [[859, "linearmodels.system.results.SystemResults.total_ss"]], "tstats (systemresults property)": [[860, "linearmodels.system.results.SystemResults.tstats"]], "wresids (systemresults property)": [[861, "linearmodels.system.results.SystemResults.wresids"]], "linearmodels.utility": [[862, "module-linearmodels.utility"]], "cov_cluster() (in module linearmodels.shared.covariance)": [[863, "linearmodels.shared.covariance.cov_cluster"]], "cov_kernel() (in module linearmodels.shared.covariance)": [[864, "linearmodels.shared.covariance.cov_kernel"]], "group_debias_coefficient() (in module linearmodels.shared.covariance)": [[865, "linearmodels.shared.covariance.group_debias_coefficient"]], "invalidteststatistic (class in linearmodels.shared.hypotheses)": [[866, "linearmodels.shared.hypotheses.InvalidTestStatistic"]], "critical_values (invalidteststatistic property)": [[867, "linearmodels.shared.hypotheses.InvalidTestStatistic.critical_values"]], "null (invalidteststatistic property)": [[868, "linearmodels.shared.hypotheses.InvalidTestStatistic.null"]], "pval (invalidteststatistic property)": [[869, "linearmodels.shared.hypotheses.InvalidTestStatistic.pval"]], "stat (invalidteststatistic property)": [[870, "linearmodels.shared.hypotheses.InvalidTestStatistic.stat"]], "waldteststatistic (class in linearmodels.shared.hypotheses)": [[871, "linearmodels.shared.hypotheses.WaldTestStatistic"]], "critical_values (waldteststatistic property)": [[872, "linearmodels.shared.hypotheses.WaldTestStatistic.critical_values"]], "null (waldteststatistic property)": [[873, "linearmodels.shared.hypotheses.WaldTestStatistic.null"]], "pval (waldteststatistic property)": [[874, "linearmodels.shared.hypotheses.WaldTestStatistic.pval"]], "stat (waldteststatistic property)": [[875, "linearmodels.shared.hypotheses.WaldTestStatistic.stat"]], "attrdict (class in linearmodels.shared.utility)": [[876, "linearmodels.shared.utility.AttrDict"]], "clear() (attrdict method)": [[877, "linearmodels.shared.utility.AttrDict.clear"]], "copy() (attrdict method)": [[878, "linearmodels.shared.utility.AttrDict.copy"]], "get() (attrdict method)": [[879, "linearmodels.shared.utility.AttrDict.get"]], "items() (attrdict method)": [[880, "linearmodels.shared.utility.AttrDict.items"]], "keys() (attrdict method)": [[881, "linearmodels.shared.utility.AttrDict.keys"]], "pop() (attrdict method)": [[882, "linearmodels.shared.utility.AttrDict.pop"]], "popitem() (attrdict method)": [[883, "linearmodels.shared.utility.AttrDict.popitem"]], "setdefault() (attrdict method)": [[884, "linearmodels.shared.utility.AttrDict.setdefault"]], "update() (attrdict method)": [[885, "linearmodels.shared.utility.AttrDict.update"]], "values() (attrdict method)": [[886, "linearmodels.shared.utility.AttrDict.values"]]}})