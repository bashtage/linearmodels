[project]
name = "linearmodels"
readme = "README.md"
license = "NCSA"
license-files = [ "LICENSE.md" ]
dynamic = ["dependencies", "version"]
authors = [{ name = "Kevin Sheppard", email = "kevin.k.sheppard@gmail.com" }]
maintainers = [
  { name = "Kevin Sheppard", email = "kevin.k.sheppard@gmail.com" },
]
description = "Linear Panel, Instrumental Variable, Asset Pricing, and System Regression models for Python"
requires-python = ">=3.10"
keywords=[
    "linear models",
    "regression",
    "instrumental variables",
    "IV",
    "panel",
    "fixed effects",
    "clustered",
    "heteroskedasticity",
    "endogeneity",
    "instruments",
    "statistics",
    "statistical inference",
    "econometrics",
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Financial and Insurance Industry",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Programming Language :: Python",
  "Programming Language :: Cython",
  "Topic :: Scientific/Engineering",
]

[project.urls]
homepage = "https://github.com/bashtage/linearmodels"
documentation = "https://bashtage.github.io/linearmodels/"
repository = "https://github.com/bashtage/linearmodels"
changelog = "https://bashtage.github.io/linearmodels/changes.html"

[build-system]
requires = [
  "setuptools>=61",
  "wheel",
  "setuptools_scm[toml]>=8,<9",
  "numpy>=2.0.0rc1,<3",
  "cython>=3.0.10,<4"
]
build-backend = "setuptools.build_meta"

[tool.black]
target-version = ['py39', 'py310', 'py311', 'py312', 'py313']
exclude = '''
(
    \.egg
  | \.git
  | \.mypy_cache
  | \.oytest_cache
  | _build
  | buck-out
  | build
  | dist
)
'''

[tool.setuptools_scm]
write_to = "linearmodels/_version.py"

[tool.pyright]
exclude = [
    "**/tests/**",
]

[tool.mypy]
exclude = [
    "tests",
]

[tool.ruff]
line-length = 88
fix = false
target-version = "py310"

[tool.ruff.lint]
typing-modules = ["statsmodels.compat.python", "compat.python"]

select = [
  # pyflakes
  "F",
  # pycodestyle
  "E", "W",
  # flake8-2020
  "YTT",
  # flake8-bugbear
  "B",
  # flake8-quotes
  "Q",
  # flake8-debugger
  "T10",
  # flake8-gettext
  "INT",
  # pylint
  "PL",
  # flake8-pytest-style
  "PT",
  # misc lints
  "PIE",
  # flake8-pyi
  "PYI",
  # tidy imports
  "TID",
  # implicit string concatenation
  "ISC",
  # flake8-type-checking
  "TC",
  # comprehensions
  "C4",
  # pygrep-hooks
  "PGH",
  # Ruff-specific rules
  "RUF",
  # flake8-bandit: exec-builtin
  "S102",
  # Perflint
  "PERF",
  # flynt
  "FLY",
  # flake8-future-annotations
  "FA",
  # unconventional-import-alias
  "ICN001",
  # flake8-slots
  "SLOT",
  # flake8-raise
  "RSE"
]

ignore = [
      # Required to allow black formatting
      # Whitespace before ':' (Needed for black)
      "E203",
      # Line too long (### > 88 characters) (Needed for black)
      "E501",
      # Multiple statements on one line (colon) (E701)
      "E701",
    # "PERF401",
    # "PLC0415",
    # "PT011",
    # Always ignore
    "PLR0912",
    "PLR0915",
    # Does not work with doc building
    "TC001",
    # Does not work with doc building
    "TC003",

#  # Required to allow black formatting
#  # Whitespace before ':' (Needed for black)
#  "E203",
#  # Line too long (### > 88 characters) (Needed for black)
#  "E501",
#  # Multiple statements on one line (colon) (E701)
#  "E701",
#
#  ### Intentionally disabled
#  # Too many arguments to function call
  "PLR0913", # 635
#  # Too many returns
#  "PLR0911", # 11
#  # Too many branches
#  "PLR0912", # 217
#  # Too many statements
#  "PLR0915", # 220
#  # Redefined loop name
#  "PLW2901", # 55
#  # incorrect-dict-iterator, flags valid Series.items usage
#  "PERF102", # 6
#  # try-except-in-loop, becomes useless in Python 3.11
#  "PERF203", # 9
#  # pytest-parametrize-names-wrong-type
#  "PT006", # 37
#  # pytest-raises-with-multiple-statements
#  "PT012", # 11
#  # Docstring contains ambiguous letter
#  "RUF002", # Do Not Enable
#  # Magic number
  "PLR2004",
#  # import-outside-toplevel
#  "PLC0415", # 835
#
#  ### TODO: Enable gradually
#  # Too many uses of dict(...) instread of {...}
#  # Would be good enforce eventually
#  "C408", # 322
#  # Too many places without match= in pytest raises
#  # Would be goot enforce eventually
#  "PT011", # 511
#  "RUF013", # Enable when Py 3.10 is min
#  "RUF059", # 319
#  "PERF401", # 53
#  # collection-literal-concatenation
#  "RUF005", # 186
#  # pairwise-over-zipped
#  "RUF007", # 1
#  # mutable-class-default
#  "RUF012", #  178
#  # repeated-equality-comparison
#  "PLR1714", # 28
#  # Object does not implement `__hash__` method
#  "PLW1641", # 2
]

[tool.ruff.lint.per-file-ignores]
# relative imports allowed for asv_bench
"linearmodels/__init__.py" = ["PT028"]
"linearmodels/tests/panel/results/execute-stata-simulated-data.py" = ["E501"]
"linearmodels/iv/results.py" = ["PERF203"]
