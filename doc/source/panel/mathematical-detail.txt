
Formulas and Mathematical Detail
================================

Models
------

The estimators in this module are designed to estimate the parameters of
a model specified by

.. math:: y_{it}=x_{it}\beta+\alpha_{i}+\epsilon_{it}

where :math:`i` indexes entities and :math:`t` indexes time,
:math:`x_{it}`\ is :math:`1` by :math:`k` (may include a constant, but
not for all models), :math:`\beta` is :math:`k` by 1, :math:`\alpha_{i}`
is an entity-specific shock and :math:`\epsilon_{it}` is an
idiosyncratic shock. The most important difference in the models is the
assumptions on :math:`\alpha_{i}` which determine whether the estimator
is consistent and/or efficient. There are :math:`N` entities and
:math:`T_{i}` observations for entity :math:`i`.

Fixed Effect Estimation (PanelOLS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The fixed effect estimator with entity effects estimates the model

.. math:: y_{it}-\bar{y}_{i}=(x_{it}-x_{i})\beta+\left(\epsilon_{it}-\bar{\epsilon}_{i}\right).

When the model includes a constant in :math:`x_{it}` then the grand mean
of :math:`y`,
:math:`\bar{\bar{y}}=(NT)^{-1}\sum_{i=1}^{N}\sum_{t=1}^{T_{i}}y_{it}`,
and :math:`x` are re-added to the :math:`y` and :math:`x` terms,
respectively. In practice this imposes the restriction that
:math:`\sum\alpha_{i}=0`. The estimated coefficients for the remaining
parameters are identical as is the estimated parameter covariance and
related statistics.

The fixed effects estimator can handle general fixed effects, not just
entity. While it has special cases that simplify adding entity and/or
time effects, general effects can also be used. For example, one might
want to use industry effect rather than firm effects. Generally the
fixed effect model can be expressed as a least squares dummy variable
(LSDV) estimator of the form

.. math:: y_{it}=x_{it}\beta+d_{1,it}\gamma_{1}+d_{2,it}\gamma_{2}

where :math:`d_{1,it}` and :math:`d_{2,it}` are the dummy variables for
the first and second effect. When the model contains an intercept, one
dummy is dropped form each group and the dummies are orthogonalized to a
constant so that they have mean 0. This allows the constant to be
estimated. If the model does not contain an intercept, the first group
of dummies will contain all values and the second will have one dropped.

**Weights**

When weights are used, the results are identical to the LSDV model where
all variables :math:`y_{it,}`\ :math:`x_{it}`, :math:`d_{1,it}` and
:math:`d_{2,it}`\ (if included) are multiplied by :math:`\sqrt{w_{it}}`.

Random Effect Estimation (RandomEffects)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The random effects estimator makes use of a quasi-differenced model,

.. math:: y_{it}-\hat{\theta}_{i}\bar{y}_{i}=\left(1-\hat{\theta}_{i}\right)\alpha_{i}+(x_{it}-\hat{\theta}_{i}x_{i})\beta+\left(\epsilon_{it}-\hat{\theta}_{i}\bar{\epsilon}_{i}\right)

where :math:`\theta_{i}` is a function of the variance of
:math:`\epsilon_{it}` , the variance of :math:`\alpha_{i}` and the
number of observations for entity :math:`i`,

.. math:: \hat{\theta}_{i}=1-\sqrt{\frac{\sigma_{\epsilon}^{2}}{T_{i}\sigma_{\alpha}^{2}+\sigma_{\epsilon}^{2}}}

so that :math:`\hat{\theta}_{i}\approx1` when :math:`T_{i}` is large (as
long as :math:`\sigma_{\alpha}^{2}>0`) or when :math:`\alpha_{i}` is the
only source of variance. On the other hand,
:math:`\hat{\theta}_{i}\approx0` when the variation due to
:math:`\alpha_{i}` is low. The estimator of the idiosyncratic variance
is

.. math:: \frac{\sum_{i=1}^{N}\sum_{t=1}^{T_{i}}\hat{\epsilon}_{it}^{2}}{\sum_{i=1}^{N}T_{i}-N-K+c}

where :math:`c=1` if the model includes a constant in the regressors.
The variance of :math:`\alpha_{i}` is estimated using the residual sum
of squares from the between regression (see below), :math:`RSS_{b}`,

.. math:: \hat{\sigma}_{\alpha}^{2}=\max\{0,\frac{RSS_{b}}{N-K}-\frac{\hat{\sigma}_{\epsilon}^{2}}{\bar{T}}\}

where :math:`\bar{T}=\frac{n}{\sum_{i=1}^{n}T_{i}^{-1}}`. If the
optional argument for a small sample adjustment is used, the Baltagi and
Chang (1994) estimator is used. This only has an effect when the data
are unbalanced.

**Weights**

When weights are included the averages are replaced by weighted averages
and the final regression terms are all multiplied by
:math:`\sqrt{w_{it}}`.

Between Estimation (BetweenOLS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Between estimation regresses time averages of the dependent variable on
the time averaged values of the regressors,

.. math:: \bar{y}_{i}=\bar{x}_{i}\beta+\bar{\epsilon}_{i}.

When weights are included, weighted averages are used so that

.. math:: \bar{y}_{i}^{w}=\frac{\sum_{t=1}^{T}w_{it}y_{it}}{\sum_{t=1}^{T}w_{it}}

with :math:`\bar{x}_{i}` similarly defined. Note that if the conditional
variance of :math:`y_{it}\propto w_{it}^{-1}` then the conditional
variance of :math:`\bar{y}_{i}^{w}\propto\frac{1}{\sum w_{i}}` and these
weights are used when regressing the weighted averages. Also note that
when :math:`w_{i}=1` but the panel is imbalanced than the conditional
variance of :math:`\bar{y}_{i}^{w}=\bar{y}_{i}\propto\frac{1}{T_{i}}`.
Re-weighting unbalanced panels is exposed through the fit option
``reweight``.

**Weights**

When weights are used, the averages are replaced by weighted averages
and reweighting uses the computed variance of the weighted averages in
the actual between regression.

First Difference Estimation (FirstDifferenceOLS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First difference estimation regresses first difference of the dependent
variable on the first difference the regressors,

.. math:: \Delta y_{it}=\Delta x_{it}\beta+\Delta\epsilon_{it}.

**Weights**

When weights are included, weighted are summed to that the weight on
:math:`\Delta y_{it}` is
:math:`\left(w_{it}^{-1}+w_{it-1}^{-1}\right)^{-1}` which exploits that
the structure that conditional variance of
:math:`y_{it}\propto w_{it}^{-1}` and the variance of the difference is
the sum of the variances when observations are uncorrelated.

Pooled Model Estimation (PooledOLS)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The pooled estimator is a standard regression,

.. math:: y_{it}=x_{it}\beta+\epsilon_{it}.

**Weights**

When weights are included, the data is transformed by multiplying with
the square root of the weights prior to the regression (i.e.,
:math:`y_{it}` is replaced by :math:`\sqrt{w_{it}}y_{it}` and
:math:`x_{it}` is similarly transformed).

Covariance Estimators
---------------------

Standard Covariance Estimator (unadjusted)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The standard covariance estimator is

.. math:: s^{2}\Sigma_{XX}^{-1}

where

.. math:: \Sigma_{XX}=\sum_{i=1}^{N}\sum_{t=1}^{T_{i}}x_{it}^{\prime}x_{it}

and

.. math:: s^{2}=(n_{obs}-k)\sum_{i=1}^{N}\sum_{t=1}^{Ti}\hat{\epsilon}_{it}^{2}

where :math:`n_{obs}=\sum_{i=1}^{N}T_{i}`. If the debiased options is
not used, the :math:`k` is omitted.

Heteroskedastic Covariance Estimator (robust)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The standard covariance estimator is

.. math:: n_{obs}/(n_{obs}-k)\Sigma_{XX}^{-1}\hat{S}\Sigma_{XX}^{-1}

where

.. math:: \hat{S}=\sum_{i=1}^{N}\sum_{t=1}^{T_{i}}\hat{\epsilon}_{it}^{2}x_{it}^{\prime}x_{it}.

The :math:`-k` term is dropped if the debiased options is not used

Clustered Covariance Estimator
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The clustered covariance estimator supports 1 and 2 way clustering.

.. math:: n_{obs}/(n_{obs}-k)\Sigma_{XX}^{-1}\hat{S}_{\mathcal{G}}\Sigma_{XX}^{-1}

where in the case of one-way clustering,

.. math:: \hat{S}_{\mathcal{G}}=\frac{G}{G-1}\frac{n_{obs}-1}{n_{obs}}\sum_{g=1}^{G}\xi_{g}^{\prime}\xi_{g}

where

.. math:: \xi_{g}=\sum_{it\in G_{g}}\hat{\epsilon}_{ii}^{2}x_{it}^{\prime}x_{it}

and :math:`it\in G_{g}` indicates that observation belongs to group
:math:`g`. The two-way clustered replaces
:math:`\hat{S}_{\mathcal{G}}`\ by

.. math:: \hat{S}_{\mathcal{G}_{1}}+\hat{S}_{\mathcal{G}_{2}}-\hat{S}_{\mathcal{G}_{1}\cap\mathcal{G}_{2}}.

Where the group debiasing is applies individually to each of the three
components depending on the number of groups in the three estimators. If
the group debias term is not used, the expression
:math:`\frac{G}{G-1}\frac{n_{obs}-1}{n_{obs}}` is omitted. The
:math:`-k` term is dropped if the debiased estimator is not used.

**Clustering by Variables used as Effects**

When clustering by the same variable used in the effect estimation,
e.g., entity effects with clustering by entity, there the degrees of
freedom used in estimating the effects are *not* counted.

Driscoll-Kraay Covariance Estimator
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The Driscoll-Kraay covariance estimator may be appropriate when the
number of time periods is relatively large (e.g., a large T panel), and
are given by

.. math:: n_{obs}/(n_{obs}-k)\Sigma_{XX}^{-1}\hat{S}_{HAC}\Sigma_{XX}^{-1}

where

.. math::

   \begin{aligned}
   \hat{S}_{HAC} & =\hat{\Gamma}_{0}+\sum_{i=1}^{bw}K(i,bw)(\hat{\Gamma}_{1}+\hat{\Gamma}_{1}^{\prime})\\
   \hat{\Gamma}_{i} & =\sum_{t=i+1}^{T}\xi_{t}^{\prime}\xi_{t}\\
   \xi_{t} & =\sum_{i=1}^{n_{t}}\hat{\epsilon}_{it}x_{it}\end{aligned}

and :math:`K\left(i,bw\right)` is a kernel weighting function. Kernel
supported include the Bartlett, Parzen and Quadratic Spectral.
